[{"ID":1015,"post_author":"1","post_date":"2015-01-06 04:05:01","post_date_gmt":"2015-01-06 04:05:01","post_content":"<a href=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2015\/01\/extract-url-contents.jpg\"><img src=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2015\/01\/extract-url-contents.jpg\" alt=\"extract-url-contents\" width=\"599\" height=\"200\" class=\"alignnone size-full wp-image-1018\" \/><\/a>\r\n\r\n<a href = \"http:\/\/carlofontanos.com\/demo\/accessing-html-dom-elements\/\" class = \"btn btn-success\" target = \"_blank\">Demo<\/a> <a href=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2015\/01\/extract-url-contents.rar\" class = \"btn btn-primary\">Download Demo<\/a>\r\n\r\n&nbsp;\r\n\r\n<h3>Tutorial<\/h3>\r\n\r\n<a href=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2015\/01\/simple_html_dom.inc_.rar\" class = \"btn btn-primary\">Download Library<\/a>\r\n\r\nInclude the Library\r\n<code>include_once(\"include\/simple_html_dom.inc.php\");<\/code>\r\n\r\nGet URL Content:\r\n[cc lang = \"php\"]\r\n$get_url = 'http:\/\/carlofontanos.com';\r\n$get_content = file_get_html($get_url); \r\nprint_r($get_content);\r\n[\/cc]\r\n\r\nGet Page Title:\r\n[cc lang = \"php\"]\r\n$get_content = file_get_html($get_url); \r\nforeach($get_content->find('title') as $element) {\r\n\t$page_title = $element->plaintext;\r\n\tprint_r($page_title);\r\n}\r\n[\/cc]\r\n\r\nGet Body Text\r\n[cc lang = \"php\"]\r\n$get_content = file_get_html($get_url); \r\nforeach($get_content->find('body') as $element) {\r\n\t$page_body = trim($element->plaintext);\r\n\t$pos = strpos($page_body, ' ', 200); \/\/Find the numeric position to substract\r\n\t$page_body = substr($page_body,0,$pos ); \/\/shorten text to 200 chars\r\n\tprint_r($page_body . '<br \/>');\r\n}\r\n[\/cc]\r\n\r\nGet all images in the content:\r\n[cc lang = \"php\"]\r\n$image_urls = array();\r\nforeach($get_content->find('img') as $element) {\r\n\tif($element->src){\r\n\t\techo '<img src =\"' . $element->src . '\" width = \"100\" height = \"100\" \/>';\r\n\t}\t\r\n}\r\n[\/cc]","post_title":"Accessing HTML DOM Elements with PHP","post_excerpt":"Get contents of a website by parsing the DOM Elements","post_status":"publish","comment_status":"open","ping_status":"closed","post_password":"","post_name":"accessing-html-dom-elements-with-php","to_ping":"","pinged":"","post_modified":"2015-02-09 05:48:32","post_modified_gmt":"2015-02-09 05:48:32","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=1015","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":912,"post_author":"1","post_date":"2014-11-18 06:18:26","post_date_gmt":"2014-11-18 06:18:26","post_content":"<a href=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2014\/11\/html-extension.png\"><img class=\"size-full wp-image-923 alignleft\" src=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2014\/11\/html-extension.png\" alt=\"html-extension\" width=\"200\" \/><\/a>\r\n<h3>Reasons to add .html extension to your Permalinks<\/h3>\r\n1. You have a static html site you want to convert to WordPress but do not want to change the URL names. This is a good reason why you should make WordPress html extensions in terms of permalink structure, if you do not want to do a lot of 301 redirects.\r\n2. In my personal experience, .html pages rank higher than my normal WordPress pages. This could be wrong for many reasons. So I can not say 100% that .html WordPress pages rank higher or are better for SEO.\r\n3. People say it looks better. It feels and looks static and some people view this subconsciously with a little more trust than a dynamic page.\r\n\r\n&nbsp;\r\n\r\n<hr \/>\r\n\r\nBy default, .html extension is possible on posts but not on pages. So today I am going to show you how you can add .html extension to both posts and pages in WordPress\r\n<h3>Adding .html Extension to Posts<\/h3>\r\nGo to Settings -&gt; Permalinks then select the \"Custom Structure\" radio button. Change the structure of the code to:\r\n<code>\/%postname%.html\/<\/code>\r\n\r\nDone!\r\n<h3>Adding .html Extension to Pages<\/h3>\r\nAdd this block of code into your functions.php\r\n[cc lang = \"php\"]\r\nadd_action('init', 'html_page_permalink', -1);\r\nregister_activation_hook(__FILE__, 'cvf_active');\r\nregister_deactivation_hook(__FILE__, 'cvf_deactive');\r\n\r\n\r\nfunction html_page_permalink() {\r\n\t\r\n\tglobal $wp_rewrite;\r\n\t\r\n\tif ( !strpos($wp_rewrite->get_page_permastruct(), '.html')){\r\n\t\t$wp_rewrite->page_structure = $wp_rewrite->page_structure . '.html';\r\n\t}\r\n\t\r\n}\r\nadd_filter('user_trailingslashit', 'no_page_slash',66,2);\r\nfunction no_page_slash($string, $type){\r\n\t\r\n\tglobal $wp_rewrite;\r\n\t\r\n\tif ($wp_rewrite->using_permalinks() && $wp_rewrite->use_trailing_slashes==true && $type == 'page'){\r\n\t\treturn untrailingslashit($string);\r\n\t} else {\r\n\t\treturn $string;\r\n\t}\r\n\t\r\n}\r\n\r\nfunction cvf_active() {\r\n\r\n\tglobal $wp_rewrite;\r\n\t\r\n\tif ( !strpos($wp_rewrite->get_page_permastruct(), '.html')){\r\n\t\t$wp_rewrite->page_structure = $wp_rewrite->page_structure . '.html';\r\n\t}\r\n\t$wp_rewrite->flush_rules();\r\n\t\r\n}\r\n\r\nfunction cvf_deactive() {\r\n\r\n\tglobal $wp_rewrite;\r\n\t\r\n\t$wp_rewrite->page_structure = str_replace(\".html\",\"\",$wp_rewrite->page_structure);\r\n\t$wp_rewrite->flush_rules();\r\n\t\r\n}\r\n[\/cc]\r\n","post_title":"Add .html extension to permalinks","post_excerpt":"Tutorial on how to add .html extension to both posts and pages in WordPress","post_status":"publish","comment_status":"open","ping_status":"closed","post_password":"","post_name":"add-html-extension-to-permalinks","to_ping":"","pinged":"","post_modified":"2015-09-03 13:18:34","post_modified_gmt":"2015-09-03 13:18:34","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=912","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":583,"post_author":"1","post_date":"2014-08-11 08:52:46","post_date_gmt":"2014-08-11 08:52:46","post_content":"It would be nice to have a Widget that displays statistics of your Plugin data, statistics in chart form, or just summary of calculated data in table format. In this tutorial I will be showing you how to add a simple widget into your Admin Dashboard that will appear on top of all the other Dashboard Widgets.\r\n\r\nIn WordPress we have this built in function: \"wp_add_dashboard_widget();\" which automatically registers a new Widget into the Admin Dashboard, all we have to do is provide the parameters and hook it into the \"wp_dashboard_setup\".\r\n\r\nPlace this block of code into your theme's functions.php (Explanations are on the code)\r\n\r\n[cc lang = \"php\"]\r\nadd_action('wp_dashboard_setup', 'example_add_dashboard_widgets');\r\nfunction example_add_dashboard_widgets() {\r\n \twp_add_dashboard_widget( 'my_dashboard_widget', 'My Dashboard Widget', 'my_dashboard_widget_function' );\r\n \t\r\n \t\/\/ Globalize the metaboxes array, this holds all the widgets for wp-admin\r\n \tglobal $wp_meta_boxes;\r\n \t\r\n \t\/\/ Get the regular dashboard widgets array with our new widget appearing at the very end \r\n \t$normal_dashboard = $wp_meta_boxes['dashboard']['normal']['core'];\r\n \t\r\n \t\/\/ Backup and delete our new dashboard widget from the end of the array\r\n \t$example_widget_backup = array( 'example_dashboard_widget' => $normal_dashboard['example_dashboard_widget'] );\r\n \tunset( $normal_dashboard['example_dashboard_widget'] );\r\n \r\n \t\/\/ Merge the two arrays together so our widget is at the beginning\r\n \t$sorted_dashboard = array_merge( $example_widget_backup, $normal_dashboard );\r\n \r\n \t\/\/ Save the sorted array back into the original metaboxes \r\n \t$wp_meta_boxes['dashboard']['normal']['core'] = $sorted_dashboard;\r\n}\r\n\r\nfunction my_dashboard_widget_function() {\r\n\t\/\/ You can remove this line and start placing your own codes.\r\n\techo \"Start getting your hands dirty on this area.\";\r\n}\r\n[\/cc]\r\n\r\nIf you want to remove all the other Widgets that you no longer need, you can click on the \"Screen Options\" found at the top-right portion of your Admin Dashboard Screen and just uncheck all the other widgets.\r\n\r\nIn some situations, especially on multi-user blogs, it may be useful to completely remove widgets from the interface. Each individual user can, by default, turn off any given widget using the Screen Options tab at the top, but if you have a lot of non-technical users it might be nicer for them to not see it at all.\r\n\r\nYou can use this block of code to remove all widgets in your Admin Dashboard:\r\n[cc lang = \"php\"]\r\nfunction remove_dashboard_meta() {\r\n\tremove_meta_box( 'dashboard_incoming_links', 'dashboard', 'normal' );\r\n\tremove_meta_box( 'dashboard_plugins', 'dashboard', 'normal' );\r\n\tremove_meta_box( 'dashboard_primary', 'dashboard', 'normal' );\r\n\tremove_meta_box( 'dashboard_secondary', 'dashboard', 'normal' );\r\n\tremove_meta_box( 'dashboard_quick_press', 'dashboard', 'side' );\r\n\tremove_meta_box( 'dashboard_recent_drafts', 'dashboard', 'side' );\r\n\tremove_meta_box( 'dashboard_recent_comments', 'dashboard', 'normal' );\r\n\tremove_meta_box( 'dashboard_right_now', 'dashboard', 'normal' );\r\n\tremove_meta_box( 'dashboard_activity', 'dashboard', 'normal');\/\/since 3.8\r\n}\r\nadd_action( 'admin_init', 'remove_dashboard_meta' );\r\n[\/cc]\r\n\r\nYou can now use this as your base code for implementing more sophisticated statistics into your own Dashboard Widget!\r\n\r\n<em>Here is a sample jQuery PIE chart that I have integrated into my Dashboard widget which shows the statistics of all browsers that where used by viewers of my website.<\/em>\r\n\r\n<a href=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2014\/08\/dashboard-browser-pie-widget.png\"><img src=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2014\/08\/dashboard-browser-pie-widget.png\" alt=\"dashboard-browser-pie-widget\" width=\"774\" height=\"555\" class=\"alignnone size-full wp-image-593\" \/><\/a>","post_title":"Add a Widget Area in your WordPress Admin Dashboard","post_excerpt":"Adding a simple Widget Area on top of all the other widgets in your WordPress Admin Dashboard.","post_status":"publish","comment_status":"open","ping_status":"closed","post_password":"","post_name":"add-a-widget-area-in-your-wordpress-admin-dashboard","to_ping":"","pinged":"","post_modified":"2015-02-09 07:06:12","post_modified_gmt":"2015-02-09 07:06:12","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=583","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":1054,"post_author":"1","post_date":"2015-01-21 05:14:49","post_date_gmt":"2015-01-21 05:14:49","post_content":"<a href=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2015\/01\/watermark_images_using_php1.jpg\"><img src=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2015\/01\/watermark_images_using_php1.jpg\" alt=\"watermark_images_using_php\" width=\"1200\" height=\"800\" class=\"alignnone size-full wp-image-1106\" \/><\/a>\r\n\r\n[cc lang = \"php\"]\r\n<?php\r\n\/**\r\n * Adds a watermark \/ stamp to images. \r\n *\r\n * @author\t\tCarl Victor Fontanos\r\n * @authoruri\twww.carlofontanos.com\r\n * @date\t\t01-20-2015\r\n *\r\n *\/ \r\nfunction cvf_add_watermark($image_path, $stamp_path){\r\n\t\r\n\t$file = pathinfo($image_path);\r\n\t\r\n\t\/\/ Declare valid formats\r\n\t$valid_formats = array(\"jpg\", \"jpeg\", \"gif\", \"png\");\r\n\t\r\n\t\/\/ Check if image exists\r\n\tif(!file_exists($image_path)){\r\n\t\treturn false;\r\n\t\r\n\t\/\/ Check if file meets extension requirements\r\n\t} else if(!in_array($file['extension'], $valid_formats)) {\r\n\t\treturn false;\r\n\t\t\r\n\t} else {\r\n\t\t\r\n\t\t\/\/ Load the stamp and the photo to apply the watermark to\r\n\t\t$stamp = imagecreatefrompng($stamp_path);\r\n\t\t\r\n\t\t\/\/ Designate image depending on extension\r\n\t\tif($file['extension'] == 'jpg' || $file['extension'] == 'jpeg'){\r\n\t\t\t$image = imagecreatefromjpeg($image_path);\r\n\t\t} else if ($file['extension'] == 'png'){\r\n\t\t\t$image = imagecreatefrompng($image_path);\r\n\t\t} else if ($file['extension'] == 'gif'){\r\n\t\t\t$image = imagecreatefromgif($image_path);\r\n\t\t}\r\n\t\r\n\r\n\t\t\/\/ Set the margins for the stamp and get the height\/width of the stamp image\r\n\t\t$marge_right = 10;\r\n\t\t$marge_bottom = 10;\r\n\t\t$sx = imagesx($stamp);\r\n\t\t$sy = imagesy($stamp);\r\n\r\n\t\t\/\/ Copy the stamp image onto our photo using the margin offsets and the photo \r\n\t\t\/\/ width to calculate positioning of the stamp. \r\n\t\timagecopy(\r\n\t\t\t$image, \r\n\t\t\t$stamp, \r\n\t\t\timagesx($image) - $sx - $marge_right, \r\n\t\t\timagesy($image) - $sy - $marge_bottom, \r\n\t\t\t0, \r\n\t\t\t0, \r\n\t\t\timagesx($stamp), \r\n\t\t\timagesy($stamp)\r\n\t\t);\r\n\r\n\t\t\/\/ Output as PNG file and free memory\r\n\t\theader('Content-type: image\/png');\r\n\t\timagepng($image);\r\n\t\timagedestroy($image);\r\n\t}\r\n}\r\n\r\n?>\r\n[\/cc]\r\n\r\n<p><h3>Usage<\/h3><\/p>\r\n<code>echo cvf_add_watermark('http:\/\/carlofontanos.com\/path\/to\/image\/example.png', 'watermark.png'); <\/code>\r\n","post_title":"Add Watermark to Images using PHP","post_excerpt":"PHP tutorial showing how to watermark images using PHP","post_status":"publish","comment_status":"open","ping_status":"open","post_password":"","post_name":"add-watermark-to-images-using-php","to_ping":"","pinged":"","post_modified":"2015-02-24 02:40:13","post_modified_gmt":"2015-02-24 02:40:13","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=1054","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":155,"post_author":"1","post_date":"2014-04-27 12:45:32","post_date_gmt":"2014-04-27 12:45:32","post_content":"<img src=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2014\/04\/Math_Captcha-300x202.jpg\" alt=\"Math_Captcha\" width=\"300\" height=\"202\" class=\"alignnone size-medium wp-image-249\" \/>\r\n\r\nFirst is we need to create a new session by adding this code:\r\n\r\n[cc lang = \"php\"]\r\nsession_start();\r\n[\/cc]\r\n\r\nSecond, we generate the numbers that we will be using for the Math Captcha: \r\n\r\n[cc lang = \"php\"]\r\n$num1=rand(1,9); \/\/Generate First number between 1 and 9  \r\n$num2=rand(1,9); \/\/Generate Second number between 1 and 9  \r\n$captcha_total=$num1+$num2;  \r\n[\/cc]\r\n\r\nThird, we set the Math question into a variable (This his how the question will look like.)\r\n\r\n[cc lang = \"php\"]\r\n$math = \"$num1\".\" + \".\"$num2\".\" =\";\r\n[\/cc]\r\n\r\nFourth, we set the properties of our Match Captcha image.\r\n\r\n[cc lang = \"php\"]\r\n$image = imagecreatetruecolor(120, 30); \/\/Change the numbers to adjust the size of the image\r\n$black = imagecolorallocate($image, 0, 0, 0);\r\n$color = imagecolorallocate($image, 0, 100, 90);\r\n$white = imagecolorallocate($image, 0, 26, 26);\r\n[\/cc]\r\n\r\nFinally, We create the image:\r\n\r\n[cc lang = \"php\"]\r\nimagefilledrectangle($image,0,0,399,99,$white);\r\nimagettftext ($image, 20, 0, 20, 25, $color, $font, $math );\/\/Change the numbers to adjust the font-size\r\n\r\nheader(\"Content-type: image\/png\");\r\nimagepng($image);\r\n[\/cc]\r\n\r\nSave this as captcha.php, here is the full code:\r\n\r\n[cc lang = \"php\"]\r\nsession_start();\r\n\r\n$num1=rand(1,9); \/\/Generate First number between 1 and 9  \r\n$num2=rand(1,9); \/\/Generate Second number between 1 and 9  \r\n$captcha_total=$num1+$num2;  \r\n\r\n$math = \"$num1\".\" + \".\"$num2\".\" =\";  \r\n\r\n$_SESSION['rand_code'] = $captcha_total;\r\n\r\n$font = 'mmobuyit-captcha-fonts\/Arial.ttf';\r\n\r\n$image = imagecreatetruecolor(120, 30); \/\/Change the numbers to adjust the size of the image\r\n$black = imagecolorallocate($image, 0, 0, 0);\r\n$color = imagecolorallocate($image, 0, 100, 90);\r\n$white = imagecolorallocate($image, 0, 26, 26);\r\n\r\nimagefilledrectangle($image,0,0,399,99,$white);\r\nimagettftext ($image, 20, 0, 20, 25, $color, $font, $math );\/\/Change the numbers to adjust the font-size\r\n\r\nheader(\"Content-type: image\/png\");\r\nimagepng($image);\r\n[\/cc]\r\n\r\nNext step is to create our form and a some validations. \r\n\r\nValidation: \r\n\r\n[cc lang = \"php\"]\r\n$errors = array();\r\n\r\nif ($_POST['registerUser']) {\r\n\r\n\tif (empty($errors) === true) {\r\n\r\n        if (empty($_POST['captcha_entered'])) {\r\n\t\t\t$errors[] = '<p class = \"input-error\">Please answer the Captcha Question<\/p>';\r\n\t\t} elseif ($_REQUEST['captcha_entered']!=$_SESSION['rand_code']) {\r\n\t\t\t$errors[] = '<p class = \"input-error\">Your answer to the Math Question is incorrect.<\/p>';\r\n\t\t}\r\n\t}\t\r\n}\r\n[\/cc]\r\n\r\nSample Form: \r\n\r\n[cc lang = \"html\"]\r\n<form method=\"post\" class=\"register\" id = \"register-ajax\">\r\n\r\n<?php \r\nif (empty($_POST) === false && empty($errors) === true) {\r\n\t\t\r\n\techo 'Success';\r\n        \/\/Run some codes here. \r\n\t\t\t\r\n} else if (empty($errors) === false) {\r\n\t\t\r\n\techo output_errors($errors);\r\n}\r\n?>\r\n\t<p>\r\n\t\t<img src=\"captcha.php\" \/>\r\n\t\t<input name=\"captcha_entered\" style = \"width: 100px !important;\" type=\"text\" id=\"captcha_entered\" size=\"5\" maxlength=\"2\" placeholder = \"Answer\" \/>\r\n\t\t<input type=\"hidden\" name=\"captcha_total\" id=\"captcha_total\" value=\"<?php echo $_SESSION['rand_code']; ?>\" \/>\r\n\t<\/p>\r\n\t<p>\r\n\t\t<input type=\"submit\" class=\"button\" name=\"registerUser\" value=\"<?php _e( 'Register' ); ?>\" \/>\r\n\t<\/p>\r\n<\/form> \r\n[\/cc]\r\n\r\nCheckout my other PHP Tutorials by following this <a href = \"http:\/\/carlofontanos.com\/php-list\/\">LINK<\/a> ","post_title":"Adding a Simple Math Captcha to your Form in PHP","post_excerpt":"Useful Math Captcha to prevent robots from submitting automated requests","post_status":"publish","comment_status":"open","ping_status":"open","post_password":"","post_name":"adding-a-simple-math-captcha-to-your-form-in-php","to_ping":"","pinged":"","post_modified":"2015-02-09 07:35:20","post_modified_gmt":"2015-02-09 07:35:20","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=155","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":259,"post_author":"1","post_date":"2014-05-06 16:20:34","post_date_gmt":"2014-05-06 16:20:34","post_content":"<img src=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2014\/05\/extra-profile-fields.jpg\" alt=\"extra-profile-fields\" width=\"602\" height=\"281\" class=\"alignnone size-full wp-image-268\" \/>\r\n\r\nHave you ever created a custom front-end Registration page or Profile page for your users in your website? One that involves adding extra user fields such as Facebook, Twitter, Skype, etc... ??\r\n\r\nThe problem with adding extra usermeta fields is it does not automatically register them to the admin users back-end, therefore if you were the admin and you want to edit the profile fields of a user, you might not be able to find the other meta fields from the user's front-end profile since WordPress does not automatically create back-end fields for new user meta fields.\r\n\r\nSo today we are going to create a function containing the fields we want to register and then we will be hooking it into the admin profile editor page.\r\n\r\nOk for example we have user meta fields already available for us namely: gmail, yahoo and hotmail and these were part of your form fields when you created your custom registration page. Now we want the admin to be able to edit these 3 meta fields from the admin area, so we first create a form for the 3 fields:\r\n\r\n[cc lang = \"php\"]\r\nfunction extra_profile_fields( $user ) { ?>\r\n\t\r\n\t<h3><?php _e('Extra User Details'); ?><\/h3>\r\n\t<table class=\"form-table\">\r\n\t\t<tr>\r\n\t\t\t<th><label for=\"gmail\">Gmail<\/label><\/th>\r\n\t\t\t<td>\r\n\t\t\t<input type=\"text\" name=\"gmail\" id=\"gmail\" value=\"<?php echo esc_attr( get_the_author_meta( 'gmail', $user->ID ) ); ?>\" class=\"regular-text\" \/><br \/>\r\n\t\t\t<span class=\"description\">Enter your Gmail.<\/span>\r\n\t\t\t<\/td>\r\n\t\t<\/tr>\r\n\t\t<tr>\r\n\t\t\t<th><label for=\"yahoo\">Yahoo<\/label><\/th>\r\n\t\t\t<td>\r\n\t\t\t<input type=\"text\" name=\"yahoo\" id=\"yahoo\" value=\"<?php echo esc_attr( get_the_author_meta( 'yahoo', $user->ID ) ); ?>\" class=\"regular-text\" \/><br \/>\r\n\t\t\t<span class=\"description\">Enter a Yahoo Email.<\/span>\r\n\t\t\t<\/td>\r\n\t\t<\/tr>\r\n\t\t<tr>\r\n\t\t\t<th><label for=\"hotmail\">Hotmail<\/label><\/th>\r\n\t\t\t<td>\r\n\t\t\t<input type=\"text\" name=\"hotmail\" id=\"hotmail\" value=\"<?php echo esc_attr( get_the_author_meta( 'hotmail', $user->ID ) ); ?>\" class=\"regular-text\" \/><br \/>\r\n\t\t\t<span class=\"description\">Enter your Hotmail.<\/span>\r\n\t\t\t<\/td>\r\n\t\t<\/tr>\r\n\t<\/table>\r\n<?php \r\n\r\n}\r\n\r\n\/\/ Then we hook the function to \"show_user_profile\" and \"edit_user_profile\"\r\nadd_action( 'show_user_profile', 'extra_profile_fields', 10 );\r\nadd_action( 'edit_user_profile', 'extra_profile_fields', 10 );\r\n[\/cc]\r\n\r\nBTW, it's in a Form structure so that we can have full control over the custom fields (like if you want to add some other labels or fancy designs)\r\n\r\nNow for the saving part, we need to create a function that will hook to the save button of the user profile page, we use: \"personal_options_update\" and \"edit_user_profile_update\"\r\n\r\n[cc lang = \"php\"]\r\nfunction save_extra_profile_fields( $user_id ) {\r\n\r\n\tif ( !current_user_can( 'edit_user', $user_id ) )\r\n\t\treturn false;\r\n\r\n\t\/* Edit the following lines according to your set fields *\/\r\n\tupdate_usermeta( $user_id, 'gmail', $_POST['gmail'] );\r\n\tupdate_usermeta( $user_id, 'yahoo', $_POST['yahoo'] );\r\n\tupdate_usermeta( $user_id, 'hotmail', $_POST['hotmail'] );\r\n}\r\n\r\nadd_action( 'personal_options_update', 'save_extra_profile_fields' );\r\nadd_action( 'edit_user_profile_update', 'save_extra_profile_fields' );\r\n[\/cc]\r\n\r\nNow the problem with the above code is all users will have these fields on their back-end profile. So if you are dealing with users with different roles and capabilities, you might not want them to have these fields. A quick fix to this is to use the current_user_can(); function of Wordpress to prevent other roles from seeing these fields.\r\n\r\nJust wrap your form with:\r\n\r\n[cc lang = \"php\"]\r\n<?php if ( user_can( $user->ID, 'roles\/capabilities') ): ?>\r\n    \/\/ Your Form \r\n<?php endif; ?>\r\n[\/cc]\r\n\r\nCheckout my other WordPress Tutorials by following this <a href = \"http:\/\/carlofontanos.com\/wordpress-list\/\">LINK<\/a> ","post_title":"Adding Extra User Profile Fields in Wordpress Admin","post_excerpt":"Create Admin fields for new User Meta data that came from your Custom User Pages","post_status":"publish","comment_status":"open","ping_status":"open","post_password":"","post_name":"adding-extra-user-profile-fields-in-wordpress-admin","to_ping":"","pinged":"","post_modified":"2015-02-09 07:29:00","post_modified_gmt":"2015-02-09 07:29:00","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=259","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":1362,"post_author":"1","post_date":"2016-07-26 00:50:38","post_date_gmt":"2016-07-25 16:50:38","post_content":"<ol>\r\n \t<li>Create a folder in your \"<strong>app<\/strong>\" directory, name it \"<strong>Helpers<\/strong>.<\/li>\r\n \t<li>Then within your <strong>Helpers<\/strong> folder, add your function files.\r\nName your files anything you like.\r\nHaving a folder with multiple files allows us to avoid one big file that gets\r\ntoo long and unmanageable.<\/li>\r\n \t<li>Open your command line then\u00a0navigate to your project ROOT folder\r\nthen create\u00a0a service provider called \"HelperServiceProvider.php\" by\r\nrunning the php artisan command:\r\n<code>php artisan make:provider HelperServiceProvider<\/code><\/li>\r\n \t<li>Open the file:\u00a0<strong>app\/providers\/HelperServiceProvider.php<\/strong>\r\nUpdate the \"<strong>register<\/strong>\" method with the following snippet:\r\n<code>\r\npublic function register()\r\n{\r\n\tforeach (glob(app_path().'\/Helpers\/*.php') as $filename){\r\n\t\trequire_once($filename);\r\n\t}\r\n}\r\n<\/code>\r\n<li>Lastly, register the service provider in your <strong>config\/app.php<\/strong> in the providers array\r\n <code>\r\n'providers' => [\r\n\t'App\\Providers\\HelperServiceProvider',\r\n]    \r\n <\/code>\r\n  \r\n <br \/>\r\n  Now any file in your Helpers directory is loaded, and ready for use.\r\n <\/li>\r\n<\/ol>","post_title":"Adding Helper Files in Laravel 5","post_excerpt":"Demonstrates how to properly add helper files to your laravel app","post_status":"publish","comment_status":"open","ping_status":"open","post_password":"","post_name":"adding-helper-files-in-laravel-5","to_ping":"","pinged":"","post_modified":"2016-07-26 12:05:20","post_modified_gmt":"2016-07-26 04:05:20","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=1362","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":1741,"post_author":"1","post_date":"2017-01-09 16:37:34","post_date_gmt":"2017-01-09 08:37:34","post_content":"In this tutorial you will learn how to create a multi-file upload form that submits via Ajax. The plan is to store the files in a folder located in your server and save the file names in single database field named \"images\" with the format of a JSON string, like this:  [\"image_101.jpg\",\"image_102.jpg\",\"image_103.jpg\",\"image_104.jpg\",\"image_105.jpg\", .... ] but if you do not like this format you can still use this tutorial, you just need to do a few changes in the controller to fit your web app requirements. \r\n\r\nLet's get started.\r\n\r\n1. Include the CDN script bellow into the footer part of your application (after jquery). This is the plugin that we'll be using for submitting files asynchronously via Ajax.\r\n[cc lang=\"php\"]@Scripts.Render(\"\/\/cdnjs.cloudflare.com\/ajax\/libs\/jquery.form\/3.51\/jquery.form.min.js\")[\/cc]\r\n\r\n2. In your razor view, add the following form:\r\n[cc lang=\"html\"]\r\n@using (Html.BeginForm(\"Index\", \"Upload\", new { id = @Model.id }, FormMethod.Post, new { @class = \"upload-images\" }))\r\n{\r\n\t@Html.AntiForgeryToken()\r\n\t@Html.HiddenFor(model => model.id)\r\n\t\t\r\n\t<div class=\"form-group\">\r\n\t\t@Html.LabelFor(model => model.images, \"Select Images\")\r\n\t\t<input type=\"file\" name=\"images[]\" accept=\"image\/*\" class=\"form-control\" multiple \/>\r\n\t<\/div>\r\n\t\t\r\n\t<input type=\"submit\" class=\"btn btn-success\" value=\"Upload\" \/>\r\n}\r\n[\/cc]\r\n\r\n3. Then in your controller, include the the method bellow. \r\n[cc lang=\"php\"]\r\n[HttpPost]\r\n[ValidateAntiForgeryToken]\r\npublic string Index([Bind(Include = \"images\")] Product product)\r\n{\r\n\t\/* Let's put our variables in a dictionary *\/\r\n\tvar response = new Dictionary<string, string> {\r\n\t\t{ \"status\", \"0\" },\r\n\t\t{ \"message\", \"\" },\r\n\t\t{ \"images\", \"\" }\r\n\t};\r\n\r\n\tif (ModelState.IsValid)\r\n\t{\r\n\t\t\/* Image uploade handler *\/\r\n\t\ttry\r\n\t\t{\r\n\t\t\tHttpFileCollection hfc = System.Web.HttpContext.Current.Request.Files; \/* Retrieve files from form request *\/\r\n\t\t\tstring path = \"\/Content\/Images\/Uploads\/\"; \/* Location to store images *\/\r\n\t\t\tList<string> images = new List<string>(); \/* Initialize an empty list for our images *\/\r\n\r\n\t\t\t\/* Check if Products Directory exists *\/\r\n\t\t\tif (!Directory.Exists(path))\r\n\t\t\t{\r\n\t\t\t\t\/* Create Products directory if not exists *\/\r\n\t\t\t\tDirectory.CreateDirectory(Server.MapPath(\"~\") + path);\r\n\t\t\t}\r\n\r\n\t\t\t\/* Process each image *\/\r\n\t\t\tfor (int i = 0; i < hfc.Count; i++)\r\n\t\t\t{\r\n\t\t\t\tHttpPostedFile hpf = hfc[i];\r\n\t\t\t\tif (hpf.ContentLength > 0)\r\n\t\t\t\t{\r\n\t\t\t\t\tstring file_name_original = Path.GetFileNameWithoutExtension(hpf.FileName); \/* Original file name with extension *\/\r\n\t\t\t\t\tstring file_name = GlobalMethods.GenerateRandomString(20); \/* Generate a random string for our image name *\/\r\n\t\t\t\t\tstring file_extension = Path.GetExtension(hpf.FileName); \/* Get file extension *\/\r\n\t\t\t\t\tstring file_path_with_file_name = path + file_name + file_extension; \/* Final image path *\/\r\n\r\n\t\t\t\t\t\/* Append single image to our images list *\/\r\n\t\t\t\t\timages.Add(file_name + file_extension);\r\n\r\n\t\t\t\t\t\/* Move files to the specified directory on the \"path\" variable *\/\r\n\t\t\t\t\thpf.SaveAs(Server.MapPath(file_path_with_file_name));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t\/* If there is an image uploaded, let's include them to the response dictionary *\/\r\n\t\t\tif (images.Count > 0)\r\n\t\t\t{\r\n\t\t\t\tif (!String.IsNullOrEmpty(original_data_detached.images))\r\n\t\t\t\t{\r\n\t\t\t\t\t\/* Get existing images from database then convert it to an array *\/\r\n\t\t\t\t\tvar old_images_array = new JavaScriptSerializer().Deserialize<dynamic>(original_data_detached.images);\r\n\r\n\t\t\t\t\t\/* Add old images to the new images list variable*\/\r\n\t\t\t\t\tforeach (var image in old_images_array)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\timages.Add(image);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t\/* Convert images list to json *\/\r\n\t\t\t\tresponse[\"images\"] = new JavaScriptSerializer().Serialize(images);\r\n\r\n\t\t\t\tproduct.images = response[\"images\"];\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch (Exception ex)\r\n\t\t{\r\n\t\t\tthrow ex;\r\n\t\t}\r\n\t\t\r\n\t\tdb.Entry(product).State = EntityState.Modified;\r\n\r\n\t\t\/* Do not update images field if there are no new posted images *\/\r\n\t\tif (String.IsNullOrEmpty(product.images))\r\n\t\t{\r\n\t\t\tdb.DontUpdateProperty<Product>(\"images\");\r\n\t\t}\r\n\r\n\t\tdb.SaveChanges();\r\n\t\tresponse[\"status\"] = \"1\";\r\n\t\tresponse[\"message\"] = \"Successfully Updated\";\r\n\t}\r\n\r\n\t\/* Then we return the Dictionary in json format to our front-end *\/\r\n\tstring json = new JavaScriptSerializer().Serialize(response);\r\n\treturn json;\r\n}\r\n[\/cc]\r\n                                          \r\nNote: You will have to change the model names above to fit in your application. But if you want to see my model implementation, here it is: \r\n[cc lang=\"php\"]\r\nnamespace MyApp.Models\r\n{\r\n    public class Product\r\n    {\r\n        public int id { get; set; }\r\n        public string images { get; set; }\r\n    }\r\n\r\n    public class ProductDBContext : DbContext\r\n    {\r\n        public DbSet<Product> Products { get; set; }\r\n    }\r\n}                                          \r\n[\/cc]\r\n                                          \r\n4. Create the file: <strong>.\/Scripts\/app.js<\/strong> then add the code bellow. This will handle our ajax submit. Make sure to include this file in the footer part of your application (AFTER jquery and jquery.form)\r\n[cc lang=\"javascript\"]\r\n$(document).ready(function () {\r\n\t$('.upload-images').ajaxForm({\r\n\t\tsuccess: function (response, textStatus, xhr, form) {\r\n\t\t\tresponse = JSON.parse(response);\r\n                                          \r\n\t\t\tif (response.status == 1) {\r\n\t\t\t\t\talert(response.message);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (response.images) {\r\n\t\t\t\t$.each(JSON.parse(response.images), function (index, image) {\r\n\t\t\t\t\t\/* Code what to do with the returned images *\/\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n});\r\n[\/cc]\r\n                                          \r\n5. That's it. now test your web app.       ","post_title":"Ajax Multi File Upload in ASP.NET MVC 5","post_excerpt":"In this tutorial we will work with uploading files asynchronously via Ajax","post_status":"publish","comment_status":"open","ping_status":"open","post_password":"","post_name":"ajax-multi-file-upload-in-asp-net-mvc-5","to_ping":"","pinged":"","post_modified":"2017-01-09 17:15:49","post_modified_gmt":"2017-01-09 09:15:49","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=1741","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":1006,"post_author":"1","post_date":"2014-12-16 09:44:48","post_date_gmt":"2014-12-16 09:44:48","post_content":"Uploading files asynchronously can be a pain at the best of times, but when coupled with CodeIgniter, it can be a particularly frustrating experience. Gladly, there is now a very easy way to upload multiple files using jQuery Form Plugin.\r\n\r\nI assume you have a working knowledge of CodeIgniter and jQuery, and that you already have installed and set-up CodeIgniter.\r\n\r\n<h3>Download the Multi File Upload Extension<\/h3>\r\nDownload Extension for Codeiginiter <strong>version 3.0 and above<\/strong>:\r\n\r\n<span id=\"page-has-downlodable-file\" file=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2017\/09\/3.0.x-and-above.zip\"><\/span>\r\n\r\nor download support for <a href=\"https:\/\/github.com\/carlo-fontanos\/ajax-multi-file-upload-codeigniter-extension\/tree\/master\/2.2.0%20and%20bellow\" target=\"_blank\"><strong>version 2.2<\/strong> and bellow<\/a> <\/a>\r\n\r\nInstallation: Simply copy the MY_Upload.php file to application\/libraries directory.\r\n\r\n<h3>Creating the Upload Form<\/h3>\r\nUsing a text editor, create a form called upload_form.php. In it, place this code and save it to your applications\/views\/upload folder:\r\n\r\n[cc lang = \"javascript\"]\r\n<html>\r\n<head>\r\n<script type = \"text\/javascript\" src = \"\/\/cdnjs.cloudflare.com\/ajax\/libs\/jquery\/2.1.1\/jquery.js\"><\/script>\r\n<script type = \"text\/javascript\" src = \"\/\/cdnjs.cloudflare.com\/ajax\/libs\/jquery.form\/3.51\/jquery.form.js\"><\/script>\r\n<title>Upload Form<\/title>\r\n<\/head>\r\n<body>\r\n\t<!-- AJAX Response will be outputted on this DIV container -->\r\n\t<div class = \"upload-image-messages\"><\/div>\r\n\r\n\t<div class = \"col-md-6\">\r\n\t\t<!-- Generate the form using form helper function: form_open_multipart(); -->\r\n\t\t<?php echo form_open_multipart('upload\/do_upload', array('class' => 'upload-image-form'));?>\r\n\t\t\t<input type=\"file\" multiple = \"multiple\" accept = \"image\/*\" class = \"form-control\" name=\"uploadfile[]\" size=\"20\" \/><br \/>\r\n\t\t\t<input type=\"submit\" name = \"submit\" value=\"Upload\" class = \"btn btn-primary\" \/>\r\n\t\t<\/form>\r\n\r\n\t\t<script>\t\t\t\t\t\r\n\t\tjQuery(document).ready(function($) {\r\n\r\n\t\t\tvar options = {\r\n\t\t\t\tbeforeSend: function(){\r\n\t\t\t\t\t\/\/ Replace this with your loading gif image\r\n\t\t\t\t\t$(\".upload-image-messages\").html('<p><img src = \"<?php echo base_url() ?>images\/loading.gif\" class = \"loader\" \/><\/p>');\r\n\t\t\t\t},\r\n\t\t\t\tcomplete: function(response){\r\n\t\t\t\t\t\/\/ Output AJAX response to the div container\r\n\t\t\t\t\t$(\".upload-image-messages\").html(response.responseText);\r\n\t\t\t\t\t$('html, body').animate({scrollTop: $(\".upload-image-messages\").offset().top-100}, 150);\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t};\t\r\n\t\t\t\/\/ Submit the form\r\n\t\t\t$(\".upload-image-form\").ajaxForm(options);\t\r\n\r\n\t\t\treturn false;\r\n\t\t\t\r\n\t\t});\r\n\t\t<\/script>\r\n\t<\/div>\r\n<\/body>\r\n<\/html>\r\n[\/cc]\r\n\r\nYou'll notice we are using a form helper to create the opening form tag. File uploads require a multipart form, so the helper creates the proper syntax for you. \r\n\r\n<h3>The Controller<\/h3>\r\nUsing a text editor, create a controller called upload.php. In it, place this code and save it to your applications\/controllers\/ folder:\r\n\r\n[cc lang = \"php\"]\r\n<?php\r\n\r\nclass Upload extends CI_Controller {\r\n\r\n\tpublic function __construct() {\r\n\t\r\n\t\tparent::__construct();\r\n\t\t\/\/ Load the helpers\r\n\t\t$this->load->helper(array('form', 'url'));\r\n\t}\r\n\r\n\tpublic function index() {\r\n\t\t\r\n\t\t\/\/ Load the form\r\n\t\t$this->load->view('templates\/header');\r\n\t\t$this->load->view('upload\/upload_form', array('error' => ' ' ));\r\n\t\t$this->load->view('templates\/footer');\r\n\t\t\r\n\t}\r\n\t\r\n\t\/**\r\n\t * Multiple upload functionality will fallback to CodeIgniters default do_upload() \r\n\t * method so configuration is backwards compatible between do_upload() and the new do_multi_upload() \r\n\t * method provided by Multi File Upload extension.\r\n\t *\r\n\t *\/\r\n\tpublic function do_upload(){\r\n\t\r\n\t\t\/\/ Detect form submission.\r\n\t\tif($this->input->post('submit')){\r\n\t\t\r\n\t\t\t$path = '.\/uploads\/';\r\n\t\t\t$this->load->library('upload');\r\n\t\t\t\r\n\t\t\t\/**\r\n\t\t\t * Refer to https:\/\/ellislab.com\/codeigniter\/user-guide\/libraries\/file_uploading.html \r\n\t\t\t * for full argument documentation.\r\n\t\t\t *\r\n\t\t\t *\/\r\n\t\t\t \r\n\t\t\t\/\/ Define file rules\r\n\t\t\t$this->upload->initialize(array(\r\n\t\t\t\t\"upload_path\"\t\t=>\t$path,\r\n\t\t\t\t\"allowed_types\"\t\t=>\t\"gif|jpg|png\",\r\n\t\t\t\t\"max_size\"\t\t\t=>\t'100',\r\n\t\t\t\t\"max_width\"\t\t\t=>\t'1024',\r\n\t\t\t\t\"max_height\"\t\t=>\t'768'\r\n\t\t\t));\r\n\t\t\t\r\n\t\t\tif($this->upload->do_multi_upload(\"uploadfile\")){\r\n\t\t\t\t\r\n\t\t\t\t$data['upload_data'] = $this->upload->get_multi_upload_data();\r\n\t\t\t\t\r\n\t\t\t\techo '<p class = \"bg-success\">' . count($data['upload_data']) . 'File(s) successfully uploaded.<\/p>';\r\n\t\t\t\t\r\n\t\t\t} else {\t\r\n\t\t\t\t\/\/ Output the errors\r\n\t\t\t\t$errors = array('error' => $this->upload->display_errors('<p class = \"bg-danger\">', '<\/p>'));\t\t\t\t\r\n\t\t\t\r\n\t\t\t\tforeach($errors as $k => $error){\r\n\t\t\t\t\techo $error;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\techo '<p class = \"bg-danger\">An error occured, please try again later.<\/p>';\r\n\t\t\t\r\n\t\t}\r\n\t\t\/\/ Exit to avoid further execution\r\n\t\texit();\r\n\t}\r\n}\r\n[\/cc]\r\n\r\n<h3>Configure Routes<\/h3>\r\n\r\nGo to application\/config\/routes.php and add the following lines:\r\n[cc lang = \"php\"]\r\n$route['upload\/do_upload'] = 'upload\/do_upload';\r\n$route['upload\/(:any)'] = 'upload\/view\/$1';\r\n$route['upload'] = 'upload';\r\n[\/cc]\r\n\r\n<h3>The Upload Folder<\/h3>\r\nYou'll need a destination folder for your uploaded images. Create a folder at the root of your CodeIgniter installation called uploads and set its file permissions to 777.\r\n\r\n<h3>Go ahead and try it!<\/h3>\r\nTo try your form, visit your site using a URL similar to this one:\r\n<code>example.com\/index.php\/upload\/<\/code>\r\n","post_title":"AJAX Multi File upload in CodeIgniter","post_excerpt":"A simple AJAX multi-file upload  tutorial that follows CodeIgniter best practices.","post_status":"publish","comment_status":"open","ping_status":"closed","post_password":"","post_name":"ajax-multi-file-upload-in-codeigniter","to_ping":"","pinged":"","post_modified":"2017-09-19 15:27:10","post_modified_gmt":"2017-09-19 07:27:10","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=1006","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":1197,"post_author":"1","post_date":"2015-10-23 09:42:18","post_date_gmt":"2015-10-23 09:42:18","post_content":"<strong>Step 1<\/strong>: Create a custom page in WordPress\r\n<ul>\r\n\t<li>Go to your Dashboard &gt; Pages &gt; Add New<\/li>\r\n\t<li>Name the page anything you want, ex:\u00a0Ajax Uploader<\/li>\r\n\t<li>In your Dashboard &gt; Settings &gt; Permalinks, make sure <strong>Common Settings<\/strong> is\u00a0set to <strong>Post Name<\/strong><\/li>\r\n\t<li>In the new page, copy the page slag: if you used \u201cAjax Uploader\u201d as your page name, the slag would be\u00a0<strong>ajax-uploader<\/strong><\/li>\r\n\t<li>In your WordPress theme create a file called page-<strong>ajax-uploader<\/strong>.php \u00a0Notice how we attached the slag to the \u201c<strong>page-<\/strong>\u201c, this will allow us to add custom scripts that will only apply to this specific page.<\/li>\r\n\t<li>Go to your browser and navigate to your new page. ex. http:\/\/example.com\/<strong>ajax-uploader\u00a0<\/strong>It should show you a <strong>blank white page<\/strong>, if not then you did something incorrectly.<\/li>\r\n<\/ul>\r\n<strong>Step 2<\/strong>: Working on our page\r\n<ul>\r\n\t<li>Building the HTML Form<\/li>\r\n<\/ul>\r\n\r\n[cc lang = \"html\"]\r\n<div class = \"col-md-6 upload-form\">\r\n\t<div class= \"upload-response\"><\/div>\r\n\t<div class = \"form-group\">\r\n\t\t<label><?php __('Select Files:', 'cvf-upload'); ?><\/label>\r\n\t\t<input type = \"file\" name = \"files[]\" accept = \"image\/*\" class = \"files-data form-control\" multiple \/>\r\n\t<\/div>\r\n\t<div class = \"form-group\">\r\n\t\t<input type = \"submit\" value = \"Upload\" class = \"btn btn-primary btn-upload\" \/>\r\n\t<\/div>\r\n<\/div>\r\n[\/cc]\r\n<h3>Javascript<\/h3>\r\n<ul>\r\n\t<li>Setup our form data to be sent via AJAX:<\/li>\r\n<\/ul>\r\n\r\n[cc lang = \"javascript\"]\r\n$(document).ready(function() {\r\n\t\/\/ When the Upload button is clicked...\r\n\t$('body').on('click', '.upload-form .btn-upload', function(e){\r\n\t\te.preventDefault;\r\n\r\n\t\tvar fd = new FormData();\r\n\t\tvar files_data = $('.upload-form .files-data'); \/\/ The <input type=\"file\" \/> field\r\n\t\t\r\n\t\t\/\/ Loop through each data and create an array file[] containing our files data.\r\n\t\t$.each($(files_data), function(i, obj) {\r\n\t\t\t$.each(obj.files,function(j,file){\r\n\t\t\t\tfd.append('files[' + j + ']', file);\r\n\t\t\t})\r\n\t\t});\r\n\t\t\r\n\t\t\/\/ our AJAX identifier\r\n\t\tfd.append('action', 'cvf_upload_files');  \r\n\t\t\r\n\t\t\/\/ Remove this code if you do not want to associate your uploads to the current page.\r\n\t\tfd.append('post_id', <?php echo $post->ID; ?>); \r\n\r\n\t\t$.ajax({\r\n\t\t\ttype: 'POST',\r\n\t\t\turl: '<?php echo admin_url( 'admin-ajax.php' ); ?>',\r\n\t\t\tdata: fd,\r\n\t\t\tcontentType: false,\r\n\t\t\tprocessData: false,\r\n\t\t\tsuccess: function(response){\r\n\t\t\t\t$('.upload-response').html(response); \/\/ Append Server Response\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n});\t\t\t\t\t\t\r\n[\/cc]\r\n<ul>\r\n\t<li>This is how your <strong>page-ajax-uploader.php<\/strong> template should look like:<\/li>\r\n<li>Make sure you have the latest jQuery in your header.php <code><script src=\"https:\/\/ajax.googleapis.com\/ajax\/libs\/jquery\/1.11.3\/jquery.min.js\"><\/script><\/code><\/li>\r\n<\/ul>\r\n\r\n[cc lang = \"html\"]\r\n<?php get_header(); ?>\r\n\r\n\t<section class = \"inner-page-wrapper\">\r\n\t\t<section class = \"container\">\r\n\t\t\t<section class = \"row content\">\r\n\t\t\t\t<?php if ( have_posts() ) while ( have_posts() ) : the_post(); ?>\r\n\t\t\t\t\t<article id=\"post-<?php the_ID(); ?>\" <?php post_class(); ?>>\r\n\t\t\t\t\t\t<h1><?php the_title(); ?><\/h1>\r\n\t\t\t\t\t\t<article class=\"entry-content\">\r\n\t\t\t\t\t\t\t<?php the_content(); ?>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div class = \"col-md-6 upload-form\">\r\n\t\t\t\t\t\t\t\t<div class= \"upload-response\"><\/div>\r\n\t\t\t\t\t\t\t\t<div class = \"form-group\">\r\n\t\t\t\t\t\t\t\t\t<label><?php __('Select Files:', 'cvf-upload'); ?><\/label>\r\n\t\t\t\t\t\t\t\t\t<input type = \"file\" name = \"files[]\" accept = \"image\/*\" class = \"files-data form-control\" multiple \/>\r\n\t\t\t\t\t\t\t\t<\/div>\r\n\t\t\t\t\t\t\t\t<div class = \"form-group\">\r\n\t\t\t\t\t\t\t\t\t<input type = \"submit\" value = \"Upload\" class = \"btn btn-primary btn-upload\" \/>\r\n\t\t\t\t\t\t\t\t<\/div>\r\n\t\t\t\t\t\t\t<\/div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<script type = \"text\/javascript\">\r\n\t\t\t\t\t\t\t$(document).ready(function() {\r\n\t\t\t\t\t\t\t\t\/\/ When the Upload button is clicked...\r\n\t\t\t\t\t\t\t\t$('body').on('click', '.upload-form .btn-upload', function(e){\r\n\t\t\t\t\t\t\t\t\te.preventDefault;\r\n\r\n\t\t\t\t\t\t\t\t\tvar fd = new FormData();\r\n\t\t\t\t\t\t\t\t\tvar files_data = $('.upload-form .files-data'); \/\/ The <input type=\"file\" \/> field\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\/\/ Loop through each data and create an array file[] containing our files data.\r\n\t\t\t\t\t\t\t\t\t$.each($(files_data), function(i, obj) {\r\n\t\t\t\t\t\t\t\t\t\t$.each(obj.files,function(j,file){\r\n\t\t\t\t\t\t\t\t\t\t\tfd.append('files[' + j + ']', file);\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\/\/ our AJAX identifier\r\n\t\t\t\t\t\t\t\t\tfd.append('action', 'cvf_upload_files');  \r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\/\/ uncomment this code if you do not want to associate your uploads to the current page.\r\n\t\t\t\t\t\t\t\t\tfd.append('post_id', <?php echo $post->ID; ?>); \r\n\r\n\t\t\t\t\t\t\t\t\t$.ajax({\r\n\t\t\t\t\t\t\t\t\t\ttype: 'POST',\r\n\t\t\t\t\t\t\t\t\t\turl: '<?php echo admin_url( 'admin-ajax.php' ); ?>',\r\n\t\t\t\t\t\t\t\t\t\tdata: fd,\r\n\t\t\t\t\t\t\t\t\t\tcontentType: false,\r\n\t\t\t\t\t\t\t\t\t\tprocessData: false,\r\n\t\t\t\t\t\t\t\t\t\tsuccess: function(response){\r\n\t\t\t\t\t\t\t\t\t\t\t$('.upload-response').html(response); \/\/ Append Server Response\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t});\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<\/script>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t<\/article>\r\n\t\t\t\t\t<\/article>\r\n\t\t\t\t<?php endwhile; ?>\r\n\t\t\t<\/section>\r\n\t\t<\/section>\r\n\t<\/section>\r\n\t\r\n<?php get_footer(); ?>\r\n[\/cc]\r\n\r\n<h3>Server Side Processing<\/h3>\r\n<ul>\r\n\t<li>Add the code bellow to your <strong>functions.php<\/strong><\/li>\r\n\t<li>Don't forget to read thru the comments found within the codes.<\/li>\r\n<\/ul>\r\n[cc lang = \"php\"]\r\nadd_action('wp_ajax_cvf_upload_files', 'cvf_upload_files');\r\nadd_action('wp_ajax_nopriv_cvf_upload_files', 'cvf_upload_files'); \/\/ Allow front-end submission \r\n\r\nfunction cvf_upload_files(){\r\n\t\r\n\t$parent_post_id = isset( $_POST['post_id'] ) ? $_POST['post_id'] : 0;  \/\/ The parent ID of our attachments\r\n\t$valid_formats = array(\"jpg\", \"png\", \"gif\", \"bmp\", \"jpeg\"); \/\/ Supported file types\r\n\t$max_file_size = 1024 * 500; \/\/ in kb\r\n\t$max_image_upload = 10; \/\/ Define how many images can be uploaded to the current post\r\n\t$wp_upload_dir = wp_upload_dir();\r\n\t$path = $wp_upload_dir['path'] . '\/';\r\n\t$count = 0;\r\n\r\n\t$attachments = get_posts( array(\r\n\t\t'post_type' \t\t=> 'attachment',\r\n\t\t'posts_per_page' \t=> -1,\r\n\t\t'post_parent' \t\t=> $parent_post_id,\r\n\t\t'exclude'     \t\t=> get_post_thumbnail_id() \/\/ Exclude post thumbnail to the attachment count\r\n\t) );\r\n\r\n\t\/\/ Image upload handler\r\n\tif( $_SERVER['REQUEST_METHOD'] == \"POST\" ){\r\n\t\t\r\n\t\t\/\/ Check if user is trying to upload more than the allowed number of images for the current post\r\n\t\tif( ( count( $attachments ) + count( $_FILES['files']['name'] ) ) > $max_image_upload ) {\r\n\t\t\t$upload_message[] = \"Sorry you can only upload \" . $max_image_upload . \" images for each Ad\";\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\tforeach ( $_FILES['files']['name'] as $f => $name ) {\r\n\t\t\t\t$extension = pathinfo( $name, PATHINFO_EXTENSION );\r\n\t\t\t\t\/\/ Generate a randon code for each file name\r\n\t\t\t\t$new_filename = cvf_td_generate_random_code( 20 )  . '.' . $extension;\r\n\t\t\t\t\r\n\t\t\t\tif ( $_FILES['files']['error'][$f] == 4 ) {\r\n\t\t\t\t\tcontinue; \r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif ( $_FILES['files']['error'][$f] == 0 ) {\r\n\t\t\t\t\t\/\/ Check if image size is larger than the allowed file size\r\n\t\t\t\t\tif ( $_FILES['files']['size'][$f] > $max_file_size ) {\r\n\t\t\t\t\t\t$upload_message[] = \"$name is too large!.\";\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\r\n\t\t\t\t\t\/\/ Check if the file being uploaded is in the allowed file types\r\n\t\t\t\t\t} elseif( ! in_array( strtolower( $extension ), $valid_formats ) ){\r\n\t\t\t\t\t\t$upload_message[] = \"$name is not a valid format\";\r\n\t\t\t\t\t\tcontinue; \r\n\t\t\t\t\t\r\n\t\t\t\t\t} else{ \r\n\t\t\t\t\t\t\/\/ If no errors, upload the file...\r\n\t\t\t\t\t\tif( move_uploaded_file( $_FILES[\"files\"][\"tmp_name\"][$f], $path.$new_filename ) ) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t$count++; \r\n\r\n\t\t\t\t\t\t\t$filename = $path.$new_filename;\r\n\t\t\t\t\t\t\t$filetype = wp_check_filetype( basename( $filename ), null );\r\n\t\t\t\t\t\t\t$wp_upload_dir = wp_upload_dir();\r\n\t\t\t\t\t\t\t$attachment = array(\r\n\t\t\t\t\t\t\t\t'guid'           => $wp_upload_dir['url'] . '\/' . basename( $filename ), \r\n\t\t\t\t\t\t\t\t'post_mime_type' => $filetype['type'],\r\n\t\t\t\t\t\t\t\t'post_title'     => preg_replace( '\/\\.[^.]+$\/', '', basename( $filename ) ),\r\n\t\t\t\t\t\t\t\t'post_content'   => '',\r\n\t\t\t\t\t\t\t\t'post_status'    => 'inherit'\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\/\/ Insert attachment to the database\r\n\t\t\t\t\t\t\t$attach_id = wp_insert_attachment( $attachment, $filename, $parent_post_id );\r\n\r\n\t\t\t\t\t\t\trequire_once( ABSPATH . 'wp-admin\/includes\/image.php' );\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\/\/ Generate meta data\r\n\t\t\t\t\t\t\t$attach_data = wp_generate_attachment_metadata( $attach_id, $filename ); \r\n\t\t\t\t\t\t\twp_update_attachment_metadata( $attach_id, $attach_data );\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\/\/ Loop through each error then output it to the screen\r\n\tif ( isset( $upload_message ) ) :\r\n\t\tforeach ( $upload_message as $msg ){\t\t\r\n\t\t\tprintf( __('<p class=\"bg-danger\">%s<\/p>', 'wp-trade'), $msg );\r\n\t\t}\r\n\tendif;\r\n\t\r\n\t\/\/ If no error, show success message\r\n\tif( $count != 0 ){\r\n\t\tprintf( __('<p class = \"bg-success\">%d files added successfully!<\/p>', 'wp-trade'), $count );\t\r\n\t}\r\n\t\r\n    exit();\r\n}\r\n\r\n\/\/ Random code generator used for file names.\r\nfunction cvf_td_generate_random_code($length=10) {\r\n \r\n   $string = '';\r\n   $characters = \"23456789ABCDEFHJKLMNPRTVWXYZabcdefghijklmnopqrstuvwxyz\";\r\n \r\n   for ($p = 0; $p < $length; $p++) {\r\n       $string .= $characters[mt_rand(0, strlen($characters)-1)];\r\n   }\r\n \r\n   return $string;\r\n \r\n}\r\n[\/cc]","post_title":"AJAX Multi File Upload in WordPress Front-End","post_excerpt":"Uploading Files  Asynchronously in WordPress Front-End using AJAX","post_status":"publish","comment_status":"open","ping_status":"open","post_password":"","post_name":"ajax-multi-file-upload-in-wordpress-front-end","to_ping":"","pinged":"","post_modified":"2015-10-23 10:17:26","post_modified_gmt":"2015-10-23 10:17:26","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=1197","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":1095,"post_author":"1","post_date":"2015-02-18 09:52:46","post_date_gmt":"2015-02-18 09:52:46","post_content":"I was looking into making this possible but I got stuck on the way. \r\n<code><input type = \"file\" \/><\/code> \r\nI believe the above code is the culprit on this Project since the way it store the files is randomized, therefore making it almost impossible to re-sort the images inside it. \r\n\r\nThe Codes bellow will work most of the time, and sometimes it will fail due to queueing issues on the input file.\r\n\r\n<h3>Client Script<\/h3>\r\n[cc lang = \"javascript\"]\r\n<!DOCTYPE html>\r\n<html xmlns=\"http:\/\/www.w3.org\/1999\/xhtml\">\r\n<head>\r\n\t<title>Upload images with Jquery<\/title>\r\n\t<link rel=\"stylesheet\" type=\"text\/css\" href=\"http:\/\/maxcdn.bootstrapcdn.com\/bootstrap\/3.3.1\/css\/bootstrap.min.css\" \/>\r\n\t\r\n\t<script type=\"text\/javascript\" src=\"http:\/\/ajax.googleapis.com\/ajax\/libs\/jquery\/1.11.1\/jquery.min.js\"><\/script>\r\n\t<script type=\"text\/javascript\" src=\"http:\/\/maxcdn.bootstrapcdn.com\/bootstrap\/3.3.1\/js\/bootstrap.min.js\"><\/script>\r\n\t<script type=\"text\/javascript\" src=\"https:\/\/cdnjs.cloudflare.com\/ajax\/libs\/bootbox.js\/4.3.0\/bootbox.min.js\"><\/script>\t\t<script type=\"text\/javascript\" src=\"jquery-2.1.3.min.js\"><\/script>\r\n\t<script type=\"text\/javascript\" src=\"jquery-ui.js\"><\/script>\r\n\t\r\n\t<style>\r\n\t\tul.cvf_uploaded_files {list-style-type: none; margin: 20px 0 0 0; padding: 0;}\r\n\t\tul.cvf_uploaded_files li {background-color: #fff; border: 1px solid #ccc; border-radius: 5px; float: left; margin: 20px 20px 0 0; padding: 2px; width: 150px; height: 150px; line-height: 150px; position: relative;}\r\n\t\tul.cvf_uploaded_files li img.img-thumb {width: 150px; height: 150px;}\r\n\t\tul.cvf_uploaded_files .ui-selected {background: red;}\r\n\t\tul.cvf_uploaded_files .highlight {border: 1px dashed #000; width: 150px; background-color: #ccc; border-radius: 5px;}\r\n\t\tul.cvf_uploaded_files .delete-btn {width: 24px; border: 0; position: absolute; top: -12px; right: -14px;}\r\n\t\t.bg-success {padding: 7px;}\r\n\t<\/style>\r\n\t<script type=\"text\/javascript\">\r\n\t\tjQuery(document).ready(function() {\t\t\t\r\n\t\t\t\r\n\t\t\tvar storedFiles = [];      \r\n\t\t\t\/\/$('.cvf_order').hide();\r\n\t\t\t\r\n\t\t\t\/\/ Apply sort function\t\r\n\t\t\tfunction cvf_reload_order() {\r\n\t\t\t\tvar order = $('.cvf_uploaded_files').sortable('toArray', {attribute: 'item'});\r\n\t\t\t\t$('.cvf_hidden_field').val(order);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tfunction cvf_add_order() {\r\n\t\t\t\t$('.cvf_uploaded_files li').each(function(n) {\r\n\t\t\t\t\t$(this).attr('item', n);\r\n\t\t\t\t});\r\n\t\t\t\tconsole.log('test');\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t$(function() {\r\n\t\t\t\t$('.cvf_uploaded_files').sortable({\r\n\t\t\t\t\tcursor: 'move',\r\n\t\t\t\t\tplaceholder: 'highlight',\r\n\t\t\t\t\tstart: function (event, ui) {\r\n\t\t\t\t\t\tui.item.toggleClass('highlight');\r\n\t\t\t\t\t},\r\n\t\t\t\t\tstop: function (event, ui) {\r\n\t\t\t\t\t\tui.item.toggleClass('highlight');\r\n\t\t\t\t\t},\r\n\t\t\t\t\tupdate: function () {\r\n\t\t\t\t\t\t\/\/cvf_reload_order();\r\n\t\t\t\t\t},\r\n\t\t\t\t\tcreate:function(){\r\n\t\t\t\t\t\tvar list = this;\r\n\t\t\t\t\t\tresize = function(){\r\n\t\t\t\t\t\t\t$(list).css('height','auto');\r\n\t\t\t\t\t\t\t$(list).height($(list).height());\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\t$(list).height($(list).height());\r\n\t\t\t\t\t\t$(list).find('img').load(resize).error(resize);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\t$('.cvf_uploaded_files').disableSelection();\r\n\t\t\t});\r\n\t\t\t\t\t\r\n\t\t\t$('body').on('change', '.user_picked_files', function() {\r\n\t\t\t\t\r\n\t\t\t\tvar files = this.files;\r\n\t\t\t\tvar i = 0;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\tfor (i = 0; i < files.length; i++) {\r\n\t\t\t\t\tvar readImg = new FileReader();\r\n\t\t\t\t\tvar file = files[i];\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (file.type.match('image.*')){\r\n\t\t\t\t\t\tstoredFiles.push(file);\r\n\t\t\t\t\t\treadImg.onload = (function(file) {\r\n\t\t\t\t\t\t\treturn function(e) {\r\n\t\t\t\t\t\t\t\t$('.cvf_uploaded_files').append(\r\n\t\t\t\t\t\t\t\t\"<li file = '\" + file.name + \"'>\" + \t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\"<img class = 'img-thumb' src = '\" + e.target.result + \"' \/>\" + \r\n\t\t\t\t\t\t\t\t\t\"<a href = '#' class = 'cvf_delete_image' title = 'Cancel'><img class = 'delete-btn' src = 'delete-btn.png' \/><\/a>\" + \r\n\t\t\t\t\t\t\t\t\"<\/li>\"\r\n\t\t\t\t\t\t\t\t);\t\t\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})(file);\r\n\t\t\t\t\t\treadImg.readAsDataURL(file);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\talert('the file '+ file.name + ' is not an image<br\/>');\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(files.length === (i+1)){\r\n\t\t\t\t\t\tsetTimeout(function(){\r\n\t\t\t\t\t\t\tcvf_add_order();\r\n\t\t\t\t\t\t}, 1000);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\t\/\/ Delete Image from Queue\r\n\t\t\t$('body').on('click','a.cvf_delete_image',function(e){\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\t$(this).parent().remove('');\t\t\r\n\t\t\t\t\r\n\t\t\t\tvar file = $(this).parent().attr('file');\r\n\t\t\t\tfor(var i = 0; i < storedFiles.length; i++) {\r\n\t\t\t\t\tif(storedFiles[i].name == file) {\r\n\t\t\t\t\t\tstoredFiles.splice(i, 1);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t\/\/cvf_reload_order();\r\n\t\t\t\t\r\n\t\t\t});\r\n\t\t\t\t\t\r\n\t\t\t\/\/ AJAX Upload\r\n\t\t\t$('body').on('click', '.cvf_upload_btn', function(e){\r\n\t\t\t\t\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tcvf_reload_order();\r\n\t\t\t\t\r\n\t\t\t\t\/\/$(\".cvf_uploaded_files\").html('<p><img src = \"loading.gif\" class = \"loader\" \/><\/p>');\r\n\t\t\t\tvar data = new FormData();\r\n\t\t\t\t\r\n\t\t\t\tvar items_array = $('.cvf_hidden_field').val();\r\n\t\t\t\tvar items = items_array.split(',');\r\n\r\n\t\t\t\tfor (var i in items){\r\n\t\t\t\t\tvar item_number = items[i];\r\n\t\t\t\t\tdata.append('files' + i, storedFiles[item_number]);\r\n\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t$.ajax({\r\n\t\t\t\t\turl: 'upload.php',\r\n\t\t\t\t\ttype: 'POST',\r\n\t\t\t\t\tcontentType: false,\r\n\t\t\t\t\tdata: data,\r\n\t\t\t\t\tprocessData: false,\r\n\t\t\t\t\tcache: false,\r\n\t\t\t\t\tsuccess: function(response, textStatus, jqXHR) {\r\n\t\t\t\t\t\t\/\/$(\".cvf_uploaded_files\").html('');\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\/\/bootbox.alert('<br \/><p class = \"bg-success\">File(s) uploaded successfully.<\/p>');\r\n\t\t\t\t\t\talert(jqXHR.responseText);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t});\t\t\t\r\n\r\n\t\t});\r\n\t<\/script>\r\n<\/head>\r\n<body>\r\n\t<div class = \"container-fluid\">\r\n\t\t<h3>Sort Files before upload<\/h3>\r\n\t\t<br \/>\r\n\t\t<div class = \"col-md-6\">\r\n\t\t\t\r\n\t\t\t<div class = \"form-group\">\r\n\t\t\t\t<label>Select Images<\/label>\r\n\t\t\t\t<input type = \"file\" name = \"upload\" multiple = \"multiple\" class = \"form-control user_picked_files\" \/>\t\t\t\t\t\r\n\t\t\t<\/div>\t\t\t\t\t\t\r\n\t\t\t\r\n\t\t\t<div class = \"form-group cvf_order\">\t\t\t\t\t\t\t\r\n\t\t\t\t<label>Order<\/label>\t\t\t\t\t\t\t\t\r\n\t\t\t\t<input type = \"text\" class = \"form-control cvf_hidden_field\" value = \"\" disabled = \"disabled\" \/>\t\r\n\t\t\t<\/div>\t\t\t\t\t\t\r\n\t\t\t\r\n\t\t\t<input type = \"submit\" class = \"cvf_upload_btn btn btn-primary\" value = \"Upload\" \/>\r\n\t\t\t\r\n\t\t\t<ul class = \"cvf_uploaded_files\"><\/ul>\r\n\t\t\t\r\n\t\t<\/div>\r\n\t<\/div>\r\n<\/body>\r\n<\/html>\r\n[\/cc]\r\n\r\n<h3>Server Script (upload.php)<\/h3>\r\n[cc lang = \"php\"]\r\n<?php \r\n\r\nif(isset($_FILES)){\r\n\t\r\n\t$i = 1;\r\n\tforeach($_FILES as $key => $data){\r\n\t\t\t\r\n\t\tif (move_uploaded_file($data['tmp_name'], __DIR__ . '\/uploads\/' . $i . '--' . $data['name'])) { \r\n\t\t\t\/\/echo \"success\"; \r\n\t\t\tprint_r($data['name']);\r\n\t\t} else {\r\n\t\t\t\/\/echo \"error\";\r\n\t\t}\r\n\t\t\r\n\t\t$i++;\r\n\t}\r\n}\r\n[\/cc]","post_title":"AJAX Multi-File Upload With Image Preview and Sort [Under Development]","post_excerpt":"Simple File upload with Preview and Sort Functionality before upload","post_status":"publish","comment_status":"open","ping_status":"open","post_password":"","post_name":"ajax-multi-file-upload-with-image-preview-and-sort-incomplete-project","to_ping":"","pinged":"","post_modified":"2015-02-18 12:07:06","post_modified_gmt":"2015-02-18 12:07:06","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=1095","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":1699,"post_author":"1","post_date":"2016-12-22 14:37:30","post_date_gmt":"2016-12-22 06:37:30","post_content":"<img src=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2016\/12\/screencapture-localhost-50552-Products-1482389409112.png\" alt=\"\" width=\"100%\" height=\"329\" class=\"img img-responsive\" \/>\r\n\r\nIn this tutorial, we are going to build a simple AJAX Pagination with search and sort using Entity Framework with ASP.NET MVC. This tutorial assumes that you already have an existing ASP.NET MVC web application built using Visual Studio 2013 or 2015. What you see in the above picture is exactly what we are going to build out. So let's get started.\r\n\r\nIn Visual Studio, create a new Model class under your <strong>Models<\/strong> folder and name it <strong>ProductModel.cs<\/strong>. In it add the following code:\r\n[cc lang=\"php\"]\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Data.Entity;\r\nusing System.Linq;\r\nusing System.Web;\r\nusing System.Web.Mvc;\r\n\r\nnamespace MyAppName.Models\r\n{\r\n    public class Product\r\n    {\r\n        public int id { get; set; }\r\n        public string name { get; set; }\r\n        [AllowHtml]\r\n        public string content { get; set; }\r\n        public string excerpt { get; set; }\r\n        public DateTime? date { get; set; }\r\n        public decimal price { get; set; }\r\n        public int quantity { get; set; }\r\n        public int status { get; set; }\r\n        public int author { get; set; }\r\n        public string images { get; set; }\r\n        public string featured_image { get; set; }\r\n    }\r\n\r\n    public class ProductDBContext : DbContext\r\n    {\r\n        public DbSet<Product> Products { get; set; }\r\n    }\r\n}\r\n[\/cc]\r\n\r\nFrom the Solution Explorer of Visual Studio, right click on the Models Folder -&gt; Add -&gt; New Scaffolded Item\r\n\r\n<img class=\"alignnone size-medium wp-image-1702\" src=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2016\/12\/ajax-pagination-with-search-and-sort-using-asp.net-mvc-screenshot-1-500x227.jpg\" alt=\"\" width=\"500\" height=\"227\" \/>\r\n\r\nA new window will pop-up, select <strong>MVC 5 Controller with views, using Entity Framework<\/strong> then click Add.\r\n\r\n<img class=\"alignnone size-medium wp-image-1703\" src=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2016\/12\/ajax-pagination-with-search-and-sort-using-asp.net-mvc-screenshot-2-500x150.jpg\" alt=\"\" width=\"500\" height=\"150\" \/>\r\n\r\nOn the next window: Under Model class select<strong> Product(MyAppName.Models)<\/strong>, for the Data context class select <strong>ProductDBContext (MyAppName.Models)<\/strong>. If you have an existing razor layout, you can use it as the new view for our Products scaffold. Click the Add button when you're done.\u00a0This will start generating the necessary views and controller for our Products.\r\n\r\n<img class=\"alignnone size-medium wp-image-1704\" src=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2016\/12\/ajax-pagination-with-search-and-sort-using-asp.net-mvc-screenshot-3-500x331.jpg\" alt=\"\" width=\"500\" height=\"331\" \/>\r\n\r\nWe can now start working on the pagination.\r\n\r\nNavigate to View -&gt; Products -&gt; Index.cshtml then replace the Index() method with the following:\r\n[cc lang=\"php\"]\r\n[HttpGet]\r\npublic ActionResult Index()\r\n{\r\n\t\/* No logic required here, let's just render the view *\/\r\n\treturn View();\r\n}\r\n\r\n[HttpPost]\r\npublic string Index(FormCollection collection)\r\n{\r\n\t\/* Setup default variables that we are going to populate later *\/\r\n\tvar pag_content = \"\";\r\n\tvar pag_navigation = \"\";\r\n\r\n\t\/* Define all posted data coming from the view. *\/\r\n\tint page = Convert.ToInt32(collection[\"data[page]\"]); \/* Page we are currently at *\/\r\n\tstring sort = collection[\"data[sort]\"] == \"ASC\" ? \"asc\" : \"desc\"; \/* Order of our sort (DESC or ASC) *\/\r\n\tstring name = collection[\"data[name]\"]; \/* Name of the column name we want to sort *\/\r\n\tint max = Convert.ToInt32(collection[\"data[max]\"]); \/* Number of items to display per page *\/\r\n\tstring search = collection[\"data[search]\"]; \/* Keyword provided on our search box *\/\r\n\r\n\tint cur_page = page;\r\n\tpage -= 1;\r\n\tint per_page = max > 1 ? max : 16;\r\n\tbool previous_btn = true;\r\n\tbool next_btn = true;\r\n\tbool first_btn = true;\r\n\tbool last_btn = true;\r\n\tint start = page * per_page;\r\n\r\n\t\/* Let's build the query using available data that we received form the front-end via ajax *\/\r\n\tvar all_items_query = db.Products\r\n\t\t.Where(x => x.id != 0)\r\n\t\t.OrderBy(name + \" \" + sort)\r\n\t\t.Skip(start)\r\n\t\t.Take(per_page); \/* Get only the products to display. *\/\r\n\r\n\t\/* Get total items in our database *\/\r\n\tvar count_query = db.Products\r\n\t\t.Where(x => x.id != 0); \/* Get total products count. *\/\r\n\r\n\t\/* If there is a search keyword, we search through the database for possible matches*\/\r\n\tif (search != \"\")\r\n\t{\r\n\t\t\/* The \"Contains\" method matches records using the LIKE %keyword% format *\/\r\n\t\tall_items_query = all_items_query.Where(x =>\r\n\t\t\tx.name.Contains(search) ||\r\n\t\t\tx.content.Contains(search) ||\r\n\t\t\tx.excerpt.Contains(search)\r\n\t\t);\r\n\t\tcount_query = count_query.Where(x =>\r\n\t\t\tx.name.Contains(search) ||\r\n\t\t\tx.content.Contains(search) ||\r\n\t\t\tx.excerpt.Contains(search)\r\n\t\t);\r\n\t}\r\n\r\n\t\/* We now fetch the data from our database *\/\r\n\tvar all_items = all_items_query.ToList();\r\n\tint count = count_query.Count();\r\n\t\r\n\tif (count > 0)\r\n\t{\r\n\t\t\/* Loop through each item to create views *\/\r\n\t\tforeach (var item in all_items)\r\n\t\t{\r\n\t\t\tpag_content += \"<div class='col-sm-3 item-\" + item.id + \"'>\" +\r\n\t\t\t\t\"<div class='panel panel-default'>\" +\r\n\t\t\t\t\t\"<div class='panel-heading item-name'>\" +\r\n\t\t\t\t\t\titem.name +\r\n\t\t\t\t\t\"<\/div>\" +\r\n\t\t\t\t\t\"<div class='panel -body p-0 p-b'>\" +\r\n\t\t\t\t\t\t\"<a href='\/Products\/Details\/\" + item.id + \"'><img src='\/Content\/Images\/\" + \"dummy-shirt.png\" + \"' width='100%' class='img-responsive item-featured' \/><\/a>\" +\r\n\t\t\t\t\t\t\"<div class='list-group m-0'>\" +\r\n\t\t\t\t\t\t\t\"<div class='list-group-item b-0 b-t'>\" +\r\n\t\t\t\t\t\t\t\t\"<i class='fa fa-calendar-o fa-2x pull-left ml-r'><\/i>\" +\r\n\t\t\t\t\t\t\t\t\"<p class='list-group-item-text'>Price<\/p>\" +\r\n\t\t\t\t\t\t\t\t\"<h4 class='list-group-item-heading'>$<span class='item-price'>\" + item.price + \"<\/span><\/h4>\" +\r\n\t\t\t\t\t\t\t\"<\/div>\" +\r\n\t\t\t\t\t\t\t\"<div class='list-group-item b-0 b-t'>\" +\r\n\t\t\t\t\t\t\t\t\t   \"<i class='fa fa-calendar fa-2x pull-left ml-r'><\/i>\" +\r\n\t\t\t\t\t\t\t\t\"<p class='list-group-item-text'>On Stock<\/p>\" +\r\n\t\t\t\t\t\t\t\t\"<h4 class='list-group-item-heading item-stock'>\" + \"\" + \"<\/h4>\" +\r\n\t\t\t\t\t\t\t\"<\/div>\" +\r\n\t\t\t\t\t\t\"<\/div>\" +\r\n\t\t\t\t\t\"<\/div>\" +\r\n\t\t\t\t\t\"<div class='panel-footer'>\" +\r\n\t\t\t\t\t\t\"<\/p><a href='\/Products\/Details\/\" + item.id + \"' class='btn btn-success btn-block'>View Item<\/a><\/p>\" +\r\n\t\t\t\t\t \"<\/div>\" +\r\n\t\t\t\t\"<\/div>\" +\r\n\t\t\t\"<\/div>\";\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\t\/* Show a message if no items were found *\/\r\n\t\tpag_content += \"<p class='p-d bg-danger'>No items found<\/p>\";\r\n\t}\r\n\r\n\tpag_content = pag_content + \"<br class = 'clear' \/>\";\r\n\r\n\t\/* Bellow is the navigation logic and view *\/\r\n\tdecimal nop_ceil = Decimal.Divide(count, per_page);\r\n\tint no_of_paginations = Convert.ToInt32(Math.Ceiling(nop_ceil));\r\n\r\n\tvar start_loop = 1;\r\n\tvar end_loop = no_of_paginations;\r\n\r\n\tif (cur_page >= 7)\r\n\t{\r\n\t\tstart_loop = cur_page - 3;\r\n\t\tif (no_of_paginations > cur_page + 3)\r\n\t\t{\r\n\t\t\tend_loop = cur_page + 3;\r\n\t\t}\r\n\t\telse if (cur_page <= no_of_paginations && cur_page > no_of_paginations - 6)\r\n\t\t{\r\n\t\t\tstart_loop = no_of_paginations - 6;\r\n\t\t\tend_loop = no_of_paginations;\r\n\t\t}\r\n\t}\r\n\telse\r\n\t{\r\n\t\tif (no_of_paginations > 7)\r\n\t\t{\r\n\t\t\tend_loop = 7;\r\n\t\t}\r\n\t}\r\n\r\n\tpag_navigation += \"<ul>\";\r\n\r\n\tif (first_btn && cur_page > 1)\r\n\t{\r\n\t\tpag_navigation += \"<li p='1' class='active'>First<\/li>\";\r\n\t}\r\n\telse if (first_btn)\r\n\t{\r\n\t\tpag_navigation += \"<li p='1' class='inactive'>First<\/li>\";\r\n\t}\r\n\r\n\tif (previous_btn && cur_page > 1)\r\n\t{\r\n\t\tvar pre = cur_page - 1;\r\n\t\tpag_navigation += \"<li p='\" + pre + \"' class='active'>Previous<\/li>\";\r\n\t}\r\n\telse if (previous_btn)\r\n\t{\r\n\t\tpag_navigation += \"<li class='inactive'>Previous<\/li>\";\r\n\t}\r\n\r\n\tfor (int i = start_loop; i <= end_loop; i++)\r\n\t{\r\n\r\n\t\tif (cur_page == i)\r\n\t\t\tpag_navigation += \"<li p='\" + i + \"' class = 'selected' >\" + i + \"<\/li>\";\r\n\t\telse\r\n\t\t\tpag_navigation += \"<li p='\" + i + \"' class='active'>\" + i + \"<\/li>\";\r\n\t}\r\n\r\n\tif (next_btn && cur_page < no_of_paginations)\r\n\t{\r\n\t\tvar nex = cur_page + 1;\r\n\t\tpag_navigation += \"<li p='\" + nex + \"' class='active'>Next<\/li>\";\r\n\t}\r\n\telse if (next_btn)\r\n\t{\r\n\t\tpag_navigation += \"<li class='inactive'>Next<\/li>\";\r\n\t}\r\n\r\n\tif (last_btn && cur_page < no_of_paginations)\r\n\t{\r\n\t\tpag_navigation += \"<li p='\" + no_of_paginations + \"' class='active'>Last<\/li>\";\r\n\t}\r\n\telse if (last_btn)\r\n\t{\r\n\t\tpag_navigation += \"<li p='\" + no_of_paginations + \"' class='inactive'>Last<\/li>\";\r\n\t}\r\n\r\n\tpag_navigation = pag_navigation + \"<\/ul>\";\r\n\r\n\t\/* Lets put our variables in a dictionary *\/\r\n\tvar response = new Dictionary<string, string> {\r\n\t\t{ \"content\", pag_content },\r\n\t\t{ \"navigation\", pag_navigation }\r\n\t};\r\n\r\n\t\/* Then we return the Dictionary in json format to our front-end *\/\r\n\tstring json = new JavaScriptSerializer().Serialize(response);\r\n\treturn json;\r\n}\r\n[\/cc]\r\n\r\nGo to Solution Explorer then create a file under <strong>Scripts<\/strong> directory, name it <strong>App.js<\/strong>. In it, put the following code:\r\n[cc lang=\"javascript\"]\r\n\/**\r\n * App Class \r\n *\r\n * @author\t\tCarl Victor Fontanos\r\n * @author_url\twww.carlofontanos.com\r\n *\r\n *\/\r\n\r\n\/**\r\n * Setup a App namespace to prevent JS conflicts.\r\n *\/\r\nvar app = {\r\n\r\n    Posts: function () {\r\n\r\n        \/**\r\n\t\t * This method contains the list of functions that needs to be loaded\r\n\t\t * when the \"Posts\" object is instantiated.\r\n\t\t *\r\n\t\t *\/\r\n        this.init = function () {\r\n            this.get_all_items_pagination();          \r\n        }\r\n\r\n        \/**\r\n\t\t * Load front-end items pagination.\r\n\t\t *\/\r\n        this.get_all_items_pagination = function () {\r\n\r\n            _this = this;\r\n\r\n            \/* Check if our hidden form input is not empty, meaning it's not the first time viewing the page. *\/\r\n            if ($('form.post-list input').val()) {\r\n                \/* Submit hidden form input value to load previous page number *\/\r\n                data = JSON.parse($('form.post-list input').val());\r\n                _this.ajax_get_all_items_pagination(data.page, data.name, data.sort);\r\n            } else {\r\n                \/* Load first page *\/\r\n                _this.ajax_get_all_items_pagination(1, $('.post_name').val(), $('.post_sort').val());\r\n            }\r\n\r\n            \/* Search *\/\r\n            $('body').on('click', '.post_search_submit', function () {\r\n                _this.ajax_get_all_items_pagination(1, $('.post_name').val(), $('.post_sort').val());\r\n            });\r\n            \/* Search when Enter Key is triggered *\/\r\n            $(\".post_search_text\").keyup(function (e) {\r\n                if (e.keyCode == 13) {\r\n                    _this.ajax_get_all_items_pagination(1, $('.post_name').val(), $('.post_sort').val());\r\n                }\r\n            });\r\n\r\n            \/* Pagination Clicks   *\/\r\n            $('body').on('click', '.pagination-nav li.active', function () {\r\n                var page = $(this).attr('p');\r\n                _this.ajax_get_all_items_pagination(page, $('.post_name').val(), $('.post_sort').val());\r\n            });\r\n        }\r\n\r\n        \/**\r\n\t\t * AJAX front-end items pagination.\r\n\t\t *\/\r\n        this.ajax_get_all_items_pagination = function (page, order_by_name, order_by_sort) {\r\n\r\n            if ($(\".pagination-container\").length > 0 && $('.products-view-all').length > 0) {\r\n                $(\".pagination-container\").html('<img src=\"\/Content\/Images\/loading.gif\" class=\"ml-tb\" \/>');\r\n\r\n                var post_data = {\r\n                    page: page,\r\n                    search: $('.post_search_text').val(),\r\n                    name: order_by_name,\r\n                    sort: order_by_sort,\r\n                    max: $('.post_max').val(),\r\n                };\r\n\r\n                $('form.post-list input').val(JSON.stringify(post_data));\r\n\r\n                var data = {\r\n                    action: 'get-all-products',\r\n                    data: JSON.parse($('form.post-list input').val())\r\n                };\r\n\r\n                $.ajax({\r\n                    url: '\/Products\/Index',\r\n                    type: 'POST',\r\n                    data: data,\r\n                    success: function (response) {\r\n                        response = JSON.parse(response);\r\n\r\n                        if ($(\".pagination-container\").html(response.content)) {\r\n                            $('.pagination-nav').html(response.navigation);\r\n                            $('.table-post-list th').each(function () {\r\n                                \/* Append the button indicator *\/\r\n                                $(this).find('span.glyphicon').remove();\r\n                                if ($(this).hasClass('active')) {\r\n                                    if (JSON.parse($('form.post-list input').val()).th_sort == 'DESC') {\r\n                                        $(this).append(' <span class=\"glyphicon glyphicon-chevron-down pull-right\"><\/span>');\r\n                                    } else {\r\n                                        $(this).append(' <span class=\"glyphicon glyphicon-chevron-up pull-right\"><\/span>');\r\n                                    }\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\/**\r\n * When the document has been loaded...\r\n *\r\n *\/\r\njQuery(document).ready(function () {\r\n\r\n    posts = new app.Posts(); \/* Instantiate the Posts Class *\/\r\n    posts.init(); \/* Load Posts class methods *\/\r\n\t\r\n});\r\n[\/cc]\r\n\r\nThen go to your Views -&gt; Products -&gt; Index.cshtml then replace everything with the following code:\r\n[cc lang=\"html\"]\r\n@model IEnumerable<MyAppName.Models.Product>\r\n\r\n@{\r\n    ViewBag.Title = \"Index\";\r\n    Layout = \"~\/Views\/Shared\/_Layout.cshtml\";\r\n}\r\n\r\n<h2>Products<\/h2>\r\n\r\n<div class=\"products-view-all\">\r\n    <form class=\"post-list\">\r\n        <input type=\"hidden\" value=\"\">\r\n    <\/form>\r\n    <div class=\"clearfix\">\r\n        <article class=\"navbar-form navbar-left p-0 m-0 ml-b\">\r\n            <div class=\"form-group\">\r\n                <label>Per Page: <\/label>\r\n                <select class=\"form-control post_max m-b\">\r\n                    <option value=\"4\">4<\/option>\r\n                    <option value=\"8\">8<\/option>\r\n                    <option value=\"16\">16<\/option>\r\n                <\/select>\r\n            <\/div>\r\n            <label>\r\n                Search Keyword:\r\n                <input type=\"text\" placeholder=\"Enter a keyword\" class=\"form-control post_search_text m-b\">\r\n            <\/label>\r\n            <div class=\"form-group\">\r\n                <label>Order By: <\/label>\r\n                <select class=\"form-control post_name m-b\">\r\n                    <option value=\"name\">Name<\/option>\r\n                    <option value=\"price\">Price<\/option>\r\n                    <option value=\"date\">Date Posted<\/option>\r\n                <\/select>\r\n                <select class=\"form-control post_sort m-b\">\r\n                    <option value=\"ASC\">ASC<\/option>\r\n                    <option value=\"DESC\">DESC<\/option>\r\n                <\/select>\r\n            <\/div>\r\n            <input type=\"submit\" value=\"Filter\" class=\"btn btn-primary post_search_submit m-b\">\r\n        <\/article>\r\n    <\/div>\r\n    <hr>\r\n    <div class=\"clearfix\">\r\n        <div class=\"pagination-container clearfix\"><br class=\"clear\"><\/div>\r\n        <div class=\"pagination-nav\"><\/div>\r\n    <\/div>\r\n<\/div>\r\n[\/cc]\r\n\r\nFinally, let's add some CSS styling to our Pagination navigation, simply drop off the following code into your Site.css:\r\n[cc lang=\"css\"]\r\n\/* Pagination Styles *\/\r\n.pagination-nav { margin: 30px 0 20px 0; }\r\n.pagination-nav ul {margin: 0; padding: 0;}\r\n.pagination-nav ul li {display: inline-block; margin: 3px; padding: 6px 10px; background: #FFF; color: black; border-radius: 2px; }\r\n.pagination-nav ul li.active:hover {cursor: pointer; background: #18bc9c; color: white; }\r\n.pagination-nav ul li.inactive {background: #e8e8e8;}\r\n.pagination-nav ul li.selected {background: #18bc9c; color: white;}\r\n\r\n[\/cc]\r\n\r\nNow add a few items and see our AJAX Pagination with search and sort in action!","post_title":"AJAX Pagination with Search and Sort in ASP.NET MVC 5","post_excerpt":"A simple tutorial which demonstrates how you can paginate your data using AJAX and apply search and sort features using Entity Framework in ASP.NET MVC 5.","post_status":"publish","comment_status":"open","ping_status":"open","post_password":"","post_name":"ajax-pagination-with-search-and-sort-using-asp-net-mvc5","to_ping":"","pinged":"","post_modified":"2016-12-25 10:56:31","post_modified_gmt":"2016-12-25 02:56:31","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=1699","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":973,"post_author":"1","post_date":"2014-11-26 05:25:35","post_date_gmt":"2014-11-26 05:25:35","post_content":"Bellow is a sample code that asynchronously sends a post request to a file named \"test.php\". All of these happens behind the scenes using  XMLHttpRequest Object.\r\n\r\n<strong>So why use AJAX on the client-side instead of PHP?<\/strong> - AJAX allows web pages to be updated asynchronously by exchanging small amounts of data with the server behind the scenes. This means that it is possible to update parts of a web page, without reloading the whole page. Classic web pages, (which do not use AJAX) reloads the entire page for the content to change, which, in my opinion, is slower. So that is why I prefer AJAX for client-side processing.\r\n\r\n[cc lang = \"javascript\"]\r\n<!DOCTYPE html>\r\n<html>\r\n<head>\r\n\t<script>\r\n\tfunction cvf_load_php_response() {\r\n\t\tvar xmlhttp;\r\n\t\tif (window.XMLHttpRequest) { \/\/ code for IE7+, Firefox, Chrome, Opera, Safari\r\n\t\t\txmlhttp = new XMLHttpRequest();\r\n\t\t} else { \/\/ code for IE6, IE5\r\n\t\t\txmlhttp = new ActiveXObject(\"Microsoft.XMLHTTP\");\r\n\t\t}\r\n\t\t\r\n\t\t\/\/ Stores a function (or the name of a function) to be called automatically each time the readyState property changes\r\n\t\txmlhttp.onreadystatechange=function() {\r\n\t\t\t\r\n\t\t\t\/\/ 0: request not initialized \r\n\t\t\t\/\/ 1: server connection established\r\n\t\t\t\/\/ 2: request received \r\n\t\t\t\/\/ 3: processing request \r\n\t\t\t\/\/ 4: request finished and response is ready\r\n\t\t\t\r\n\t\t\t\/\/ 200: \"OK\"\r\n\t\t\t\/\/ 404: Page not found\r\n\t\t\t\r\n\t\t\t\/\/ When readyState is 4 and status is 200, the response is ready:\r\n\t\t\tif (xmlhttp.readyState == 4 && xmlhttp.status == 200) {\r\n\t\t\t\tdocument.getElementById(\"cvf_div\").innerHTML = xmlhttp.responseText;\r\n\t\t\t}\r\n\t\t}\r\n\t\txmlhttp.open(\"POST\",\"test.php\",true);\r\n\t\t\/\/ To POST data like an HTML form, add an HTTP header with setRequestHeader(). Specify the data you want to send in the send() method:\r\n\t\txmlhttp.setRequestHeader(\"Content-type\",\"application\/x-www-form-urlencoded\");\r\n\t\txmlhttp.send(\"fname=Carlo&lname=Fontanos\");\r\n\t}\r\n\t\r\n\t\r\n\t\/\/ Load the function or if you want trigger the function on button click then use onclick=\"cvf_load_php_response()\"\r\n\tcvf_load_php_response();\r\n\t<\/script>\r\n<\/head>\r\n<body>\r\n\t<div id=\"cvf_div\"><\/div>\r\n<\/body>\r\n<\/html>\r\n[\/cc]\r\n\r\nWhat we did above is we instantiated the XMLHttpRequest (for IE7+, Firefox, Chrome, Opera, Safari) or ActiveXObject(\"Microsoft.XMLHTTP\") -  (for IE6, IE5) and set it into a variable xmlhttp. We then set a function onreadystatechange that will be called automatically each time the readyState property changes. If the readyState returns \"4\" with the status of \"200\", we set the response of xmlhttp.responseText to the element where we want the response of \"test.php\"  to be outputted. \r\n\r\nCreate a new php file \"test.php\" on the same folder then place this block of code:\r\n[cc lang = \"php\"]\r\n<?php \r\n\/\/ Check if post is set and not empty\r\nif(isset($_POST['fname']) && !empty($_POST['fname'])) {\r\n        \/\/ Generate the response\r\n\techo 'I received this first name: ' . $_POST['fname'];\r\n}\r\n?>\r\n[\/cc]\r\n\r\nif you want to trigger a $_GET to read contents of a document like a text file, then you don't need to give the .send() method any parameters. There is also no need to set the setRequestHeader() for HTTP header.\r\n\r\n<code>\r\nxmlhttp.open(\"GET\",\"test.txt\",true);\r\nxmlhttp.send();\r\n<\/code>\r\n\r\nReference: www.w3schools.com","post_title":"AJAX using XMLHttpRequest Object","post_excerpt":"Learn the basics of AJAX using XMLHttpRequest with Javascript.","post_status":"publish","comment_status":"open","ping_status":"closed","post_password":"","post_name":"ajax-using-xmlhttprequest-object","to_ping":"","pinged":"","post_modified":"2015-02-09 06:18:56","post_modified_gmt":"2015-02-09 06:18:56","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=973","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":1238,"post_author":"1","post_date":"2015-12-21 06:00:09","post_date_gmt":"2015-12-21 06:00:09","post_content":"JSON is very light weight, structured, easy to parse and much human readable. JSON is best alternative to XML when your android app needs to interchange data with your server. In this simple tutorial I am going to show you how to parse a JSON response from a URL and display it in a ListView\r\n\r\n<h3>Before we start<\/h3>\r\n<ul>\r\n\t<li>Make sure you have properly setup the Android SDK, AVD for Testing the Application.<\/li>\r\n\t<li>Create a New project in Android Studio \/ Eclipse IDE with the package as \"<strong>com.carlofontanos.parsejsondatafromurl<\/strong>\". Create the Main Activity as \u201c<strong>MainActivity<\/strong>\u201d and the main Layout as \u201c<strong>activity_main<\/strong>\u201d.<\/li>\r\n<\/ul>\r\n\r\nFor this example, the JSON data we are going to parse can be found here: <strong>http:\/\/carlofontanos.com\/api\/tutorials.php?data=all<\/strong>\r\n\r\n\r\n<strong>MainActivity.java<\/strong>\r\n[cc lang = \"java\"]\r\npackage com.carlofontanos.parsejsondatafromurl;\r\n\r\nimport android.support.v7.app.AppCompatActivity;\r\nimport android.os.Bundle;\r\nimport java.io.BufferedReader;\r\nimport java.io.IOException;\r\nimport java.io.InputStream;\r\nimport java.io.InputStreamReader;\r\nimport java.util.ArrayList;\r\n\r\nimport org.apache.http.HttpResponse;\r\nimport org.apache.http.client.ClientProtocolException;\r\nimport org.apache.http.client.HttpClient;\r\nimport org.apache.http.client.methods.HttpGet;\r\nimport org.apache.http.impl.client.DefaultHttpClient;\r\nimport org.json.JSONArray;\r\nimport org.json.JSONObject;\r\nimport android.os.AsyncTask;\r\nimport android.util.Log;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.ListView;\r\n\r\npublic class MainActivity extends AppCompatActivity {\r\n\r\n    ListView listView;\r\n    ArrayList<String> tutorialList = new ArrayList<String>();\r\n\r\n    private final static String URL = \"http:\/\/carlofontanos.com\/api\/tutorials.php?data=all\";\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n\r\n        new FetchDataTask().execute(URL);\r\n\r\n    }\r\n\r\n    private class FetchDataTask extends AsyncTask<String, Void, String>{\r\n\r\n        @Override\r\n        protected String doInBackground(String... params) {\r\n\r\n            InputStream inputStream = null;\r\n            String result= null;\r\n            HttpClient client = new DefaultHttpClient();\r\n            HttpGet httpGet = new HttpGet(params[0]);\r\n\r\n            try {\r\n\r\n                HttpResponse response = client.execute(httpGet);\r\n                inputStream = response.getEntity().getContent();\r\n\r\n                \/\/ convert inputstream to string\r\n                if(inputStream != null){\r\n                    result = convertInputStreamToString(inputStream);\r\n                    Log.i(\"App\", \"Data received:\" +result);\r\n\r\n                }\r\n                else\r\n                    result = \"Failed to fetch data\";\r\n\r\n                return result;\r\n\r\n            } catch (ClientProtocolException e) {\r\n                e.printStackTrace();\r\n            } catch (IOException e) {\r\n                e.printStackTrace();\r\n            }\r\n\r\n            return null;\r\n        }\r\n\r\n        @Override\r\n        protected void onPostExecute(String dataFetched) {\r\n            \/\/parse the JSON data and then display\r\n            parseJSON(dataFetched);\r\n        }\r\n\r\n\r\n        private String convertInputStreamToString(InputStream inputStream) throws IOException{\r\n            BufferedReader bufferedReader = new BufferedReader( new InputStreamReader(inputStream));\r\n            String line = \"\";\r\n            String result = \"\";\r\n            while((line = bufferedReader.readLine()) != null)\r\n                result += line;\r\n\r\n            inputStream.close();\r\n            return result;\r\n\r\n        }\r\n\r\n        private void parseJSON(String data){\r\n\r\n            try{\r\n                JSONArray jsonMainNode = new JSONArray(data);\r\n\r\n                int jsonArrLength = jsonMainNode.length();\r\n\r\n                for(int i=0; i < jsonArrLength; i++) {\r\n                    JSONObject jsonChildNode = jsonMainNode.getJSONObject(i);\r\n                    String postTitle = jsonChildNode.getString(\"post_title\");\r\n                    tutorialList.add(postTitle);\r\n                }\r\n\r\n                \/\/ Get ListView object from xml\r\n                listView = (ListView) findViewById(R.id.list);\r\n\r\n                \/\/ Define a new Adapter\r\n                ArrayAdapter<String> adapter = new ArrayAdapter<String>(MainActivity.this, android.R.layout.simple_list_item_1, android.R.id.text1, tutorialList);\r\n\r\n                \/\/ Assign adapter to ListView\r\n                listView.setAdapter(adapter);\r\n\r\n            }catch(Exception e){\r\n                Log.i(\"App\", \"Error parsing data\" +e.getMessage());\r\n\r\n            }\r\n        }\r\n    }\r\n}\r\n[\/cc]\r\n\r\n\r\n<strong>actvitiy_main.xml<\/strong>\r\n[cc lang = \"xml\"]\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<RelativeLayout xmlns:android=\"http:\/\/schemas.android.com\/apk\/res\/android\"\r\n    xmlns:tools=\"http:\/\/schemas.android.com\/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\"${relativePackage}.${activityClass}\" >\r\n\r\n    <LinearLayout xmlns:android=\"http:\/\/schemas.android.com\/apk\/res\/android\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:orientation=\"vertical\" >\r\n\r\n        <ListView\r\n            android:id=\"@+id\/list\"\r\n            android:textColor=\"#000000\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_width=\"match_parent\">\r\n        <\/ListView>\r\n\r\n    <\/LinearLayout>\r\n\r\n<\/RelativeLayout>\r\n[\/cc]\r\n\r\nAndroid recently made a <a href=\"http:\/\/developer.android.com\/about\/versions\/marshmallow\/android-6.0-changes.html\" title=\"Android 6.0 (API Level 23) Changes\" target = \"_blank\">variety of system changes and API behavior changes<\/a>, they have removed the built in HTTPClient due to security reasons, but you can still use it by downloading the latest <strong>HTTPClient<\/strong> library from here <a href = \"https:\/\/hc.apache.org\/downloads.cgi\" target = \"_blank\">https:\/\/hc.apache.org\/downloads.cgi<\/a> - include the jar files into your <strong>app\/libs<\/strong> folder then add the following dependency into your gradle file: \r\n[cc lang = \"java\"]\r\ndependencies {\r\n    compile fileTree(dir: 'libs', include: ['*.jar'])\r\n}\r\n[\/cc]\r\n\r\nYou might also get a <strong>META-INF error<\/strong> when running the app, to fix that simply include the following packing options in your gradle file: \r\n\r\n[cc lang = \"java\"]\r\nandroid {\r\n\tpackagingOptions {\r\n        exclude 'META-INF\/DEPENDENCIES'\r\n        exclude 'META-INF\/LICENSE'\r\n        exclude 'META-INF\/LICENSE.txt'\r\n        exclude 'META-INF\/license.txt'\r\n        exclude 'META-INF\/NOTICE'\r\n        exclude 'META-INF\/NOTICE.txt'\r\n        exclude 'META-INF\/notice.txt'\r\n        exclude 'META-INF\/ASL2.0'\r\n    }\r\n}\r\n[\/cc]\r\n\r\n\r\nAs we are fetching the JSON by making HTTP calls, we need to add <strong>INTERNET permission <\/strong>in our AndroidManifest.xml file. Open <strong>AndroidManifest.xml<\/strong> and add the following permission.\r\n[cc lang = \"html\"]\r\n<uses-permission android:name=\"android.permission.INTERNET\" \/>\r\n[\/cc]\r\n\r\n<h3>Run the Program<\/h3>\r\nEverything's set, now it's time to run your program! You should be able to see a ListView similar to the screenshot bellow: \r\n\r\n<img src=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2015\/12\/simple-android-app-that-queries-data-from-a-url-then-displays-it-to-the-screen.jpg\" alt=\"simple-android-app-that-queries-data-from-a-url-then-displays-it-to-the-screen\" width=\"607\" height=\"691\" class=\"alignnone size-full wp-image-1239\" \/>\r\n---\r\n\r\n","post_title":"Android Development - Parsing JSON Data from a URL","post_excerpt":"How to parse JSON data using HTTPClient and display the results on a ListView","post_status":"publish","comment_status":"open","ping_status":"open","post_password":"","post_name":"android-development-parsing-json-data-from-a-url","to_ping":"","pinged":"","post_modified":"2016-03-04 14:35:11","post_modified_gmt":"2016-03-04 06:35:11","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=1238","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":1207,"post_author":"1","post_date":"2015-11-27 07:01:38","post_date_gmt":"2015-11-27 07:01:38","post_content":"<h3>Directive<\/h3>\r\nAdd this directive to your app:\r\n[cc lang = \"php\"] \r\nvar app = angular.module('tutorialWebApp', ['ngRoute']);\r\napp.directive('loading', function () {\r\n\treturn {\r\n\t\trestrict: 'E',\r\n\t\treplace:true,\r\n\t\ttemplate: '<p><img src=\"img\/loading.gif\"\/><\/p>', \/\/ Define a template where the image will be initially loaded while waiting for the ajax request to complete\r\n\t\tlink: function (scope, element, attr) {\r\n\t\t\tscope.$watch('loading', function (val) {\r\n\t\t\t\tval = val ? $(element).show() : $(element).hide();\t\/\/ Show or Hide the loading image\t\r\n\t\t\t});\t\r\n\t\t}\r\n\t}\r\n});\r\n[\/cc]\r\n\r\nUsage: Add this code to before $http.get: $scope.loading = true; then $scope.loading = false; on ajax success\r\n\r\n<h3>Example<\/h3>\r\nExample usage in a controller:\r\n[cc lang = \"php\"] \r\napp.controller('PageCtrl', function ( $scope, $http, $routeParams ) {\r\n\t$scope.loading = true; \/\/ Show loading image\r\n\t$http.get('http:\/\/example.com\/posts').success(function(data){\r\n\t\t$scope.posts = data;\r\n\t\t$scope.loading = false; \/\/ hide loading image on ajax success\r\n\t});\r\n});\r\n[\/cc]","post_title":"AngularJS - Show a loading image on HTTP Requests","post_excerpt":"Append a loading gif image to your screen while AJAX is fetching data","post_status":"publish","comment_status":"open","ping_status":"open","post_password":"","post_name":"angularjs-show-a-loading-image-on-http-requests","to_ping":"","pinged":"","post_modified":"2015-11-27 08:00:39","post_modified_gmt":"2015-11-27 08:00:39","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=1207","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":1208,"post_author":"1","post_date":"2015-11-27 07:41:29","post_date_gmt":"2015-11-27 07:41:29","post_content":"Have you tried creating an app that load contents via AJAX?, I am sure you later find it annoying that your page template is loaded faster than your Ajax Request causing your users to see an incomplete page. In this tutorial I will show you how you can tell AngularJS to wait for the Ajax Request to complete before displaying your page template to the screen. This tutorial also covers resolving promises with Dynamically generated routes.\r\n\r\n<h3>Using \"resolve\"<\/h3>\r\nFirst define a route with resolve attribute like this:\r\n[cc lang = \"javascript\"]\r\nvar app = angular.module('tutorialWebApp', ['ngRoute']);\r\napp.config(function ($routeProvider, $locationProvider) {\r\n\t$routeProvider\t\r\n\t.when(\"\/page-title\", {\r\n\t\ttemplateUrl: \"partials\/page-title.php\", \r\n\t\tcontroller: \"PageCtrl\",\r\n\t\tresolve: {\r\n\t\t\tpageData: function($http, $route){\r\n\t\t\t\treturn $http.get('http:\/\/example.com\/posts').then(function(response){\r\n\t\t\t\t\treturn response.data;\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t})\r\n});\r\n[\/cc]\r\n\r\nNotice that the controller definition contains a resolve object which declares things which should be available to the controller constructor. \r\n\r\nThe resolve.pageData function is responsible for returning a promise. All of the promises are collected and the route change is delayed until after all of the promises are resolved.\r\n\r\n<h3>Dynamic Routes<\/h3>\r\nWe can also make the <strong>resolve <\/strong>attribute work with dynamically generated routes:\r\n[cc lang = \"javascript\"]\r\nvar app = angular.module('tutorialWebApp', ['ngRoute']);\r\napp.config(function ($routeProvider, $locationProvider) {\r\n\t$routeProvider\t\r\n\t.when(\"page-list\/:slug\", {\r\n\t\ttemplateUrl: \"partials\/page-single-title.php\", \r\n\t\tcontroller: \"PageCtrl\",\r\n\t\tresolve: {\t\t\t\r\n\t\t\tpageData: function($http, $route){\r\n\t\t\t\treturn $http.get('http:\/\/example.com\/posts\/?name='+$route.current.params.slug).then(function(response){\r\n\t\t\t\t\treturn response.data;\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t})\r\n});\r\n[\/cc]\r\n\r\n<h3>Accessing Data in a Controller<\/h3>\r\nYou can simply access the data result like this:\r\n[cc lang = \"javascript\"]\r\napp.controller('PageSingleCtrl', function( $scope, pageData ) {\r\n\t$scope.post = pageData;\r\n});\r\n[\/cc]","post_title":"AngularJS - Show route only after all Ajax requests are resolved","post_excerpt":"Show route page only after Ajax request is complete for single or dynamic routes","post_status":"publish","comment_status":"open","ping_status":"open","post_password":"","post_name":"angularjs-show-route-only-after-all-ajax-requests-are-resolved","to_ping":"","pinged":"","post_modified":"2015-11-27 08:36:23","post_modified_gmt":"2015-11-27 08:36:23","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=1208","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":993,"post_author":"1","post_date":"2014-12-08 07:14:27","post_date_gmt":"2014-12-08 07:14:27","post_content":"This page is currently under construction...","post_title":"Authentication in Codeigniter","post_excerpt":"Create a login page, register page, and account page in CodeIgniter","post_status":"publish","comment_status":"open","ping_status":"closed","post_password":"","post_name":"authentication-in-codeigniter","to_ping":"","pinged":"","post_modified":"2015-02-09 05:56:45","post_modified_gmt":"2015-02-09 05:56:45","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=993","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":1926,"post_author":"1","post_date":"2017-07-14 15:09:14","post_date_gmt":"2017-07-14 07:09:14","post_content":"<h3>Demo using Expo:<\/h3>\r\n<a href=\"https:\/\/expo.io\/@carlofontanos\/react-redux-basic-example\">https:\/\/expo.io\/@carlofontanos\/react-redux-basic-example<\/a>\r\n<h3><a id=\"user-content-live-demo\" class=\"anchor\" href=\"https:\/\/github.com\/carlo-fontanos\/react-redux-basic-example#live-demo\" aria-hidden=\"true\"><\/a>Live Demo:<\/h3>\r\n<a href=\"https:\/\/github.com\/carlo-fontanos\/react-redux-basic-example\/blob\/master\/demo.gif\" target=\"_blank\" rel=\"noopener\"><img src=\"https:\/\/github.com\/carlo-fontanos\/react-redux-basic-example\/raw\/master\/demo.gif\" alt=\"alt text\" \/><\/a>\r\n<h3><a id=\"user-content-includes\" class=\"anchor\" href=\"https:\/\/github.com\/carlo-fontanos\/react-redux-basic-example#includes\" aria-hidden=\"true\"><\/a>Includes:<\/h3>\r\n<ul>\r\n \t<li>Very basic implementation of Redux<\/li>\r\n \t<li>Persistent login using <span class=\"lang:default decode:true crayon-inline \">AsyncStorage<\/span><\/li>\r\n \t<li>Simple login and logout functionality<\/li>\r\n \t<li>Integration of Redux to a\u00a0<a href=\"https:\/\/github.com\/react-community\/create-react-native-app\">CRNA template<\/a><\/li>\r\n<\/ul>\r\n\r\n<span id=\"page-has-downlodable-file\" file=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2017\/09\/react-redux-basic-example-master.zip\"><\/span>","post_title":"Authentication with React Native and Redux - Basic Example","post_excerpt":"Demonstrates a simple user authentication using Redux - the most popular state management module.","post_status":"publish","comment_status":"open","ping_status":"open","post_password":"","post_name":"authentication-with-react-native-and-redux-basic-example","to_ping":"","pinged":"","post_modified":"2017-09-19 15:34:57","post_modified_gmt":"2017-09-19 07:34:57","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=1926","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":1200,"post_author":"1","post_date":"2015-11-04 08:09:35","post_date_gmt":"2015-11-04 08:09:35","post_content":"If you are building a theme in Wordpress and you want to automatically generate nav menus on theme activation, here is how you can do it: \r\n\r\nWe need two functions to make it easier for us to auto generate nav menus and menu items:\r\n\r\nMenu Item Generator Function:\r\n[cc lang = \"php\"]\r\nfunction generate_site_nav_menu_item( $term_id, $title, $url ) {\r\n\t\r\n\twp_update_nav_menu_item($term_id, 0, array(\r\n\t\t'menu-item-title' \t=>\tsprintf( __('%s', 'text_domain'), $title ),\r\n\t\t'menu-item-url' \t=>\thome_url( '\/' . $url ), \r\n\t\t'menu-item-status' \t=>\t'publish'\r\n\t) );\r\n\t\r\n}\r\n[\/cc]\r\n<ul>\r\n<li>The function above will automatically generate a \"Custom Link\" that points to the page we specify on the $url parameter.<\/li>\r\n<\/ul>\r\n\r\nMenu Generator Function:\r\n[cc lang = \"php\"]\r\nfunction generate_site_nav_menu( $menu_name, $menu_items_array, $location_target ) {\r\n\t\r\n\t$menu_primary = $menu_name;\r\n\twp_create_nav_menu( $menu_primary );\r\n\t$menu_primary_obj = get_term_by( 'name', $menu_primary, 'nav_menu' );\r\n\t\r\n\tforeach( $menu_items_array as $page_name => $page_location ){\r\n\t\tgenerate_site_nav_menu_item( $menu_primary_obj->term_id, $page_name, $page_location );\r\n\t}\r\n\t\r\n\t$locations_primary_arr = get_theme_mod( 'nav_menu_locations' );\r\n\t$locations_primary_arr[$location_target] = $menu_primary_obj->term_id;\r\n\tset_theme_mod( 'nav_menu_locations', $locations_primary_arr );\r\n\t\t\r\n\tupdate_option( 'menu_check', true );\r\n\t\r\n}\r\n[\/cc]\r\n\r\n<h3>Usage<\/h3>\r\nExample let's create two Header menus, menu 1 will be shown to Logged in users and menu 2 will be shown to visitors only\r\n\r\nRegister 2 Navigations: primary and secondary\r\n[cc lang = \"php\"]\r\nfunction my_after_setup_theme() {\r\n\r\n\t\/**\r\n\t * Register Navigations\r\n\t *\/\r\n\tregister_nav_menus( array(\r\n\t\t'primary'\t=> __('Primary Navigation', 'text_domain'),\r\n\t\t'secondary'\t=> __('Secondary Navigation', 'text_domain')\r\n\t) );\t\r\n\t\r\n}\r\nadd_action( 'after_setup_theme', 'my_after_setup_theme') );\r\n[\/cc]\r\n\r\nRegister your menu and menu items:\r\n[cc lang = \"php\"]\r\n\/**\r\n * Runs when user switches to your custom theme\r\n *\r\n *\/\r\nfunction my_after_switch_theme() {\r\n\/**\r\n * Setup the site navigation\r\n *\/\t\t\r\n\t$run_menu_maker_once = get_option('menu_check');\r\n\r\n\tif ( ! $run_menu_maker_once ){\r\n\t\t\/**\r\n\t\t * Setup Navigation for : Header Menu - Logged In\r\n\t\t *\/\t\t\r\n\t\t$primary_menu_items = array(\r\n\t\t\t'Listings'\t=>\t'listings',\r\n\t\t\t'Submit Ad'\t=>\t'submit-ad',\t\t\r\n\t\t\t'Messages'\t=>\t'messages',\r\n\t\t\t'Account'\t=>\t'account',\r\n\t\t\t'Logout'\t=>\t'account?action=logout' \/\/ You need to setup your logout url using wp_logout()\r\n\t\t);\r\n\t\tcvf_generate_site_nav_menu( 'Header Menu - Logged In', $primary_menu_items, 'primary' );\r\n\t\t\r\n\t\t\/**\r\n\t\t * Setup Navigation for : Header Menu - Logged Out\r\n\t\t *\/\r\n\t\t$secondary_menu_items = array(\r\n\t\t\t'Listings'\t=>\t'listings',\r\n\t\t\t'Submit Ad'\t=>\t'submit-ad',\t\t\t\r\n\t\t\t'Register'\t=>\t'register',\r\n\t\t\t'Login'\t\t=>\t'login'\r\n\t\t);\r\n\t\tcvf_generate_site_nav_menu( 'Header Menu - Logged Out', $secondary_menu_items, 'secondary' );\r\n\t}\r\n}\r\nadd_action( 'after_switch_theme', 'my_after_switch_theme') );\r\n[\/cc]\r\n<ul>\r\n<li>Function above will execute when you switch \/ activate your theme.<\/li>\r\n<li>Will be executed only when option \"menu_check\" is not equal to 1.<\/li>\r\n<\/ul>\r\n\r\nIn your header.php, use the following code to output the menus for logged-in users or visitors only:\r\n[cc lang = \"php\"]\r\n<?php if( is_user_logged_in() ): ?>\t\r\n\t<?php wp_nav_menu( array('theme_location' => 'primary', 'fallback_cb' => 'fallback_menu_pages' ) ); ?>\r\n<?php else: ?>\r\n\t<?php wp_nav_menu( array('theme_location' => 'secondary', 'fallback_cb' => 'fallback_menu_pages' ) ); ?>\r\n<?php endif; ?>\r\n\r\n[\/cc]\r\n\r\nIf you notice we added a fallback, which is the function that will be called if our menu (primary \/ secondary) is not existing. Add this fallback function to your functions.php:\r\n\r\n[cc lang = \"php\"]\r\nfunction fallback_menu_pages() {\r\n\t\r\n\t$list_pages = '';\r\n\t$args = array(\r\n\t\t'sort_order' => 'asc',\r\n\t\t'sort_column' => 'post_title',\r\n\t\t'hierarchical' => 1,\r\n\t\t'child_of' => 0,\r\n\t\t'parent' => -1,\r\n\t\t'offset' => 0,\r\n\t\t'number' => 5,\r\n\t\t'post_type' => 'page',\r\n\t\t'post_status' => 'publish'\r\n\t);\t\r\n\t$pages = get_pages( $args );\r\n\t\t\r\n\tforeach( $pages as $key => $page ){\r\n\t\t$list_pages .= '<li><a href = \"' . get_permalink( $page->ID ) . '\">' . $page->post_title . '<\/a><\/li>';\r\n\t}\r\n\t\r\n\techo $list_pages;\r\n\t\r\n}\r\n[\/cc]\r\n<ul>\r\n<li>The function above will output only 5 menu items. - To change this, set \"number\" to the number of menu items you want to output.<\/li>\r\n<\/ul>\r\n","post_title":"Auto Generate Nav Menus on Theme Activation in WordPress","post_excerpt":"Automatically generate navigation menus on WordPress Theme activation","post_status":"publish","comment_status":"open","ping_status":"open","post_password":"","post_name":"auto-generate-nav-menus-on-theme-activation-in-wordpress","to_ping":"","pinged":"","post_modified":"2015-11-12 06:26:38","post_modified_gmt":"2015-11-12 06:26:38","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=1200","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":359,"post_author":"1","post_date":"2014-07-02 16:42:57","post_date_gmt":"2014-07-02 16:42:57","post_content":"<img src=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2014\/07\/auto-login-to-wordpress-from-another-website.jpg\" alt=\"\" class=\"alignnone wp-image-1964\" \/>\r\n\r\nAutomatically login to <strong>Website B<\/strong> from <strong>Website A<\/strong> securely without using a password. We can accomplish this by using the wp_set_auth_cookie() function of WordPress.\r\n\r\nWebsite A = The website requesting for an autologin link.\r\nWebsite B = The wesite where you wish to be auto logged in.\r\n\r\nNOTE: I am assuming you have two synchronized\u00a0databases with the same usernames or user ID's.\r\n\r\nExecute this SQL query in your SQL Command Line to create a new table \"wp_autologin\"\r\n[cc lang = \"php\"]\r\nCREATE TABLE DATABASE_NAME.wp_autologin (\r\n  id INT NOT NULL AUTO_INCREMENT,\r\n  avatar VARCHAR(45) NULL,\r\n  random_key VARCHAR(45) NULL,\r\n  PRIMARY KEY (id));\r\n[\/cc]\r\n\r\n<strong>Step 1:<\/strong> Create a <a href = \"http:\/\/codex.wordpress.org\/Page_Templates#Template_Hierarchy\" target = \"_blank\">WordPress CUSTOM page<\/a> in Website B. To avoid errors later on, just name it \"autologin-api\"\r\n\r\nThis is where we will be receiving requests coming from <strong>Website A<\/strong>\r\n[cc lang = \"php\"]\r\n\/\/ Create initial default values for our data array\r\n$err_succ = array(\r\n\t'key'   => 0,\r\n\t'status' => 'failed'\r\n);\r\n\r\n\/\/ Check if the received key is '54321' and if the action is 'get_login_key'\r\nif( isset( $_POST ) && $_POST['key'] == '54321' && $_POST['action'] == 'get_login_key') {\r\n\t\r\n\tglobal $wpdb;\r\n\t\r\n\t\/\/ Check if we received a user_login from the POST, if yes - we sanitize it then save it to a variable\r\n\t$user_login = isset( $_POST['user_login'] ) ? sanitize_text_field( $_POST['user_login'] ) : '';\r\n\t\r\n\t\/\/ Get the random key of user from the database\r\n\t$user_random_key = $wpdb->get_var($wpdb->prepare(\"\r\n\t\tSELECT random_key FROM wp_autologin WHERE avatar = %s\", $user_login) );\r\n\t\r\n\t\/\/ Count the number of user_login from the database. if query returns > 0, then it means it exists on the database.\r\n\t$check_user_login = $wpdb->get_var($wpdb->prepare(\"\r\n\t\tSELECT COUNT(user_login) FROM wp_users WHERE user_login = '%s'\", $user_login ) );\r\n\t\r\n\t\/\/ Check if the received user_login exists on the wp_users table\r\n\tif ($check_user_login > 0) {\t\r\n\t\t\r\n\t\t\/\/ Check if $user_random_key variable returned a random_key. If no, we generate another random key.\r\n\t\tif(empty($user_random_key)) {\r\n\t\t\r\n\t\t\t\/\/ Generate key using md5 random strings\r\n\t\t\t$hash_key = md5($user_login + rand(5, 15));\r\n\t\t\t\t\t\r\n\t\t\t\/\/ Save the avatar(user_login) and key to the database\r\n\t\t\t$wpdb->insert(\r\n\t\t\t\t'wp_autologin', \r\n\t\t\t\tarray(\r\n\t\t\t\t\t'avatar' => $user_login,\r\n\t\t\t\t\t'random_key' => $hash_key\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\/\/ If $user_random_key variable returned a random_key, we return it to the requesting client.\r\n\t\t\t$hash_key = $user_random_key;\r\n\t\t}\r\n\t\t\r\n\t\t\/\/ Return the hash_key and set the status as success\r\n\t\t$err_succ['key'] = $hash_key;\r\n\t\t$err_succ['status'] = 'success';\r\n\t\t\t\r\n\t} else {\r\n\t\t\r\n\t\t\/\/ If the received user_login does not exist on the database, we return a failed status to the requesting client\r\n\t\t$err_succ['status'] = 'failed';\r\n\t}\r\n}\r\n\r\n\/\/ Set the array to a variable\r\n$result = $err_succ;\r\n\r\n\/\/ JSON encode the result then send it back to the requesting client\r\necho json_encode ($result);\r\n[\/cc]\r\n<strong>Step 2:<\/strong> Create another <a href = \"http:\/\/codex.wordpress.org\/Page_Templates#Template_Hierarchy\" target = \"_blank\">WordPress CUSTOM page<\/a> in Website B, name it \"autologin\"\r\n[cc lang = \"php\"]\r\nglobal $wpdb;\r\n\r\n\/\/ Check if user is already logged in, redirect to account if true\r\nif (!is_user_logged_in()) {\r\n\r\n\t\/\/ Check if the key is set and not emtpy\r\n\tif(isset($_GET['key']) && !empty($_GET['key'])){\r\n\r\n\t\t\/\/ Sanitize the received key to prevent SQL Injections\r\n\t\t$received_key = sanitize_text_field($_GET['key']);\r\n\t\t\r\n\t\t\/\/ Find the username from the database using the received key \r\n\t\t$get_username = $wpdb->get_var($wpdb->prepare(\"SELECT avatar FROM wp_autologin WHERE random_key = %s\", $received_key ) );\r\n\t\t\r\n\t\t\/\/ Check if query returned a result, throw an error if false\r\n\t\tif(!empty($get_username)){\r\n\t\t\r\n\t\t\t\/\/ Get user info from username then save it to a variable\r\n\t\t\t$user = get_user_by('login', $get_username );\r\n\t\t\t\r\n\t\t\t\/\/ Get the user id then set the login cookies to the browser\r\n\t\t\twp_set_auth_cookie($user->ID);\r\n\t\t\t\r\n\t\t\t\/\/ To make sure that the login cookies are already set, we double check.\r\n\t\t\tforeach($_COOKIE as $name => $value) {\r\n\t\t\t\t\r\n\t\t\t\t\/\/ Find the cookie with prefix starting with \"wordpress_logged_in_\"\r\n\t\t\t\tif(substr($name, 0, strlen('wordpress_logged_in_')) == 'wordpress_logged_in_') {\r\n\t\t\t\t\r\n\t\t\t\t\t\/\/ Redirect to account page if the login cookie is already set.\r\n\t\t\t\t\twp_redirect( home_url('\/account\/') );\r\n\t\t\t\t\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\r\n\t\t\t\t\t\/\/ If NOT set, we loop the URL until login cookie gets set to the browser\r\n\t\t\t\t\twp_redirect( home_url('\/autologin\/?key=' . $received_key ) );\r\n\t\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\techo 'Invalid Authentication Key';\r\n\t\t}\r\n\t} else {\r\n\t\twp_redirect( home_url() );\r\n\t}\r\n\r\n} else {\r\n\twp_redirect( home_url('\/account\/') );\r\n\texit;\r\n}\r\n[\/cc]\r\n\r\n<strong>Step 3:<\/strong> Send a request to Website B.\r\n\r\nFor this tutorial we are going to use cURL to send requests to Website B, feel free to use other techniques for sending  HTTP requests.\r\n[cc lang = \"php\"]\r\n\/\/ Define the URL where we will be sending a request for a random key\r\n\t$api_url = \"http:\/\/YOUR_WEBSITE_URL.com\/autologin-api\/\";\r\n\t\r\n\t\/\/ If you are using WordPress on website A, you can do the following to get the currently logged in user:\r\n\tglobal $current_user;\r\n\t$user_login = $current_user->user_login;\r\n\t\r\n\t\/\/ Set the parameters\r\n\t$params = array(\r\n\t\t'action'            => 'get_login_key', \/\/ The name of the action on Website B\r\n\t\t'key'\t\t\t\t=> '54321', \/\/ The key that was set on Website B for authentication purposes.\r\n\t\t'user_login'       => $user_login \/\/ Pass the user_login of the currently logged in user in Website A\r\n\t);\r\n\t\r\n\t\/\/ Send the data using cURL\r\n\t$ch = curl_init($api_url);\r\n\tcurl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);\r\n\tcurl_setopt($ch, CURLOPT_POST, 1);\r\n\tcurl_setopt($ch, CURLOPT_POSTFIELDS, http_build_query($params));\r\n\tcurl_setopt($ch, CURLOPT_FOLLOWLOCATION, 1);\r\n\tcurl_setopt($ch, CURLOPT_HEADER, 0);\r\n\tcurl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\r\n\t$gbi_response = curl_exec($ch);\r\n\tcurl_close($ch);\r\n\t\r\n\t\/\/ Parse the response\r\n\tparse_str($gbi_response);\r\n\t\r\n\t\/\/ Convert the response from Website B to an array\r\n\t$data = json_decode($gbi_response, true);\r\n\t\r\n\t\/\/ Set the received key to a variable\r\n\t$key = $data['key'];\r\n[\/cc]\r\n\r\nFrom here, you can now generate your link that will auto login to Website B.\r\n\r\n[cc lang = \"php\"]\r\necho '<a href = \"http:\/\/YOUR_WEBSITE_URL.com\/autologin\/?'.$key.'\">My Website B Account<\/a>';\r\n[\/cc]","post_title":"Auto Login to WordPress from another Website","post_excerpt":"Automatically login to Website B from Website A securely without using a password. ","post_status":"publish","comment_status":"open","ping_status":"closed","post_password":"","post_name":"auto-login-to-wordpress-from-another-website","to_ping":"","pinged":"\nhttp:\/\/carlofontanos.com\/terms-and-conditions\/","post_modified":"2017-07-27 16:37:52","post_modified_gmt":"2017-07-27 08:37:52","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=359","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":1036,"post_author":"1","post_date":"2015-01-09 06:20:45","post_date_gmt":"2015-01-09 06:20:45","post_content":"Don't have much background in PHP, AJAX and Javascript? that's ok, you can still use this tutorial. \r\n\r\nToday I am going to show you how you can build an AJAX Contact Form for your WordPress blog.\r\n\r\nStart by creating a PAGE in your WP backend, name the page \"contact\". Then in your theme directory create a file with similar contents to your page.php, name the file: page-contact.php . In your Settings->Permalinks, make sure that the \"Post name\" is selected.\r\n\r\nNow open page-contact.php then add the following code: (it should be within the loop)\r\n[cc lang = \"html\"]\r\n<div id=\"contact_form\">\r\n\t\r\n\t<div id=\"result\"><\/div>\r\n\t\r\n\t<div class=\"form-group\">\r\n\t\t<label for = \"name\">Name<\/label>\r\n\t\t<input type=\"text\" name = \"name\" class = \"form-control input-name\" placeholder=\"Enter Your Name\" \/>\r\n\t<\/div>\r\n\t<div class=\"form-group\">\r\n\t\t<label for = \"email\">Email<\/label>\r\n\t\t<input type=\"email\" name = \"email\" class = \"form-control input-email\" placeholder=\"Enter Your Email\" \/>\r\n\t<\/div>\t\r\n\t<div class=\"form-group\">\r\n\t\t<label for = \"message\">Message<\/label>\t\r\n\t\t<textarea name = \"message\" class = \"form-control input-message\" rows=\"4\" placeholder=\"Enter Your Message\"><\/textarea><br \/>\t\r\n\t<\/div>\r\n\t\r\n\t<button class = \"btn btn-primary submit\">Submit<\/button>\r\n\t\r\n<\/div>\r\n[\/cc]\r\n\r\nJust bellow the above code, add the javascript:\r\n[cc lang = \"javascript\"]\r\n<script type=\"text\/javascript\" >\r\nfunction cvf_form_validate(element) {\r\n\t$('html, body').animate({scrollTop: $(element).offset().top-100}, 150);\r\n\telement.effect(\"highlight\", { color: \"#F2DEDE\" }, 1500);\r\n\telement.parent().effect('shake');\r\n}\r\n\t\r\njQuery(document).ready(function($) {\r\n\r\n\t$('body').on('click', '.submit', function() {\r\n\t\t\r\n\t\tif($('.input-name').val() === '') {\r\n\t\t\tcvf_form_validate($('.input-name'));\r\n\t\t\t\r\n\t\t} else if($('.input-email').val() === '') {\t\t\t\t\r\n\t\t\tcvf_form_validate($('.input-email'));\r\n\t\t\t\r\n\t\t} else if($('.input-message').val() === '') {\t\t\t\t\r\n\t\t\tcvf_form_validate($('.input-message'));\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\tvar data = {\r\n\t\t\t\t'action': 'cvf_send_message',\r\n\t\t\t\t'name': $('.input-name').val(),\r\n\t\t\t\t'email': $('.input-email').val(), \r\n\t\t\t\t'message': $('.input-message').val() \r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tvar ajaxurl = '<?php echo admin_url('admin-ajax.php'); ?>';\r\n\t\t\t$.post(ajaxurl, data, function(response) {\r\n\t\t\t\tif(response === 'success'){\r\n\t\t\t\t\talert('Message Sent Successfully!');\r\n\t\t\t\t\t$('.input-name').val(''); $('.input-email').val(''); $('.input-message').val('');\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t} \r\n\t});\r\n});\r\n<\/script>\r\n[\/cc]\r\n\r\nIn our code above, we are simply sending the POST request to the admin-ajax.php file of WordPress. It parses your data by looking for the 'action' variable which in our case is: 'cvf_send_message'. The data is passed to the PHP function: 'wp_ajax_cvf_send_message'. So next step is we need to create the call back function that will handle the AJAX post request.\r\n\r\nIn your functions.php, add the following code:\r\n[cc lang = \"php\"]\r\n\/**\r\n * @ Author: Carl Victor Fontanos.\r\n * @ Class: CVF_Posts\r\n *\r\n *\/\r\n \r\nadd_action('wp_ajax_cvf_send_message', array('CVF_Posts', 'cvf_send_message') );\r\nadd_action('wp_ajax_nopriv_cvf_send_message', array('CVF_Posts', 'cvf_send_message') );\r\nadd_filter('wp_mail_content_type', array('CVF_Posts', 'cvf_mail_content_type') );\r\n\r\nclass CVF_Posts {\r\n\t\r\n\tpublic static function cvf_send_message() {\r\n\t\t\r\n\t\tif (isset($_POST['message'])) {\r\n\t\t\t\r\n\t\t\t$to = get_option('admin_email');\r\n\t\t\t$headers = 'From: ' . $_POST['name'] . ' <\"' . $_POST['email'] . '\">';\r\n\t\t\t$subject = \"carlofontanos.com | New Message from \" . $_POST['name'];\r\n\t\t\t\r\n\t\t\tob_start();\r\n\t\t\t\r\n\t\t\techo '\r\n\t\t\t\t<h2>Message:<\/h2>' . \r\n\t\t\t\twpautop($_POST['message']) . '\r\n\t\t\t\t<br \/>\r\n\t\t\t\t--\r\n\t\t\t\t<p><a href = \"' . home_url() . '\">www.carlofontanos.com<\/a><\/p>\r\n\t\t\t';\r\n\t\t\t\r\n\t\t\t$message = ob_get_contents();\r\n\t\t\t\r\n\t\t\tob_end_clean();\r\n\r\n\t\t\t$mail = wp_mail($to, $subject, $message, $headers);\r\n\t\t\t\r\n\t\t\tif($mail){\r\n\t\t\t\techo 'success';\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\texit();\r\n\t\t\r\n\t}\r\n\t\t\r\n\tpublic static function cvf_mail_content_type() {\r\n\t\treturn \"text\/html\";\r\n\t}\r\n}\r\n[\/cc]\r\n\r\nIn the above code we used ob_start(); , ob_get_contents(); and ob_end_clean(); to allow our email message to read HTML elements instead of printing them as is. \r\n\r\nAbout styling the email message: There is no way you can get your email message to read external styles, so what you can only  do is to use inline CSS. Ex: \r\n<code><td style = \"background: red; color: white; width: 50%\">Text<\/td><\/code>\r\n\r\nTo learn more about styling emails, I created a separate tutorial: <a href = \"http:\/\/carlofontanos.com\/generate-emails-with-html-and-css-in-wordpress\/\">Generate Emails with HTML & CSS in WordPress<\/a>\r\n\r\nThe tutorial code should work out of the box. If you encountered any problems, there is comment section bellow where you can post your issues or concerns. ","post_title":"Build Your Own Ajax Contact Form in WordPress","post_excerpt":"A very simple AJAX Contact Form for your WordPress blog.","post_status":"publish","comment_status":"open","ping_status":"open","post_password":"","post_name":"build-your-own-ajax-contact-form-in-wordpress","to_ping":"","pinged":"","post_modified":"2015-07-17 14:56:56","post_modified_gmt":"2015-07-17 14:56:56","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=1036","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":1288,"post_author":"1","post_date":"2016-03-28 13:21:23","post_date_gmt":"2016-03-28 05:21:23","post_content":"<p>There are many available extensions that can be coupled with CKEditor for managing files, but if you want to build your own from scaratch, then here are easy steps to help you get started:<\/p>\r\n\r\n<p>Create a file \"<strong>index.php<\/strong>\", in it, place the code bellow<\/p>\r\n\r\n[cc lang = \"html\"]\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n\t<title>CKEditor Example<\/title>\r\n\t<script src=\"\/\/cdn.ckeditor.com\/4.5.7\/full\/ckeditor.js\"><\/script>\r\n<\/head>\r\n<body>\r\n\t<div class=\"container\">\r\n\t\t<div class = \"col-md-12\">\r\n\t\t\t<br \/>\r\n\t\t\t<textarea name=\"termpage\">Please type your auction terms and conditions here !<\/textarea>\r\n\t\t\t<script>\r\n\t\t\t\tCKEDITOR.replace( 'termpage', {\r\n\t\t\t\t\ttoolbar: null,\r\n\t\t\t\t\ttoolbarGroups: null\r\n\t\t\t\t} );\r\n\t\t\t\tCKEDITOR.config.filebrowserBrowseUrl = 'browse.php';\r\n\t\t\t\tCKEDITOR.config.filebrowserUploadUrl = 'upload.php';\r\n\t\t\t<\/script>\r\n\t\t<\/div>\r\n\t<\/div>\r\n<\/body>\r\n<\/html>\r\n[\/cc]\r\n\r\nThe CKEditor CDN is updated from time to time so make sure to get the latest CKEditor from here: <a href=\"&gt;https:\/\/cdn.ckeditor.com\/\" target=\"_blank\">https:\/\/cdn.ckeditor.com\/<\/a>\r\n\r\n\r\n<p>Now we need to store the files to our server, bellow is a simple PHP code that handles posted files.<\/p>\r\n<p>Create a file \"<strong>upload.php<\/strong>\", in it, place the code bellow<\/p>\r\n[cc lang = \"php\"]\r\n$funcNum = $_GET['CKEditorFuncNum'];\r\n$url = '';\r\n\r\n\/\/ Make sure that the anonymous function reference number used to pass the URL of a file to CKEditor is set\r\nif( $funcNum ){\r\n\r\n\t\/\/ Check if there is an error\r\n\tif( ! $_FILES['upload']['error'] ) {\r\n\t\t\t\t\r\n\t\t\/\/ Replace file name spaces and convert to lower case.\r\n\t\t$file = pathinfo( $_FILES['upload']['name'] );\r\n\t\t$new_file_name = str_replace(' ', '_', strtolower( $file['filename'] ) ) . '-' . time() . '.' . $file['extension'];\r\n\t\r\n\t\t\/\/ Check if file was uploaded\r\n\t\tif( move_uploaded_file( $_FILES['upload']['tmp_name'], 'uploads\/' . $new_file_name )){\r\n\t\t\t\r\n\t\t\t$message = 'File successfully uploaded';\t\t\r\n\t\t\t\r\n\t\t\t\/\/ Check if we're running locally or live\r\n\t\t\tif( $_SERVER['SERVER_NAME'] == 'localhost' ) {\r\n\t\t\t\t$url = $_SERVER['HTTP_HOST'] . '\/ckeditor\/uploads\/' . $new_file_name;\r\n\t\t\t} else {\r\n\t\t\t\t$url = $_SERVER['HTTP_HOST'] . '\/uploads\/' . $new_file_name;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\t\t\t\r\n\t} else {\r\n\t\t\/\/ Output all errors\r\n\t\t$message = 'Oops!  Your upload triggered the following error:  ' . $_FILES['upload']['error'];\r\n\t}\r\n\t\r\n\t\/\/ Return the message to the CKEDITOR File Manager\r\n\techo \"<script type='text\/javascript'>window.parent.CKEDITOR.tools.callFunction($funcNum, '$url', '$message');<\/script>\";\r\n\r\n}\r\n[\/cc]\r\n\r\n<p>And here's where you put the codes of your custom file manager.<\/p>\r\n<p>Create a file \"<strong>browse.php<\/strong>\", in it, place the code bellow<\/p>\r\n[cc lang = \"javascript\"]\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <title>Example: Browsing Files<\/title>\r\n    <script>\r\n        \/\/ Helper function to get parameters from the query string.\r\n        function getUrlParam( paramName ) {\r\n            var reParam = new RegExp( '(?:[\\?&]|&)' + paramName + '=([^&]+)', 'i' );\r\n            var match = window.location.search.match( reParam );\r\n\r\n            return ( match && match.length > 1 ) ? match[1] : null;\r\n        }\r\n        \/\/ Simulate user action of selecting a file to be returned to CKEditor.\r\n        function returnFileUrl() {\r\n\r\n            var funcNum = getUrlParam( 'CKEditorFuncNum' );\r\n            var fileUrl = '\/path\/to\/file.txt';\r\n            window.opener.CKEDITOR.tools.callFunction( funcNum, fileUrl );\r\n            window.close();\r\n        }\r\n    <\/script>\r\n<\/head>\r\n<body>\r\n    <button onclick=\"returnFileUrl()\">Select File<\/button>\r\n<\/body>\r\n<\/html>\r\n[\/cc]\r\n\r\n<p>Note that the only functionality privded above is just the browse button and file selection handler, you will have to build your own file browser then receive the file in CKEditor on-click of the \"Select File\" button.<\/p>","post_title":"Build your own Custom File Manager for CKEditor using PHP","post_excerpt":"Upload files with CKEditor to a custom directory using a simple File Manager PHP Script.","post_status":"publish","comment_status":"open","ping_status":"open","post_password":"","post_name":"build-your-own-custom-file-manager-for-ckeditor-using-php","to_ping":"","pinged":"","post_modified":"2016-04-12 10:48:42","post_modified_gmt":"2016-04-12 02:48:42","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=1288","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":1100,"post_author":"1","post_date":"2015-02-22 13:41:29","post_date_gmt":"2015-02-22 13:41:29","post_content":"<a href=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2015\/02\/824b1c56-87f0-11e1-9712-8f15a4b24539.png\"><img src=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2015\/02\/824b1c56-87f0-11e1-9712-8f15a4b24539.png\" alt=\"824b1c56-87f0-11e1-9712-8f15a4b24539\" width=\"1052\" height=\"453\" class=\"alignnone size-full wp-image-1104\" \/><\/a>\r\n\r\n<a href = \"http:\/\/carlofontanos.com\/demo\/real-time-chat-application-using-pusher\" target = \"_blank\" class = \"btn btn-success\">Demo<\/a> <span id=\"page-has-downlodable-file\" file=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2015\/02\/real-time-chat-application-using-pusher.zip\"><\/span>\r\n\r\n<strong>WebSockets<\/strong> is an advanced technology that makes it possible to open an interactive communication session between the user's browser and a server. With this API, you can send messages to a server and receive event-driven responses without having to poll the server for a reply. In this tutorial we are going to create a simple chat application using Pusher. Pusher is a simple hosted API for quickly, easily and securely adding realtime bi-directional functionality via WebSockets to web and mobile apps, or any other Internet connected device.\r\n\r\n<h3>Browser Support<\/h3>\r\nOld browsers do not support WebSockets, you need latest browser that supports HTML5 WebSocket features, Please see <a href = \"http:\/\/caniuse.com\">caniuse.com<\/a> to find-out all WebSocket supported browsers.\r\n\r\n<h3>Scripts we need for our Chat Application:<\/h3>\r\n<ul>\r\n<li>jQuery<\/li>\r\n<li>Pusher<\/li>\r\n<li>Bootstrap JS and CSS (For the UI)<\/li>\r\n<li>Bootbox (For our alert box)<\/li>\r\n<li>Custom Styles<\/li>\r\n<\/ul>\r\n\r\n<h3>Create a Pusher Account<\/h3>\r\nStep 1. Create an account at <a href = \"http:\/\/pusher.com\" target = \"_blank\">www.pusher.com<\/a>\r\nStep 2. Login to your pusher account then create an App, name it anything you want.\r\nStep 3. After you have successfully created your app - the following will be generated: app_id, key, and secret. \r\nStep 4. Go over the codes in this tutorial and replace the following: 'your_app_id', 'your_app_key', 'your_app_secret' with your app_id, key, and secret.\r\nStep 5. Test the chat application in your server or local machine. Use 2 different browsers for the testing.\r\n<hr \/>\r\n\r\n<h3>The Tutorial<\/h3>\r\nInclude the following code in the header part of your file.\r\n[cc lang = \"javascript\"]\r\n\t\r\n<script src=\"\/\/ajax.googleapis.com\/ajax\/libs\/jquery\/1.11.2\/jquery.min.js\" type=\"text\/javascript\" ><\/script>\t\r\n<script src=\"\/\/js.pusher.com\/2.2\/pusher.min.js\" type=\"text\/javascript\" type=\"text\/javascript\" ><\/script>\t\r\n<script src=\"\/\/maxcdn.bootstrapcdn.com\/bootstrap\/3.3.1\/js\/bootstrap.min.js\" type=\"text\/javascript\" ><\/script>\t\r\n<script src=\"\/\/cdnjs.cloudflare.com\/ajax\/libs\/bootbox.js\/4.3.0\/bootbox.min.js\" type=\"text\/javascript\" ><\/script>\r\n\r\n<link rel=\"stylesheet\" type=\"text\/css\" href=\"http:\/\/maxcdn.bootstrapcdn.com\/bootstrap\/3.3.1\/css\/bootstrap.min.css\" \/>\r\n<style = \"text\/css\">\r\n<!--\t\t\r\n.messages_display {height: 300px; overflow: auto;}\t\t\r\n.messages_display .message_item {padding: 0; margin: 0; }\t\t\r\n.bg-danger {padding: 10px;}\t-->\t\r\n<\/style>\t\t\t\t\r\n[\/cc]\r\n\r\nCreate the chat form:\r\n[cc lang = \"html\"]\r\n<div class = \"container\">\t\t\r\n\t<div class = \"col-md-6 chat_box\">\t\t\t\t\t\t\r\n\t\t<div class = \"form-control messages_display\"><\/div>\t\t\t\r\n\t\t<br \/>\t\t\t\t\t\t\r\n\t\t<div class = \"form-group\">\t\t\t\t\r\n\t\t\t<label>Name<\/label>\t\t\t\t\r\n\t\t\t<input type = \"text\" class = \"input_name form-control\" placeholder = \"Name\" \/>\t\t\t\r\n\t\t<\/div>\t\t\t\t\t\t\r\n\t\t<div class = \"form-group\">\t\t\t\t\r\n\t\t\t<label>Message<\/label>\t\t\t\t\r\n\t\t\t<textarea class = \"input_message form-control\" placeholder = \"Message\"><\/textarea>\t\t\t\r\n\t\t<\/div>\t\t\t\t\t\t\r\n\t\t<div class = \"form-group input_send_holder\">\t\t\t\t\r\n\t\t\t<input type = \"submit\" value = \"Send\" class = \"btn btn-primary input_send\" \/>\t\t\t\r\n\t\t<\/div>\t\t\t\t\t\r\n\t<\/div>\t\r\n<\/div>\r\n[\/cc]\r\n\r\nClient Side script:\r\n[cc lang = \"javascript\"]\r\n<script type=\"text\/javascript\">\t\t\t\r\n\/\/ Enter your own Pusher App key\r\nvar pusher = new Pusher('your_app_key');\r\n\/\/ Enter a unique channel you wish your users to be subscribed in.\r\nvar channel = pusher.subscribe('test_channel');\r\nchannel.bind('my_event', function(data) {\r\n\t\/\/ Add the new message to the container\r\n\t$('.messages_display').append('<p class = \"message_item\">' + data.message + '<\/p>');\r\n\t\/\/ Display the send button\r\n\t$('.input_send_holder').html('<input type = \"submit\" value = \"Send\" class = \"btn btn-primary input_send\" \/>');\r\n\t\/\/ Scroll to the bottom of the container when a new message becomes available\r\n\t$(\".messages_display\").scrollTop($(\".messages_display\")[0].scrollHeight);\r\n});\r\n\r\n\/\/ AJAX request\r\nfunction ajaxCall(ajax_url, ajax_data) {\r\n\t$.ajax({\r\n\t\ttype: \"POST\",\r\n\t\turl: ajax_url,\r\n\t\tdataType: \"json\",\r\n\t\tdata: ajax_data,\r\n\t\tsuccess: function(response, textStatus, jqXHR) {\r\n\t\t\tconsole.log(jqXHR.responseText);\r\n\t\t},\r\n\t\terror: function(msg) {}\r\n\t});\r\n}\r\n\r\n\/\/ Trigger for the Enter key when clicked.\r\n$.fn.enterKey = function(fnc) {\r\n\treturn this.each(function() {\r\n\t\t$(this).keypress(function(ev) {\r\n\t\t\tvar keycode = (ev.keyCode ? ev.keyCode : ev.which);\r\n\t\t\tif (keycode == '13') {\r\n\t\t\t\tfnc.call(this, ev);\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n}\r\n\r\n\/\/ Send the Message\r\n$('body').on('click', '.chat_box .input_send', function(e) {\r\n\te.preventDefault();\r\n\t\r\n\tvar message = $('.chat_box .input_message').val();\r\n\tvar name = $('.chat_box .input_name').val();\r\n\t\r\n\t\/\/ Validate Name field\r\n\tif (name === '') {\r\n\t\tbootbox.alert('<br \/><p class = \"bg-danger\">Please enter a Name.<\/p>');\r\n\t\r\n\t} else if (message !== '') {\r\n\t\t\/\/ Define ajax data\r\n\t\tvar chat_message = {\r\n\t\t\tname: $('.chat_box .input_name').val(),\r\n\t\t\tmessage: '<strong>' + $('.chat_box .input_name').val() + '<\/strong>: ' + message\r\n\t\t}\r\n\t\t\/\/ Send the message to the server\r\n\t\tajaxCall('message_relay.php', chat_message);\r\n\t\t\r\n\t\t\/\/ Clear the message input field\r\n\t\t$('.chat_box .input_message').val('');\r\n\t\t\/\/ Show a loading image while sending\r\n\t\t$('.input_send_holder').html('<input type = \"submit\" value = \"Send\" class = \"btn btn-primary\" disabled \/> &nbsp;<img src = \"loading.gif\" \/>');\r\n\t}\r\n});\r\n\r\n\/\/ Send the message when enter key is clicked\r\n$('.chat_box .input_message').enterKey(function(e) {\r\n\te.preventDefault();\r\n\t$('.chat_box .input_send').click();\r\n});\r\n<\/script>\r\n[\/cc]\r\n\r\nServer Side Script (<strong>message_relay.php<\/strong>):\r\n[cc lang = \"php\"]\r\n<?php \r\nrequire('lib\/Pusher.php');\r\n\r\n\/\/ Change the following with your app details:\r\n\/\/ Create your own pusher account @ www.pusher.com\r\n$app_id = 'your_app_id'; \/\/ App ID\r\n$app_key = 'your_app_key'; \/\/ App Key\r\n$app_secret = 'your_app_secret'; \/\/ App Secret\r\n$pusher = new Pusher($app_key, $app_secret, $app_id);\r\n\r\n\/\/ Check the receive message\r\nif(isset($_POST['message']) && !empty($_POST['message'])) {\t\t\r\n\t$data['message'] = $_POST['message'];\t\r\n\t\r\n\t\/\/ Return the received message\r\n\tif($pusher->trigger('test_channel', 'my_event', $data)) {\t\t\t\t\r\n\t\techo 'success';\t\t\t\r\n\t} else {\t\t\r\n\t\techo 'error';\t\r\n\t}\r\n}\r\n[\/cc]","post_title":"Building a Real-Time Chat Application Using Pusher","post_excerpt":"A simple chat application that uses a self-hosted API called Pusher","post_status":"publish","comment_status":"open","ping_status":"open","post_password":"","post_name":"building-a-real-time-chat-application-using-pusher","to_ping":"","pinged":"","post_modified":"2017-09-18 18:23:44","post_modified_gmt":"2017-09-18 10:23:44","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=1100","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":950,"post_author":"1","post_date":"2014-11-26 02:12:23","post_date_gmt":"2014-11-26 02:12:23","post_content":"Recently, a client asked me to add a feature where users will be forced to change their passwords the first time they log-in into their account. The structure of the project website is a bit different because the client wants to be the one creating the accounts and give them to people. That was why the force change-password feature was needed. \r\n\r\nOf course the feature is easy to do using just plain PHP and HTML, but if you are like me who wants to take small bits of modules into the next level then you might probably want to check out this tutorial on how to create an ajaxified Change Password that runs on the Front-end. \r\n\r\n<strong>So why use AJAX on the client-side instead of PHP?<\/strong> - AJAX allows web pages to be updated asynchronously by exchanging small amounts of data with the server behind the scenes. This means that it is possible to update parts of a web page, without reloading the whole page. Classic web pages, (which do not use AJAX) reloads the entire page for the content to change, which, in my opinion, is slower. So that is why I prefer AJAX for client-side processing.\r\n\r\nSo let's start building the form where people will be inputting their new password.\r\n[cc lang = \"html\"]\r\n<!-- Change Password Form -->\r\n<article class=\"change-password-content\">\t\t\t\r\n\t<div class = \"change-password-messages\">\r\n\t\t<p>You must change your password before you can access any part of our website.<\/p>\r\n\t<\/div>\r\n\t<div class = \"change-password-form\">\r\n\t\t<label for=\"password\"><?php _e('New Password'); ?><\/label><br \/>\r\n\t\t<input type=\"password\" class=\"form-control password1\" \/>\r\n\t\t\r\n\t\t<label for=\"password2\"><?php _e('Re-enter New Password'); ?><\/label><br \/>\r\n\t\t<input type=\"password\" class=\"form-control password2\" \/>\r\n\t\t\r\n\t\t<input type=\"submit\" name=\"change-password\" value=\"<?php _e('Change Password'); ?>\" class=\"btn-change-pass\" \/> \t\r\n\t<\/div>\r\n<\/article>\r\n[\/cc]\r\n\r\nIf you notice, the above code is not really a form. This is basically because we are submitting the inputs using AJAX and values on fields will be pulled out using jQuery. Although there is an AJAX Form plugin that can be used in actual forms, but we are not really going to use that on this tutorial since I want to demonstrate how you can achieve an ajaxified change password form using best practices in WordPress.\r\n\r\nNow lets check out the script bellow which we will be using for client-side processing. (Explanations are on the codes)\r\n[cc lang = \"javascript\"]\r\n<script>\r\n$(document).ready(function() {\r\n\t\/\/ Define admin-ajax for front-end usage\r\n\tvar ajaxurl = '<?php echo admin_url('admin-ajax.php'); ?>';\r\n\t\r\n\t\/\/ Inlcude the jquery-ui.min.js to be able to use this form validation function\r\n\tfunction cvf_form_validate(element) {\r\n\t\telement.effect(\"highlight\", { color: \"#F2DEDE\" }, 1500);\r\n\t\telement.parent().effect('shake');\r\n\t}\r\n\t\r\n\t\/\/ Detect if button with a class \"btn-change-pass\" was clicked\r\n\t$('body').on('click', '.btn-change-pass', function(e) {\r\n\t\t\r\n\t\t\/\/ Validate empty fields or mismatched passwords\r\n\t\tif ($('.change-password-form .password1').val() === '') {\r\n\t\t\tcvf_form_validate($('.password1'));\r\n\t\t} else if ($('.change-password-form .password2').val() === '') {\r\n\t\t\tcvf_form_validate($('.password2'));\r\n\t\t} else if ($('.change-password-form .password2').val() !== $('.change-password-form .password1').val()) {\r\n\t\t\t$(\".change-password-messages\").html('<p class = \"bg-danger\"><span class = \"glyphicon glyphicon-remove-circle\"><\/span>&nbsp; Passwords do not match<\/p>');\r\n\t\t} else {\r\n\t\t\t\/\/ if everything is validated, we're ready to send an AJAX request\r\n\t\t\t\r\n\t\t\t\/\/ Defining your own loading gif image\r\n\t\t\t$(\".change-password-messages\").html('<p><img src = \"<?php bloginfo('template_url'); ?>\/images\/loading.gif\" class = \"loader\" \/><\/p>');\r\n\t\t\t\r\n\t\t\t\/\/ Define the ajax arguments\r\n\t\t\tvar data = {\r\n\t\t\t\t'action': 'cvf_ngp_change_password',\r\n\t\t\t\t'cvf_action': 'change_password',\r\n\t\t\t\t'new_password': $('.change-password-form .password2').val()\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\t$.post(ajaxurl, data, function(response) {\r\n\t\t\t\t\/\/ Detect the recieved AJAX response, then do the necessary logics you need for each specific response\r\n\t\t\t\tif(response === 'success') {\r\n\t\t\t\t\t$(\".change-password-messages\").html('<p class = \"bg-success\">Password Successfully Changed <br \/><a href = \"<?php echo home_url(); ?>\">Click here to continue<\/a><\/p>');\r\n\t\t\t\t\t$('.change-password-form').hide();\t\r\n\t\t\t\t} else if (response === 'error') {\r\n\t\t\t\t\t$(\".change-password-messages\").html('<p class = \"bg-danger\"><span class = \"glyphicon glyphicon-remove-circle\"><\/span>&nbsp; Error Changing Password<\/p>');\r\n\t\t\t\t\t$('.change-password-form').show();\t\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n});\r\n<\/script>\r\n[\/cc]\r\n\r\nBasically what the above code does is it validates the user inputs, all of this is happening on the client-side. If all the inputs are correct then we can start sending the value of either the first or second input field which contains the password. In my case, I am sending the value of the second input field and I retrieved it by simply using the .val() function as seen bellow:\r\n<code>$('.change-password-form .password2').val()<\/code>\r\n\r\nIf you notice, other parameters are also sent: \"action\" and \"cvf_action\". \"action\" is a required parameter which is used by the admin-ajax.php of WordPress to identify the PHP function that will handle the request, in my case I used the cvf_ngp_change_password() function.  while the \"cvf_action\" is just something I use to check if the post has been received on the server side.\r\n\r\nFinally, let's take a look at the server side processing script using PHP\r\n\r\n[cc lang = \"php\"]\r\nadd_action('wp_ajax_cvf_ngp_change_password', array('NGP_Users', 'cvf_ngp_change_password') );\r\nadd_action('wp_ajax_nopriv_cvf_ngp_change_password', array('NGP_Users', 'cvf_ngp_change_password') );\r\n\r\nfunction cvf_ngp_change_password() {\r\n\t\t\r\n\tglobal $current_user;\r\n\t\r\n\tif(isset($_POST['cvf_action']) && $_POST['cvf_action'] == 'change_password') {\r\n\t\t\r\n\t\t\/\/Sanitize received password\r\n\t\t$password = sanitize_text_field($_POST['new_password']);\r\n\t\t\r\n\t\t\/\/ Define arguments that will be passed to the wp_update_user()\r\n\t\t$userdata = array(\r\n\t\t\t'ID'\t\t=>\t$current_user->ID,\r\n\t\t\t'user_pass'\t=>\t$password \/\/ Wordpress automatically applies the wp_hash_password() function to the user_pass field.\r\n\t\t);\t\r\n\t\t$user_id = wp_update_user($userdata);\r\n\t\t\r\n\t\t\/\/ wp_update_user() will return the user_id on success and an array of error messages on failure.\r\n\t\t\/\/ so bellow we are going to check if the returned string is equal to the current user ID, if yes then we proceed updating the user meta field \r\n\t\tif($user_id == $current_user->ID){\r\n\t\t\tupdate_user_meta($current_user->ID, 'ngp_changepass_status', 1);\r\n\t\t\techo 'success';\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\techo 'error';\r\n\t\t}\t\r\n\t}\r\n\t\/\/ Always exit to avoid further execution\r\n\texit();\r\n}\r\n[\/cc]\r\n\r\nSo what we did on the above code is we simply received the password that was sent by our client script, then we sanitize the field to make sure that we are safe from any possible SQL injections. After that we proceeded to the  updating of the password using the function wp_update_user() which returns the ID of the user on success and an array of errors on failure. We then checked if the returned ID and the current user id are the same(or updated succesfully), if yes we update the user meta status to 1 which we can use later on to verify if the user has already changed their password or not. \r\n\r\nIf you want to force your users to change their password, include the code bellow before the get_header() function of your page template.\r\n\r\n[cc lang = \"php\"]\r\nglobal $current_user;\r\n\r\n$changepass_status = get_user_meta($current_user->ID, 'ngp_changepass_status', true);\r\n\r\nif (!is_super_admin() && $changepass_status != 1) {\r\n\twp_redirect(home_url('\/change-password\/')); \r\n\t\r\n} \r\n[\/cc]\r\n\r\nThe above code will check if the \"ngp_changepass_status\" meta key exists or not equal to 1 (0 or empty means the password hasn't been changed yet). If not existing or not equal to 1, we redirect them to our Change Password page.\r\n\r\n","post_title":"Change Password using AJAX and jQuery in WordPress Front-End","post_excerpt":"The feature is easy to do using just plain PHP and HTML, but if you are like me who wants to take small bits of modules into the next level then you might probably want to check out this tutorial on how to","post_status":"publish","comment_status":"open","ping_status":"closed","post_password":"","post_name":"change-password-using-ajax-and-jquery-in-wordpress-front-end","to_ping":"","pinged":"","post_modified":"2015-02-09 06:22:00","post_modified_gmt":"2015-02-09 06:22:00","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=950","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":1010,"post_author":"1","post_date":"2015-01-05 07:52:32","post_date_gmt":"2015-01-05 07:52:32","post_content":"<a href=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2015\/01\/Character-Count-with-Progress-Bar-using-jQuery.jpg\"><img class=\"alignnone size-full wp-image-1011\" src=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2015\/01\/Character-Count-with-Progress-Bar-using-jQuery.jpg\" alt=\"Character Count with Progress Bar using jQuery\" width=\"716\" height=\"284\" \/><\/a>\r\n\r\n<a href = \"http:\/\/carlofontanos.com\/demo\/character-count-with-live-progress-bar-using-jquery.html\" class = \"btn btn-success\" target = \"_blank\">Demo<\/a> <a href=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2015\/01\/character-count-with-live-progress-bar-using-jquery.rar\" class = \"btn btn-primary\">Download<\/a>\r\n\r\nJavascript\r\n[cc lang = \"javascript\"]\r\njQuery(document).ready(function() {\r\n\t\r\n\t$('textarea').keyup(function() {\r\n\t\tvar box = $(this).val();\r\n\t\tvar main = box.length * 100;\r\n\t\tvar value = (main \/ 100);\r\n\t\tvar count = 0 + box.length;\r\n\t\tvar reverse_count = 100 - box.length;\r\n\t\t\r\n\t\tif(box.length >= 0){\r\n\t\t\t$('.progress-bar').css('width', count + '%');\r\n\t\t\t$('.current-value').text(count + '%');\r\n\t\t\t$('.count').text(reverse_count);\r\n\t\t\t\r\n\t\t\tif (count >= 50 && count < 85){\r\n\t\t\t\t$('.progress-bar').removeClass('progress-bar-danger').addClass('progress-bar-warning');\r\n\t\t\t}\r\n\t\t\tif (count > 85){\r\n\t\t\t\t$('.progress-bar').removeClass('progress-bar-warning').addClass('progress-bar-danger');\r\n\t\t\t}\r\n\t\t\tif(count >= 0 && count < 50){\r\n\t\t\t\t$('.progress-bar').removeClass('progress-bar-danger');\r\n\t\t\t\t$('.progress-bar').removeClass('progress-bar-warning');\t\t\t\r\n\t\t\t\t$('.progress-bar').addClass('progress-bar-success')\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\treturn false;\r\n\t});\r\n});\r\n[\/cc]\r\n\r\nHTML\r\n[cc lang = \"html\"]\r\n<div class = \"col-md-6\">\t\t\r\n\t<div class=\"progress\">\r\n\t\t<div class=\"progress-bar progress-bar-striped active\" role=\"progressbar\" aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\" style=\"width: 0%;\">\r\n\t\t\t<span class = \"current-value\">0%<\/span>\r\n\t\t<\/div>\r\n\t<\/div>\r\n\t<div class = \"form-group\">\r\n\t\t<textarea class = \"form-control\" rows = \"7\" maxlength = \"100\" placeholder = \"Enter a text\"><\/textarea>\r\n\t<\/div>\r\n\t<div class = \"count btn btn-primary\">100<\/div>\r\n<\/div>\r\n\r\n[\/cc]","post_title":"Character Count with Live Progress Bar using jQuery","post_excerpt":"Count remaining characters from an input field or textarea and displays a progress bar.","post_status":"publish","comment_status":"open","ping_status":"closed","post_password":"","post_name":"character-count-with-live-progress-bar-using-jquery","to_ping":"","pinged":"","post_modified":"2015-02-26 15:51:24","post_modified_gmt":"2015-02-26 15:51:24","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=1010","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":1190,"post_author":"1","post_date":"2015-10-09 09:05:11","post_date_gmt":"2015-10-09 09:05:11","post_content":"This code is useful when you are making a lot of changes to your styles and js scripts and you want your visitors \/ users to see the updated version page and not the old cached version.\r\n\r\n<h3>The Process<\/h3>\r\n<ol>\r\n\t<li>Create a cookie variable where we will be storing the current time when user visits the website<\/li>\r\n\t<li>Subtract current time to old time then get the result in days<\/li>\r\n\t<li>Check if the result is greater or equal to the provided nth day(s) <em><strong>$no_of_days<\/strong><\/em><\/li>\r\n\t<li>If greater, execute our AJAX cache cleaner script with the help of <strong> <em>location.reload(true)<\/em><\/strong> then set the cookie variable to the current time. Setting the parameter to <strong><em>true<\/em><\/strong> will prevent the browser from fetching the cached version of the page.<\/li>\r\n<\/ol>\r\n\r\n[cc lang = \"php\"]\r\n$ajax_cache_cleaner = '\r\n<script type = \"text\/javascript\">\r\n $.ajax({\r\n\turl: window.location.href,\r\n\theaders: {\r\n\t\t\"Pragma\": \"no-cache\",\r\n\t\t\"Expires\": -1,\r\n\t\t\"Cache-Control\": \"no-cache\"\r\n\t}\r\n}).done(function () {\r\n\twindow.location.reload(true);\r\n});\r\n<\/script>';\t\r\n\r\nif( isset( $_COOKIE['clear_browser_cache'] ) ) {\r\n\t$old_time = $_COOKIE['clear_browser_cache'];\r\n\t$current_time = time();\r\n\t$secs = $current_time - $old_time; \/\/ seconds between the two times\r\n\t$days = $secs \/ 86400;\r\n\tif( $days >= $no_of_days ) {\r\n\t\tsetcookie('clear_browser_cache', time(), time() + 86400); \/\/ 86400 = 1 day\r\n\t\techo $ajax_cache_cleaner;\r\n\t\t\t\r\n\t}\r\n} else {\r\n\tsetcookie('clear_browser_cache', time(), time() + ( $no_of_days * 86400 ) ); \/\/ 86400 = 1 day\r\n\techo $ajax_cache_cleaner;\r\n}\r\n\r\n[\/cc]\r\n\r\n<h3>Function:<\/h3>\r\n\r\n[cc lang = \"php\"]\r\n\/*\r\n * Clears the browser cache everyday nth days.\r\n *\/\r\nfunction clear_browser_cache( $no_of_days ) {\r\n\t\r\n\t$ajax_cache_cleaner = '\r\n\t<script type = \"text\/javascript\">\r\n\t $.ajax({\r\n\t\turl: window.location.href,\r\n\t\theaders: {\r\n\t\t\t\"Pragma\": \"no-cache\",\r\n\t\t\t\"Expires\": -1,\r\n\t\t\t\"Cache-Control\": \"no-cache\"\r\n\t\t}\r\n\t}).done(function () {\r\n\t\twindow.location.reload(true);\r\n\t});\r\n\t<\/script>';\t\r\n\t\r\n\tif( isset( $_COOKIE['clear_browser_cache'] ) ) {\r\n\t\t$old_time = $_COOKIE['clear_browser_cache'];\r\n\t\t$current_time = time();\r\n\t\t$secs = $current_time - $old_time; \/\/ seconds between the two times\r\n\t\t$days = $secs \/ 86400;\r\n\t\tif( $days >= $no_of_days ) {\r\n\t\t\tsetcookie('clear_browser_cache', time(), time() + 86400); \/\/ 86400 = 1 day\r\n\t\t\techo $ajax_cache_cleaner;\r\n\t\t\t\t\r\n\t\t}\r\n\t} else {\r\n\t\tsetcookie('clear_browser_cache', time(), time() + ( $no_of_days * 86400 ) ); \/\/ 86400 = 1 day\r\n\t\techo $ajax_cache_cleaner;\r\n\t}\r\n\t\r\n}\r\n[\/cc]\r\n\r\nParameter equals the number of days before executing the cache cleaner script.\r\n\r\n<strong>Note:<\/strong>\r\n<ul>\r\n\t<li>Make sure jQuery is loaded first before using the above function. <\/li>\r\n\t<li>Run the function on the Head part of your HTML document.<\/li>\r\n\r\n<\/ul>\r\n\r\n","post_title":"Clear Browser Cache Every Nth Day(s) in PHP","post_excerpt":"A simple PHP Script that allows you to clear you cache every nth day(s)","post_status":"publish","comment_status":"open","ping_status":"open","post_password":"","post_name":"clear-browser-cache-every-nth-days-in-php","to_ping":"","pinged":"","post_modified":"2015-10-21 06:11:00","post_modified_gmt":"2015-10-21 06:11:00","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=1190","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":1260,"post_author":"1","post_date":"2016-03-01 11:17:40","post_date_gmt":"2016-03-01 03:17:40","post_content":"Most large websites nowadays do a lot of updates\u00a0to their JS and CSS files to give their customers a better browsing experience. The problem that most Web Developers face is\u00a0the new codes are not pushed to\u00a0the users, instead they are served the old cached version of the file.\r\n\r\nMost of the answers when you Google this up is to simply add\u00a0a time stamp to the end of your file URL. Sure!\u00a0that\u00a0works but your user's browser will always\u00a0have to re-download the file every time they load a new page in your website - this is not very efficient especially when you are working on large scaled websites. So what if we just change the time stamp ONLY when the file was modified?\r\n\r\nHere is how you can do it:\r\n\r\n[cc lang=\"php\"]\r\nfunction check_if_modified( $file_location ) {\r\n\tif( file_exists( $file_location ) ) {\r\n\t\treturn filemtime( $file_location );\r\n\t} else {\r\n\t\treturn false;\r\n\t}\r\n}\r\n[\/cc]\r\n\r\nThe function above simply returns the time the file was last modified, this would mean that if the file was never modofied - the time stamp will never change.\r\n\r\n<h3>Usage<\/h3>\r\n\r\n[cc lang = \"html\"]\r\n<!DOCTYPE html>\r\n<html>\r\n\t<head>\r\n\t\t<script src=\"app.js?<?php echo check_if_modified('\/app.js'); ?>\"><\/script>\r\n\t<\/head>\r\n\t<body>\r\n\t\t<h1>Carl Fontanos<\/h1>\r\n\t\t<p>Test!<\/p>\r\n\t<\/body>\r\n<\/html>\r\n[\/cc]\r\n\r\n<strong>NOTE:<\/strong> If you are running on a framework or platform like WordPress, the parameter must be the PATH to your file, as the functions that checks the existence and modification time of the file requires a valid path.\r\n\r\n[cc lang = \"html\"]\r\n<script src=\"app.js?<?php echo check_if_modified( PATH_TO_FILE . '\/app.js'); ?>\"><\/script>\r\n[\/cc]","post_title":"Clear Cache of Modified Files using PHP","post_excerpt":"Clear the cache of modified files only using PHP","post_status":"publish","comment_status":"open","ping_status":"open","post_password":"","post_name":"clear-cache-of-modified-files-only-using-php","to_ping":"","pinged":"","post_modified":"2016-03-04 09:39:12","post_modified_gmt":"2016-03-04 01:39:12","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=1260","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":806,"post_author":"1","post_date":"2014-10-08 02:25:57","post_date_gmt":"2014-10-08 02:25:57","post_content":"<h3>Country List<\/h3><br \/>\r\n[cc lang = \"php\"]\r\n<p>Country:<br \/>\r\n[select menu-773 \"Afghanistan\" \"Albania\" \"Algeria\" \"Andorra\" \"Angola\" \"Antigua & Barbuda\" \"Argentina\" \"Armenia\" \"Australia\" \"Austria\" \"Azerbaijan\" \"Bahamas\" \"Bahrain\" \"Bangladesh\" \"Barbados\" \"Belarus\" \"Belgium\" \"Belize\" \"Benin\" \"Bhutan\" \"Bolivia\" \"Bosnia & Herzegovina\" \"Botswana\" \"Brazil\" \"Brunei\" \"Bulgaria\" \"Burkina Faso\" \"Burundi\" \"Cambodia\" \"Cameroon\" \"Canada\" \"Cape Verde\" \"Central African Republic\" \"Chad\" \"Chile\" \"China\" \"Colombia\" \"Comoros\" \"Congo\" \"Congo Democratic Republic\" \"Costa Rica\" \"Cote d'Ivoire\" \"Croatia\" \"Cuba\" \"Cyprus\" \"Czech Republic\" \"Denmark\" \"Djibouti\" \"Dominica\" \"Dominican Republic\" \"Ecuador\" \"East Timor\" \"Egypt\" \"El Salvador\" \"Equatorial Guinea\" \"Eritrea\" \"Estonia\" \"Ethiopia\" \"Fiji\" \"Finland\" \"France\" \"Gabon\" \"Gambia\" \"Georgia\" \"Germany\" \"Ghana\" \"Greece\" \"Grenada\" \"Guatemala\" \"Guinea\" \"Guinea-Bissau\" \"Guyana\" \"Haiti\" \"Honduras\" \"Hungary\" \"Iceland\" \"India\" \"Indonesia\" \"Iran\" \"Iraq\" \"Ireland\" \"Israel\" \"Italy\" \"Jamaica\" \"Japan\" \"Jordan\" \"Kazakhstan\" \"Kenya\" \"Kiribati\" \"Korea North\" \"Korea South\" \"Kosovo\" \"Kuwait\" \"Kyrgyzstan\" \"Laos\" \"Latvia\" \"Lebanon\" \"Lesotho\" \"Liberia\" \"Libya\" \"Liechtenstein\" \"Lithuania\" \"Luxembourg\" \"Macedonia\" \"Madagascar\" \"Malawi\" \"Malaysia\" \"Maldives\" \"Mali\" \"Malta\" \"Marshall Islands\" \"Mauritania\" \"Mauritius\" \"Mexico\" \"Micronesia\" \"Moldova\" \"Monaco\" \"Mongolia\" \"Montenegro\" \"Morocco\" \"Mozambique\" \"Myanmar (Burma)\" \"Namibia\" \"Nauru\" \"Nepal\" \"The Netherlands\" \"New Zealand\" \"Nicaragua\" \"Niger\" \"Nigeria\" \"Norway\" \"Oman\" \"Pakistan\" \"Palau\" \"Palestinian State*\" \"Panama\" \"Papua New Guinea\" \"Paraguay\" \"Peru\" \"The Philippines\" \"Poland\" \"Portugal\" \"Qatar\" \"Romania\" \"Russia\" \"Rwanda\" \"St. Kitts & Nevis\" \"St. Lucia\" \"St. Vincent & The Grenadines\" \"Samoa\" \"San Marino\" \"Sao Tome & Principe\" \"Saudi Arabia\" \"Senegal\" \"Serbia\" \"Seychelles\" \"Sierra Leone\" \"Singapore\" \"Slovakia\" \"Slovenia\" \"Solomon Islands\" \"Somalia\" \"South Africa\" \"South Sudan\" \"Spain\" \"Sri Lanka\" \"Sudan\" \"Suriname\" \"Swaziland\" \"Sweden\" \"Switzerland\" \"Syria\" \"Taiwan\" \"Tajikistan\" \"Tanzania\" \"Thailand\" \"Togo\" \"Tonga\" \"Trinidad & Tobago\" \"Tunisia\" \"Turkey\" \"Turkmenistan\" \"Tuvalu\" \"Uganda\" \"Ukraine\" \"United Arab Emirates\" \"United Kingdom\" \"United States of America\" \"Uruguay\" \"Uzbekistan\" \"Vanuatu\" \"Vatican City (Holy See)\" \"Venezuela\" \"Vietnam\" \"Yemen\" \"Zambia\" \"Zimbabwe\"]<\/p>\r\n[\/cc]\r\n\r\n\r\n<h3>Country Code List<\/h3><br \/>\r\n[cc lang = \"php\"]\r\n<p>Country Code:<br \/>\r\n[select menu-774 \"AL\" \"AK\" \"AS\" \"AZ\" \"AR\" \"CA\" \"CO\" \"CT\" \"DE\" \"DC\" \"FM\" \"FL\" \"GA\" \"GU\" \"HI\" \"ID\" \"IL\" \"IN\" \"IA\" \"KS\" \"KY\" \"LA\" \"ME\" \"MH\" \"MD\" \"MA\" \"MI\" \"MN\" \"MS\" \"MO\" \"MT\" \"NE\" \"NV\" \"NH\" \"NJ\" \"NM\" \"NY\" \"NC\" \"ND\" \"MP\" \"OH\" \"OK\" \"OR\" \"PW\" \"PA\" \"PR\" \"RI\" \"SC\" \"SD\" \"TN\" \"TX\" \"UT\" \"VT\" \"VI\" \"VA\" \"WA\" \"WV\" \"WI\" \"WY\"]<\/p>\r\n[\/cc]\r\n\r\n<h3>For full names for states and territories within the United States<\/h3><br \/>\r\n[cc lang = \"php\"]\r\n<p>State:<br \/>\r\n[select menu-946 \"Alabama\" \"Alaska\" \"American Samoa\" \"Arizona\" \"Arkansas\" \"California\" \"Colorado\" \"Connecticut\" \"Delaware\" \"District of Columbia\" \"Florida\" \"Georgia\" \"Guam\" \"Hawaii\" \"Idaho\" \"Illinois\" \"Indiana\" \"Iowa\" \"Kansas\" \"Kentucky\" \"Louisiana\" \"Maine\" \"Maryland\" \"Massachusetts\" \"Michigan\" \"Minnesota\" \"Mississippi\" \"Missouri\" \"Montana\" \"Nebraska\" \"Nevada\" \"New Hampshire\" \"New Jersey\" \"New Mexico\" \"New York\" \"North Carolina\" \"North Dakota\" \"Northern Marianas Islands\" \"Ohio\" \"Oklahoma\" \"Oregon\" \"Pennsylvania\" \"Puerto Rico\" \"Rhode Island\" \"South Carolina\" \"South Dakota\" \"Tennessee\" \"Texas\" \"Utah\" \"Vermont\" \"Virginia\" \"Virgin Islands\" \"Washington\" \"West Virginia\" \"Wisconsin\" \"Wyoming\"]<\/p>\r\n[\/cc]","post_title":"Contact Form 7 Country and State Drop-Down List","post_excerpt":"Implement Country Names, Country Codes and States & territories within the United States to your Contact Form 7","post_status":"publish","comment_status":"open","ping_status":"closed","post_password":"","post_name":"contact-form-7-country-and-state-drop-down-list","to_ping":"","pinged":"","post_modified":"2015-02-09 06:37:06","post_modified_gmt":"2015-02-09 06:37:06","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=806","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":817,"post_author":"1","post_date":"2014-10-08 09:32:31","post_date_gmt":"2014-10-08 09:32:31","post_content":"The CSS code bellow will give you a nice and simple appearance to your Contact 7 Forms\r\n\r\n[cc lang = \"css\"]\r\n.wpcf7-form p {line-height: 30px;}\r\n.wpcf7-form p input[type=\"text\"], .wpcf7-form p input[type=\"email\"], .wpcf7-form p textarea, .wpcf7-form p select{padding: 5px; border: 1px solid #DDDDDD;\r\n\/*Applying CSS3 gradient: *\/ background: -moz-linear-gradient(center top , #FFFFFF,  #EEEEEE 1px, #FFFFFF 20px); background: -webkit-gradient(linear, left top, left 20, from(#FFFFFF), color-stop(5%, #EEEEEE) to(#FFFFFF)); filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#FBFBFB', endColorstr='#FFFFFF');  \r\n\/*Applying CSS 3radius: *\/  -moz-border-radius: 3px; -webkit-border-radius: 3px; border-radius: 3px; \r\n\/*Applying CSS3 box shadow: *\/ -moz-box-shadow: 0 0 2px #DDDDDD; -webkit-box-shadow: 0 0 2px #DDDDDD; box-shadow: 0 0 2px #DDDDDD; width: 70%;}\r\n.wpcf7-form p select{width: 72%;}\r\n.wpcf7-form p input[type=\"text\"]:hover, .wpcf7-form p input[type=\"email\"]:hover, .wpcf7-form p textarea:hover, .wpcf7-form p select:hover{border:1px solid #cccccc;}\r\n.wpcf7-form p input[type=\"text\"]:focus, .wpcf7-form p input[type=\"email\"]:focus, .wpcf7-form p textarea:focus, .wpcf7-form p select:focus{box-shadow:0 0 2px #FFFE00;}\r\n[\/cc]\r\n","post_title":"Contact Form 7 Normalize Form CSS","post_excerpt":"Normalized CSS for your Contact Form 7 forms.","post_status":"publish","comment_status":"open","ping_status":"closed","post_password":"","post_name":"contact-form-7-normalize-form-css","to_ping":"","pinged":"","post_modified":"2015-02-09 06:35:37","post_modified_gmt":"2015-02-09 06:35:37","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=817","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":641,"post_author":"1","post_date":"2014-09-02 01:51:51","post_date_gmt":"2014-09-02 01:51:51","post_content":"Use this function to convert stdClass Objects into Arrays:\r\n\r\n[cc lang = \"php\"]\r\nfunction cvf_convert_object_to_array($data) {\r\n\r\n\tif (is_object($data)) {\r\n\t\t$data = get_object_vars($data);\r\n\t}\r\n\r\n\tif (is_array($data)) {\r\n\t\treturn array_map(__FUNCTION__, $data);\r\n\t}\r\n\telse {\r\n\t\treturn $data;\r\n\t}\r\n}\r\n[\/cc]\r\n\r\nTest Results:\r\n\r\n<strong>stdClass Object: <\/strong>\r\n[cc lang = \"php\"]\r\nstdClass Object\r\n(\r\n    [foo] => Test data\r\n    [bar] => stdClass Object\r\n        (\r\n            [baaz] => Testing\r\n            [fooz] => stdClass Object\r\n                (\r\n                    [baz] => Testing again\r\n                )\r\n\r\n        )\r\n\r\n    [foox] => Just test\r\n)\r\n[\/cc]\r\n\r\n<strong>Converted to Array: <\/strong>\r\n[cc lang = \"php\"]\r\nArray\r\n(\r\n    [foo] => Test data\r\n    [bar] => Array\r\n        (\r\n            [baaz] => Testing\r\n            [fooz] => Array\r\n                (\r\n                    [baz] => Testing again\r\n                )\r\n\r\n        )\r\n\r\n    [foox] => Just test\r\n)\r\n[\/cc]","post_title":"Convert stdClass Object to Array in PHP","post_excerpt":"Use this function to convert stdClass Objects into an Array","post_status":"publish","comment_status":"open","ping_status":"closed","post_password":"","post_name":"convert-stdclass-object-to-array-in-php","to_ping":"","pinged":"","post_modified":"2015-02-09 06:56:47","post_modified_gmt":"2015-02-09 06:56:47","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=641","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":191,"post_author":"1","post_date":"2014-04-28 10:57:22","post_date_gmt":"2014-04-28 10:57:22","post_content":"Suppose you want your website to have a section for Game Articles. By using Custom Post Types you can create a new type of item like Posts and Pages, which will contain a different set of data. It will have an administration menu and a dedicated editing page for your blog posts.\r\n\r\n<img class=\"alignnone size-full wp-image-344\" src=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2014\/04\/custom-post-type.jpg\" alt=\"custom-post-type\" width=\"778\" height=\"429\" \/>\r\n\r\nCustom Post Types help us to keep different types of posts in different buckets. It separates our regular posts from others. Simple enough!\r\n\r\nBellow is a list of Default Post Types in Wordpress.\r\n\r\nPost (Post Type: 'post')\r\nPage (Post Type: 'page')\r\nAttachment (Post Type: 'attachment')\r\nRevision (Post Type: 'revision')\r\nNavigation menu (Post Type: 'nav_menu_item')\r\n\r\nA custom post type can be added to WordPress via the register_post_type() function. This function allows you to define a new post type by its labels, supported features, availability and other specifics. Do pay close attention to not having your custom post type identifier exceed 20 characters, as the post_type column in the database is currently a VARCHAR field of that length.\r\n\r\nSo let's register a new post type:\r\n\r\n[cc lang = \"php\"]\r\nregister_post_type('articles', $articles_args);\r\n[\/cc]\r\n\r\nThe register_post_type function does most of the work for us. As soon as it is called it prepares the WordPress environment for a new custom post type including the different sections in the admin. This function takes two arguments: the first one is an unique name of the custom post type (for this tutorial, we called it \"articles\") and the second one an array demonstrating the properties of the new custom post type. \r\n\r\nNow let's define the properties of our post type:\r\n\r\n[cc lang = \"php\"]\r\n$articles_args = array( \r\n\t'labels' \t\t\t\t=> array(\r\n\t\t\/\/ These are all the labels of our custom post type, you do not have to worry about how you going to layout or create each menu because WordPress already does that for us.\r\n\t\t'name' \t\t\t\t\t=> _x('Game Articles', 'post type general name'),\r\n\t\t'singular_name' \t\t=> _x('Game Articles', 'post type singular name'),\r\n\t\t'all_items' \t\t\t=> _x('My Game Articles', 'post type name'),\r\n\t\t'add_new' \t\t\t\t=> _x('Add New', 'articles'),\r\n\t\t'add_new_item' \t\t\t=> __(\"Add New Article\"),\r\n\t\t'edit_item' \t\t\t=> __(\"Edit Article\"),\r\n\t\t'new_item' \t\t\t\t=> __(\"New Article\"),\r\n\t\t'view_item' \t\t\t=> __(\"View Article\"),\r\n\t\t'search_items' \t\t\t=> __(\"Search Article\"),\r\n\t\t'not_found' \t\t\t=> __('No articles found'),\r\n\t\t'not_found_in_trash'\t=> __('No articles found in Trash'),\r\n\t\t'parent_item_colon' \t=> ''       \r\n\t),\r\n    'public' \t\t\t\t=> true,\r\n    'publicly_queryable' \t=> true,\r\n    'show_ui' \t\t\t\t=> true,\r\n    'query_var' \t\t\t=> true,\r\n    'rewrite' \t\t\t\t=> true,\r\n    'hierarchical' \t\t\t=> false,\r\n    'menu_position' \t\t=> null,\r\n    'capability_type' \t\t=> 'post',\r\n\t\/\/Define the list of meta boxes that our post type is going to support.\r\n    'supports' \t\t\t\t=> array('title', 'excerpt', 'editor', 'thumbnail', 'comments'),\r\n    'menu_icon' \t\t\t=> get_bloginfo('template_directory') . '\/images\/custom-post-icon.png', \/\/16x16 png if you want an icon\r\n\t'map_meta_cap' => true,\r\n\t\r\n\t\/* \r\n\tSet which capabilities will be associated to our new custom post type. \r\n\tBy default, seven keys are accepted as part of the capabilities array:\r\n\t\t- read - Controls whether objects of this post type can be read.\r\n\t\t- delete_posts - Controls whether objects of this post type can be deleted.\r\n\t\t- delete_private_posts - Controls whether private objects can be deleted.\r\n\t\t- delete_published_posts - Controls whether published objects can be deleted.\r\n\t\t- delete_others_posts - Controls whether objects owned by other users can be can be deleted. If the post type does not support an author, then this will behave like delete_posts.\r\n\t\t- edit_private_posts - Controls whether private objects can be edited.\r\n\t\t- edit_published_posts - Controls whether published objects can be edited.\r\n\t\r\n\tI have already defined bellow all the capabilities that we will be needing for our custom post type. Please do note the use of singular and plural (article, articles).\r\n\t*\/\r\n\t'capabilities' => array(\r\n\t\t'edit_post' \t\t\t\t=> 'edit_article',\r\n\t\t'read_post'\t\t\t\t\t=> 'read_article',\r\n\t\t'delete_post'\t\t\t\t=> 'delete_articles',\r\n\t\t'edit_posts' \t\t\t\t=> 'edit_articles',\r\n\t\t'edit_others_posts'\t\t\t=> 'edit_others_articles',\r\n\t\t'publish_posts' \t\t\t=> 'publish_articles',\r\n\t\t'read_private_posts'  \t\t=> 'read_private_articles',\r\n\t\t'delete_posts'        \t\t=> 'delete_articles',\r\n\t\t'delete_private_posts'  \t=> 'delete_private_articles',\r\n\t\t'delete_published_posts' \t=> 'delete_published_articles',\r\n\t\t'delete_others_posts'     \t=> 'delete_others_articles',\r\n\t\t'edit_private_posts'  \t\t=> 'edit_private_articles',\r\n\t\t'edit_published_post' \t\t=> 'edit_published_article'\r\n\t),\r\n\t'capability_type' => array('article', 'articles')\r\n);\r\n[\/cc]\r\n\r\nAdd your custom admin columns (Optional):\r\n\r\n[cc lang = \"php\"]\r\nfunction mmo_add_new_articles_columns( $columns ){\r\n    $columns = array(\r\n        'cb'               \t=>        '<input type=\"checkbox\">',\r\n        'title'             =>        'Game Article Title',\r\n        'author'            =>        'Author',\r\n        'date'              =>        'Date'\r\n    );\r\n    return $columns;\r\n}\r\nadd_filter('manage_edit-articles_columns', 'mmo_add_new_articles_columns');\r\n[\/cc]\r\n","post_title":"Create a Custom Post Type in Wordpress","post_excerpt":"Register a post type and allow other roles to add, edit, and delete their owns posts.","post_status":"publish","comment_status":"open","ping_status":"open","post_password":"","post_name":"create-a-custom-post-type-in-wordpress","to_ping":"","pinged":"","post_modified":"2015-02-09 07:32:24","post_modified_gmt":"2015-02-09 07:32:24","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=191","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":1787,"post_author":"1","post_date":"2017-02-17 13:41:01","post_date_gmt":"2017-02-17 05:41:01","post_content":"CSS3 is just awesome, the development is fast and the possibilities are endless. Today I want to show you how you can make an awesome Facebook-like preloader animation using just HTML, CSS and Boostrap grids. This tutorial is so much easier to implement as compared to how other developers code it, plus you get to leverage bootstrap grids, so you no longer have to worry about the responsiveness of your preloader.\r\n\r\n<a class=\"btn btn-success\" href=\"http:\/\/carlofontanos.com\/demo\/facebook-preloader-style\/\" target=\"_blank\">Demo<\/a> <span id=\"page-has-downlodable-file\" file=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2017\/09\/facebook-preloader-style-master.zip\"><\/span>\r\n\r\n<img src=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2017\/02\/facebook-style-preloader.jpg\" alt=\"\" width=\"100%\" \/>\r\n\r\n&nbsp;\r\nThe image above can be coded as simple as this:\r\n\r\n[cc lang=\"html\"]\r\n<div class=\"container\">\r\n\t<div class=\"col-sm-3\">\r\n\t\t<div class=\"panel panel-default\">\r\n\t\t\t<div class=\"panel-heading clearfix\">\r\n\t\t\t\t<div class=\"col-xs-10\">\r\n\t\t\t\t\t<div class=\"animate-bg\"><\/div>\r\n\t\t\t\t<\/div>\r\n\t\t\t<\/div>\r\n\t\t\t<div class=\"panel-body\">\r\n\t\t\t\t<div class=\"col-sm-5\">\r\n\t\t\t\t\t<p class=\"animate-bg\"><br><br><br><\/p>\r\n\t\t\t\t<\/div>\r\n\t\t\t\t<div class=\"col-sm-7\">\r\n\t\t\t\t\t<p class=\"animate-bg\"><\/p>\r\n\t\t\t\t\t<p class=\"animate-bg col-sm-11\"><\/p>\r\n\t\t\t\t\t<p class=\"animate-bg\"><\/p>\r\n\t\t\t\t<\/div>\r\n\t\t\t<\/div>\r\n\t\t<\/div>\r\n\t\t\r\n\t\t<div class=\"panel panel-default\">\r\n\t\t\t<div class=\"panel-heading clearfix\">\r\n\t\t\t\t<div class=\"col-xs-10\">\r\n\t\t\t\t\t<div class=\"animate-bg\"><\/div>\r\n\t\t\t\t<\/div>\r\n\t\t\t<\/div>\r\n\t\t\t<div class=\"panel-body\">\r\n\t\t\t\t<div class=\"col-sm-5\">\r\n\t\t\t\t\t<p class=\"animate-bg\"><br><br><br><\/p>\r\n\t\t\t\t<\/div>\r\n\t\t\t\t<div class=\"col-sm-7\">\r\n\t\t\t\t\t<p class=\"animate-bg\"><\/p>\r\n\t\t\t\t\t<p class=\"animate-bg col-sm-11\"><\/p>\r\n\t\t\t\t\t<p class=\"animate-bg\"><\/p>\r\n\t\t\t\t<\/div>\r\n\t\t\t<\/div>\r\n\t\t<\/div>\r\n\t<\/div>\r\n\t\r\n\t<div class=\"col-sm-9\">\r\n\t\t<div class=\"panel panel-default\">\r\n\t\t\t<div class=\"panel-heading clearfix\">\r\n\t\t\t\t<div class=\"col-xs-10\">\r\n\t\t\t\t\t<div class=\"animate-bg\"><\/div>\r\n\t\t\t\t<\/div>\r\n\t\t\t<\/div>\r\n\t\t\t<div class=\"panel-body\">\r\n\t\t\t\t<div class=\"clearfix\">\r\n\t\t\t\t\t<div class=\"col-sm-3\">\r\n\t\t\t\t\t\t<p class=\"animate-bg\"><br><br><br><br><br><br><\/p>\r\n\t\t\t\t\t<\/div>\r\n\t\t\t\t\t<div class=\"col-sm-9\">\r\n\t\t\t\t\t\t<p class=\"animate-bg col-sm-11\"><\/p>\r\n\t\t\t\t\t\t<p class=\"animate-bg col-sm-9\"><\/p>\r\n\t\t\t\t\t\t<p class=\"animate-bg col-sm-10\"><\/p>\r\n\t\t\t\t\t\t<p class=\"animate-bg col-sm-9\"><\/p>\r\n\t\t\t\t\t\t<p class=\"animate-bg\"><\/p>\r\n\t\t\t\t\t<\/div>\r\n\t\t\t\t<\/div>\r\n\t\t\t\t\r\n\t\t\t\t<br>\r\n\t\t\t\t\r\n\t\t\t\t<div class=\"col-sm-6\">\r\n\t\t\t\t\t<p class=\"animate-bg col-sm-11\"><\/p>\r\n\t\t\t\t\t<p class=\"animate-bg col-sm-9\"><\/p>\r\n\t\t\t\t\t<p class=\"animate-bg col-sm-10\"><\/p>\r\n\t\t\t\t\t<p class=\"animate-bg col-sm-9\"><\/p>\r\n\t\t\t\t\t<p class=\"animate-bg\"><\/p>\r\n\t\t\t\t<\/div>\r\n\t\t\t\t<div class=\"col-sm-6\">\r\n\t\t\t\t\t<p class=\"animate-bg\"><br><br><br><br><br><br><\/p>\r\n\t\t\t\t<\/div>\r\n\t\t\t<\/div>\r\n\t\t<\/div>\r\n\t<\/div>\r\n<\/div>\r\n[\/cc]\r\n","post_title":"Create a Facebook Preloader Style using Bootstrap","post_excerpt":"Simple preloader similar to Facebook using Bootstrap. Easy to implement and easy to learn. ","post_status":"publish","comment_status":"open","ping_status":"open","post_password":"","post_name":"create-a-facebook-preloader-style-using-bootstrap","to_ping":"","pinged":"","post_modified":"2017-09-19 15:31:09","post_modified_gmt":"2017-09-19 07:31:09","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=1787","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":193,"post_author":"1","post_date":"2014-04-28 10:58:39","post_date_gmt":"2014-04-28 10:58:39","post_content":"<img src=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2014\/04\/custom-login-form.jpg\" alt=\"custom-login-form\" width=\"479\" height=\"367\" class=\"alignnone size-full wp-image-327\" \/>\r\n\r\nSay you are developing a website that involves log-in form for users and your client doesn't want the log-in form to be on a separate page or in www.yourwebsite.com\/wp-login . In this tutorial you are going to learn how to create a custom log-in form and have it display on the front-end. Also we are going to create a post request handler and our own validations for user inputs.\r\n\r\nFirst step is to create a page for our log-in form, the page should be a custom page and not a page template.\r\n\r\nHere is the log-in form:\r\n\r\n[cc lang = \"php\"]\r\n<form action=\"<?php the_permalink(); ?>\" method=\"post\" class=\"sign-in\">\r\n\t<p>\r\n\t\t<label for=\"user-name\"><?php _e('Username'); ?><\/label><br \/>\r\n\t\t<input type=\"text\" name=\"user-name\" id=\"user-name\" value=\"<?php echo wp_specialchars( $_POST['user-name'], 1 ); ?>\" \/>\r\n\t<\/p>\r\n\t<p>\r\n\t\t<label for=\"password\"><?php _e('Password'); ?><\/label><br \/>\r\n\t\t<input type=\"password\" name=\"password\" id=\"password\" \/>\r\n\t<\/p>\r\n\t<p>\r\n\t\t<input type=\"submit\" name=\"submit\" value=\"<?php _e('Log in'); ?>\" id = \"yellow-button\" \/>\r\n\t\t<input type=\"hidden\" name=\"action\" value=\"log-in\" \/>\r\n\t<\/p>\t\r\n<\/form>\r\n[\/cc]\r\n\r\nAnd this is the Post request handler:\r\n\r\n(Note that this handler should be placed before your get_header() function)\r\n\r\n[cc lang = \"php\"]\r\nif ( $_POST['action'] == 'log-in' ) {\r\n\t\r\n\t# Submit the user login inputs\r\n\t$login = wp_login( $_POST['user-name'], $_POST['password'] );\r\n\t$login = wp_signon( array( 'user_login' => $_POST['user-name'], 'user_password' => $_POST['password'], 'remember' => $_POST['remember-me'] ), false );\r\n\t\t\r\n\t# Redirect to account page after successful login.\r\n\tif ( $login->ID ) { \r\n\t\twp_redirect( home_url('account') );\t\t \r\n\t}\t\r\n}\r\n[\/cc]\r\n\r\nHere is the full code:\r\n\r\n[cc lang = \"php\"]\r\n<?php\r\n\/**\r\n * User Login Page\r\n * Author : Carl Victor Fontanos.\r\n * \r\n *\/\r\n\r\n# Send the user to his account or any page if already logged in.\r\nif ( is_user_logged_in() ) {\r\n\twp_redirect( home_url('\/account\/') );\r\n}\r\n\r\n# Get login error messages.\r\n$login_errors = (isset($_GET['user-login']) ) ? $_GET['user-login'] : 0;\t \r\n\t\r\nif ( $_POST['action'] == 'log-in' ) {\r\n\t\r\n\t# Submit the user login inputs\r\n\t$login = wp_login( $_POST['user-name'], $_POST['password'] );\r\n\t$login = wp_signon( array( 'user_login' => $_POST['user-name'], 'user_password' => $_POST['password'], 'remember' => $_POST['remember-me'] ), false );\r\n\t\t\r\n\t# Redirect to account page after successful login.\r\n\tif ( $login->ID ) { \r\n\t\twp_redirect( home_url('account') );\t\t \r\n\t}\t\r\n}\r\n\t \r\nget_header();\r\n\t\r\n?>\r\n\r\n<div id=\"content\" role=\"main\" class = \"user-login\" >\t\r\n\t<h2 class=\"page-title\"><?php the_title(); ?><\/h2>\r\n\t<?php if ( have_posts() ) while ( have_posts() ) : the_post(); ?>\r\n\r\n\t<?php\r\n\t\t# Output header error messages.\r\n\t\tif ( $login_errors === \"failed\" ) {  \r\n\t\t\techo '<p class=\"input-error\">Invalid username and \/ or password.<\/p>';  \r\n\t\t} elseif ( $login_errors === \"empty\" ) {  \r\n\t\t\techo '<p class=\"input-error\">Username and\/or Password is empty.<\/p>';  \r\n\t\t} elseif ( $login_errors === \"false\" ) {  \r\n\t\t\techo '<p class=\"input-error\">You are now logged out.<\/p>';  \r\n\t\t}\r\n\t?>\r\n\t\t\r\n<form action=\"<?php the_permalink(); ?>\" method=\"post\" class=\"sign-in\">\r\n\t<p>\r\n\t\t<label for=\"user-name\"><?php _e('Username'); ?><\/label><br \/>\r\n\t\t<input type=\"text\" name=\"user-name\" id=\"user-name\" value=\"<?php echo wp_specialchars( $_POST['user-name'], 1 ); ?>\" \/>\r\n\t<\/p>\r\n\t<p>\r\n\t\t<label for=\"password\"><?php _e('Password'); ?><\/label><br \/>\r\n\t\t<input type=\"password\" name=\"password\" id=\"password\" \/>\r\n\t<\/p>\r\n\t<p>\r\n\t\t<input type=\"submit\" name=\"submit\" value=\"<?php _e('Log in'); ?>\" id = \"yellow-button\" \/>\r\n\t\t<input type=\"hidden\" name=\"action\" value=\"log-in\" \/>\r\n\t<\/p>\t\r\n<\/form>\r\n\t\r\n\t<?php endwhile; ?>\r\n\t\r\n<\/div>\r\n\r\n<?php get_sidebar(); ?>\r\n<?php get_footer(); ?>\r\n[\/cc]\r\n\r\nThen add these codes to your functions.php:\r\n\r\n[cc lang = \"php\"]\r\nfunction redirect_login_page() {\r\n\r\n    $login_page  = home_url( '\/user-login\/' );  \r\n    $page_viewed = basename($_SERVER['REQUEST_URI']);  \r\n  \r\n    if( $page_viewed == \"wp-login.php\" && $_SERVER['REQUEST_METHOD'] == 'GET') {  \r\n        wp_redirect($login_page);  \r\n        exit;  \r\n    }  \r\n}  \r\nadd_action('init','redirect_login_page');\r\n\r\nfunction login_failed() {\r\n\r\n    $login_page  = home_url( '\/user-login\/' );  \r\n    wp_redirect( $login_page . '?user-login=failed' );  \r\n    exit;  \r\n}  \r\nadd_action( 'wp_login_failed', 'login_failed' );  \r\n  \r\nfunction verify_username_password( $user, $username, $password ) {  \r\n\r\n    $login_page  = home_url( '\/user-login\/' );  \r\n    if( $username == \"\" || $password == \"\" ) {  \r\n        wp_redirect( $login_page . \"?user-login=empty\" );  \r\n        exit;  \r\n    }  \r\n}  \r\nadd_filter( 'authenticate', 'verify_username_password', 1, 3);  \r\n\r\nfunction logout_page() {\r\n\r\n    $login_page  = home_url( '\/user-login\/' );  \r\n    wp_redirect( $login_page . \"?user-login=false\" );  \r\n    exit;  \r\n}  \r\nadd_action('wp_logout','logout_page');\r\n[\/cc]\r\n\r\nMake sure to change the \"user-login\" to the page where your log-in form is located.","post_title":"Create a New Frontend Login Form in Wordpress","post_excerpt":"Have full control over your WordPress log-in form and add your own validations.","post_status":"publish","comment_status":"open","ping_status":"open","post_password":"","post_name":"create-a-new-frontend-login-form-in-wordpress","to_ping":"","pinged":"\nhttp:\/\/carlofontanos.com\/wordpress-list\/","post_modified":"2015-02-09 07:30:41","post_modified_gmt":"2015-02-09 07:30:41","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=193","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":285,"post_author":"1","post_date":"2014-05-23 01:48:22","post_date_gmt":"2014-05-23 01:48:22","post_content":"<img class=\"alignnone size-full wp-image-291\" src=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2014\/05\/sessionless_captcha.jpg\" alt=\"sessionless_captcha\" width=\"344\" height=\"202\" \/>\r\n\r\n<a href = \"http:\/\/carlofontanos.com\/demo\/sessionless_captcha\/\" class = \"btn btn-success\" target = \"_blank\">Demo<\/a> <a href=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2014\/05\/sessionless_captcha.rar\" class = \"btn btn-primary\">Download<\/a>\r\n\r\nSometimes you can have session issues on your server, issues such as sessions not being stored on the browser and there is no way to retrieve the data. In some cases, sessions might work on Chrome but not in Firefox or vise versa.\r\n\r\nI spent half a day trying to solve session issues with my captcha until I decided to create a sessionless captcha.\r\n\r\nThe idea of this sessionless captcha is\u00a0generating a random word(s) on the server side, two-way encrypt it and then put the encrypted string in the form as a hidden variable. In addition, provide the encrypted string in the image url that gets generated dynamically. The image request can decode the string and then render the captcha image. When the user submits the value, the form contains the user\u2019s value and the encrypted value which can be confirmed on the server.\r\n\r\nSample Form with validation:\r\n[cc lang = \"php\"]\r\n<?php\r\n\r\n$errorsucc = '';\r\n\r\nif (isset($_POST[\"captcha_check\"])) {\r\n\t\t  \r\n\t$code = str_decrypt($_POST[\"captcha_check\"]);\t\r\n\t\r\n\tif (empty($_POST['captcha_code'])) { \r\n\t\t$errorsucc = '<p style=\"color:red\">Please Enter the security code.<\/p>';\r\n\t\t\r\n\t} elseif(!( $code == $_POST['captcha_code'] && !empty($code) )) {\r\n\t\t$errorsucc = '<p style=\"color:red\">Incorrect Code Entered.<\/p>';\r\n\t\t\r\n\t} else {\r\n\t\t$errorsucc = '<p style = \"green\">Nice, you entered the correct code.<\/p>';\t\r\n\t}\r\n}\r\n\r\n$captcha = new CaptchaCode();\r\n$code = str_encrypt($captcha->generateCode(6));\r\n?>\r\n\r\n<html>\r\n\t<title>Sessionless Captcha<\/title>\r\n\t<div style = \"background: #e2e2e2; padding: 20px; width: 20%; box-shadow: 5px 5px #ccc;\">\r\n\t\t<?php echo $errorsucc; ?>\r\n\t\t<form name=\"captchaform\" method=\"post\">\r\n\t\t\t<table border=\"0\" cellpadding=\"4\" cellspacing=\"0\">\r\n\t\t\t\t<tr><td valign=\"middle\" align=\"left\">Security Code:<\/td>\r\n\t\t\t\t\t<td valign=\"middle\" align=\"left\"><img src=\"captcha_images.php?width=150&height=50&code=<?php echo $code?>\" \/><\/td>\r\n\t\t\t\t<\/tr>\r\n\t\t\t\t<tr><td valign=\"middle\" align=\"left\">Enter Code:<\/td>\r\n\t\t\t\t\t<td valign=\"middle\" align=\"left\"><input id=\"captcha_code\" name=\"captcha_code\" style=\"width:150px\" type=\"text\" \/><\/td>\r\n\t\t\t\t<\/tr>\r\n\r\n\t\t\t\t<tr><td valign=\"top\" align=\"left\">\r\n\t\t\t\t\t<\/td>\r\n\t\t\t\t\t<td valign=\"top\" align=\"left\">\r\n\t\t\t\t\t\t<input border=\"0\" type=\"submit\" value=\"Submit\" \/> \t\r\n\t\t\t\t\t<\/td>\r\n\t\t\t\t<\/tr>\r\n\t\t\t<\/table>\r\n\t\t\t<input type=\"hidden\" name=\"captcha_check\" value=\"<?php echo $code?>\" \/>\r\n\t\t<\/form>\r\n\t<\/div>\r\n<\/html>\r\n[\/cc]\r\n\r\nGenerate images just like any other captcha:\r\n[cc lang = \"php\"]\r\n\t\/* font size will be 75% of the image height *\/\r\n\t$font_size = $height * 0.75;\r\n\t$image = @imagecreate($width, $height) or die('Cannot initialize new GD image stream');\r\n\t\/* set the colours *\/\r\n\t$background_color = imagecolorallocate($image, 255, 255, 255);\r\n\t$text_color = imagecolorallocate($image, 0, 26, 26);\r\n\t$noise_color = imagecolorallocate($image, 25, 89, 89);\r\n\t\/* generate random dots in background *\/\r\n\tfor( $i=0; $i<($width*$height)\/3; $i++ ) {\r\n\t\timagefilledellipse($image, mt_rand(0,$width), mt_rand(0,$height), 1, 1, $noise_color);\r\n\t}\r\n\t\/* generate random lines in background *\/\r\n\tfor( $i=0; $i<($width*$height)\/150; $i++ ) {\r\n\t\timageline($image, mt_rand(0,$width), mt_rand(0,$height), mt_rand(0,$width), mt_rand(0,$height), $noise_color);\r\n\t}\r\n\t\/* create textbox and add text *\/\r\n\t$textbox = imagettfbbox($font_size, 0, $this->font, $code) or die('Error in imagettfbbox function');\r\n\t$x = ($width - $textbox[4])\/2;\r\n\t$y = ($height - $textbox[5])\/2;\r\n\timagettftext($image, $font_size, 0, $x, $y, $text_color, $this->font , $code) or die('Error in imagettftext function');\r\n\t\/* output captcha image to browser *\/\r\n\theader('Content-Type: image\/jpeg');\r\n\timagejpeg($image);\r\n\timagedestroy($image);\r\n\r\n[\/cc]","post_title":"Create a Sessionless Captcha in PHP","post_excerpt":"No more using of sessions, let's generate our Form Captcha using encode and decode functions","post_status":"publish","comment_status":"open","ping_status":"open","post_password":"","post_name":"create-a-sessionless-captcha-in-php","to_ping":"","pinged":"\nhttp:\/\/carlofontanos.com\/php-list\/","post_modified":"2015-02-26 15:36:30","post_modified_gmt":"2015-02-26 15:36:30","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=285","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":98,"post_author":"1","post_date":"2014-04-26 13:57:28","post_date_gmt":"2014-04-26 13:57:28","post_content":"This can be useful when you plan on creating a simple plugin-like page that doesn't require an installation, simply add the codes to your functions.php and it will appear right away on your admin page.\r\n\r\nFirst we register our submenu by hooking it to the admin_menu\r\n\r\n\r\n[cc lang = \"php\"]\r\nadd_action('admin_menu', 'register_custom_submenu');\r\n\r\nfunction register_custom_submenu() {\r\nadd_submenu_page( 'tools.php', 'Custom Submenu', 'Custom Submenu', 'administrator', 'custom-submenu', 'custom_submenu' );\r\n}\r\n[\/cc]\r\n\r\n\r\nLet's review the above code\r\n\r\n<strong>1st Parameter<\/strong> of the add_submenu_page is the slug name for the parent menu (or the file name of a standard WordPress admin page). Use NULL or set to 'options.php' if you want to create a page that doesn't appear in any menu.\r\n\r\n<strong>2nd Parameter<\/strong> - the text to be displayed in the title tags of the page when the menu is selected\r\n\r\n<strong>3rd Parameter<\/strong> - This is simply the text to be used for the menu\r\n\r\n<strong>4th Parameter<\/strong> - The capability required for this menu to be displayed to the user. Check out the list of capabilities by following this link: <a href=\"http:\/\/codex.wordpress.org\/Roles_and_Capabilities\" target=\"_blank\">List of Capabilities<\/a>\r\n\r\n<strong>5th Parameter<\/strong> - The slug name to refer to this menu by (should be unique for this menu). If you want to NOT duplicate the parent menu item, you need to set the name of the $menu_slug exactly the same as the parent slug.\r\n\r\n<strong>6th Parameter<\/strong> - The function to be called to output the content for this page. The codex say this is not required, but of course we have to create this since this will be the function that will be outputting our page contents.\r\n\r\nSo now that we have registered our menu, we can simply create the function custom_submenu(); where we will be placing our contents\r\n\r\n[cc lang = \"php\"]\r\nfunction custom_submenu() {\r\necho '<h2>Custom Submenu<\/h2>';\r\necho '<p>This where your custom settings go.<\/p>;\r\n}\r\n[\/cc]\r\n\r\nCheckout my other WordPress Tutorials by following this <a href = \"http:\/\/carlofontanos.com\/wordpress-list\/\">LINK<\/a> ","post_title":"Create a Submenu Page in Wordpress Admin","post_excerpt":"Start creating your first plugin-like page","post_status":"publish","comment_status":"open","ping_status":"open","post_password":"","post_name":"creating-a-submenu-page-in-wordpress-admin","to_ping":"","pinged":"\nhttp:\/\/carlofontanos.com\/wordpress-list\/","post_modified":"2015-02-09 07:40:17","post_modified_gmt":"2015-02-09 07:40:17","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=98","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":1138,"post_author":"1","post_date":"2015-06-29 10:15:15","post_date_gmt":"2015-06-29 10:15:15","post_content":"In this tutorial I am going to discuss how\u00a0to insert posts via the front end of your WordPress blog. This tutorial will also cover some validation techniques, setting the post as \"pending\", and email notification when a new post is created. So let's begin!\r\n\r\nFirst, you would want to create a new page, let's call it \"Add Topic\" with a slug of \"add-topic\". Make sure that your permalink settings it set to \"\/%postname%\/\"\r\n\r\nNext is to\u00a0Log on to your FTP then navigate to your current theme's folder and create a PHP\u00a0file: page-add-topic.php. Test this page, it should show a blank white screen.\r\n\r\nNow we are ready to add some code to this page, open\u00a0page-add-topic.php using your favorite code editor. Create the header and the footer functions:\r\n\r\n[cc lang = \"php\"]\r\n<?php get_header(); ?>\r\n\/\/ HTML code goes here \r\n<?php get_footer(); ?>\r\n[\/cc]\r\n\r\n<h3>Create the form<\/h3>\r\nWithin the get_header and get_footer function, add the code bellow:\r\n\r\n[cc lang = \"html\"]\r\n<div class = \"content\">\r\n\t<div class = \"topic-submit\">\r\n\t\t<?php echo $msg ? $msg : ''; ?>\r\n\t<\/div>\r\n\t<form method = \"post\">\r\n\t\t<div class = \"form-group\">\r\n\t\t\t<label class = \"\" for = \"topic_title\"><?php _e('Topic Title'); ?>*<\/label>\r\n\t\t\t<input type = \"text\" name = \"topic_title\" class = \"form-control\" value = \"<?php echo $_POST['topic_title'] ? $_POST['topic_title'] : ''; ?>\" \/>\r\n\t\t<\/div>\r\n\t\t<div class = \"form-group\">\r\n\t\t\t<label class = \"\" for = \"topic_description\"><?php _e('Topic Description'); ?>*<\/label>\r\n\t\t\t<textarea class = \"form-control\" name = \"topic_description\" rows= \"15\" ><?php echo $_POST['topic_description'] ? $_POST['topic_description'] : ''; ?><\/textarea>\r\n\t\t<\/div>\r\n\t\t<div class = \"form-group\">\r\n\t\t\t<label class = \"\" for = \"topic_email\"><?php _e('Your Email'); ?>*<\/label>\r\n\t\t\t<input type = \"text\" name = \"topic_email\" class = \"form-control\" value = \"<?php echo $_POST['topic_email'] ? $_POST['topic_email'] : ''; ?>\" \/>\r\n\t\t<\/div>\r\n\t\t<br class = \"clearfix\" \/>\r\n\t\t<input type = \"submit\" name = \"topic_submit\" class = \"btn btn-default\" \/>\r\n\t<\/form>\r\n<\/div>\r\n[\/cc]\r\n\r\nThe \"topic-submit\" div container is where we will be outputting any error or success messages\r\n\r\nOk now that we have our form, we need to code the server side. Just before the get_header(); function, insert the following PHP code: \r\n\r\n[cc lang = \"php\"]\r\n\r\nif (isset($_POST['topic_submit'])) {\r\n\/\/ Sanitize the form fields here\r\n\/\/ Create validation here\r\n}\r\n[\/cc]\r\n\r\n<h3>Sanitizing the Form Fields<\/h3>\r\n\r\nTo be sure that our visitors are submitting valid data and not some script or anything else that can harm our site, we need to sanitize the form fields:\r\n\r\n[cc lang = \"php\"]\r\n\/\/ Sanitize the form fields here\r\n$topic_title = sanitize_text_field($_POST['topic_title']);\r\n$topic_description = wp_strip_all_tags($_POST['topic_description']);\r\n$topic_email = sanitize_text_field($_POST['topic_email']);\r\n[\/cc]\r\n\r\nWe are simply passing all posted data to the sanitize_text_field function. The wp_strip_all_tags function sanitizes and strip all html tags from any input data that is why we no longer have to use sanitize_text_field with it.\r\n\r\n<h3>Validation<\/h3>\r\n\r\n[cc lang = \"php\"]\r\n\/\/ Create validation here\r\nif( empty( $topic_title ) ) {\r\n\t$msg .= '<p class = \"post-error\">Please enter a title<\/p>';\r\n} else if ( empty( $topic_description )) {\r\n\t$msg .= '<p class = \"post-error\">Please enter a description<\/p>';\r\n} else if ( empty( $topic_email )) {\r\n\t$msg .= '<p class = \"post-error\">Please enter your email address<\/p>';\r\n} else if ( ! is_email( $topic_email )) {\r\n\t$msg .= '<p class = \"post-error\">Please enter a valid email<\/p>';\r\n} else {\r\n\t\/\/ Insert the page to the database\r\n\t\r\n\t\/\/ Save a copy of the user's email to our database\r\n\t\r\n\t\/\/ Send an email notification to the admin email\r\n}\r\n[\/cc]\r\n\r\nIn the code above, we are simply validating the input fields if they are empty and if the email address is of the right format.\r\n\r\nYou can test the form right now by navigating to the page ( ex. http:\/\/example.com\/add-topic ) to see the form and the validation in action. \r\n\r\n<h3>Inserting to the Database<\/h3>\r\n\r\nAdd the following code on the ELSE block: \r\n\r\n[cc lang = \"php\"]\r\n\/\/ Insert the page to the database\r\n$topic_data = array(\r\n\t'post_title'    =>\twp_strip_all_tags( $topic_title ),\r\n\t'post_content'  => \timplode( \"\\n\", array_map( 'sanitize_text_field', explode( \"\\n\", $topic_description ) ) ),\r\n\t'post_status'   => \t'pending',\r\n\t'post_author'   => \t1,\r\n\t'post_type'  \t=> 'post'\r\n);\r\n\r\n$post_id = wp_insert_post( $topic_data );\r\n\r\n[\/cc]\r\n\r\nNotice that we are setting post_status to \"pending\", that way the admin can review the post before it appears on the site. Change the \"post_type\" value if you want to associate this new post with another post type. Make sure to replace \"post_author\" value with the admin user ID. If you are dealing with logged in users then it's best to use the global $current_user variable then set the post author value to: \"$current_user->ID\" without the double quotes.\r\n\r\nWe then add the codes that will save the user's email to our database for later use and also notify the admin email about the new post that is awaiting his\/her approval:\r\n\r\n[cc lang = \"php\"]\r\n\r\nif( $post_id ){\r\n\t\/\/ Save a copy of the user's email to our database, you can remove this if you are dealing with logged-in users.\r\n\tupdate_post_meta( $post_id, 'topic_author', $topic_email ); \r\n\t\r\n\t\/\/ Send an email notification to the admin email\r\n\t$from = 'info@example.com';\r\n\t$headers = 'From: Example.com <\"' . $from . '\">';\r\n\t$subject = \"New topic awaiting approval\";\r\n\t\r\n\tob_start();\r\n\t?>\r\n\t\r\n\t<p>A new topic is awaiting your approval, <a href = \"<?php echo get_permalink( $post_id ); ?>\">click here to review the topic<\/a><\/p>\r\n\t<p><br \/><\/p>\r\n\t<p><a href = \"<?php echo home_url(); ?>\">carlofontanos.com<\/a><\/p>\r\n\t\r\n\t<?php\r\n\r\n\t$message = ob_get_contents();\r\n\t\r\n\tob_end_clean();\r\n\r\n\twp_mail(get_option('admin_email'), $subject, $message, $headers);\r\n\t\r\n\t$msg = '<p class = \"post-success\">Your topic has been submitted and is now awaiting for approval.<\/p>';\r\n}\r\n[\/cc]\r\n\r\nFeel Free to change and design the HTML contents above. \r\n\r\n<h3>Test the Form<\/h3>\r\nYou now have a front-end form that includes validation and email notification, go ahead and test it!. You can style the error or success colors to have green and red background, your choice!.  \r\n\r\n<h3>Challange<\/h3>\r\nUse JavaScript to validate the form fields then use AJAX to insert the data to the database.\r\n","post_title":"Create Posts from WordPress Front-End","post_excerpt":"Allow visitor to create a post from the front-end of your WordPress blog","post_status":"publish","comment_status":"open","ping_status":"open","post_password":"","post_name":"create-posts-from-wordpress-front-end","to_ping":"","pinged":"","post_modified":"2015-09-03 13:16:09","post_modified_gmt":"2015-09-03 13:16:09","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=1138","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":1043,"post_author":"1","post_date":"2015-01-20 06:28:00","post_date_gmt":"2015-01-20 06:28:00","post_content":"When sharing a post or page - one of the reasons why you get no thumbnail, or unrelated thumbnail is because facebook\u2019s script is not smart enough. On each page load, it searches for all image tags and display the ones that it finds useful. Sometimes the script times out without even loading the right image. To get around this issue, facebook recommends developers to tell the script exactly which image to pick by adding a meta tag in the header. The meta tag looks something like this:\r\n\r\n<code><meta property=\"og:image\" content=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2015\/01\/access-denied.jpg\"\/><\/code>\r\n\r\nThis works perfectly when you are running a static site, but for a dynamic platform like WordPress, we need to tweak the code a little bit to make it work.\r\n\r\nIn this tutorial, I am going to show you how to create a field where you can enter a custom image that you wish to use as your cover image when sharing your posts\/pages on Social Sites such as Facebook. This tutorial will also cover how you can generate a meta tag for each post\/page in WordPress. \r\n\r\nLet's Start by creating a New Post in your WordPress admin.\r\n\r\nThen click on \"Screen Options\" button found on the top right hand corner in your New Post screen. \r\n\r\nCheck the \"Custom Fields\" to enable it within your editing page.\r\n\r\n<a href=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2015\/01\/facebook-meta-image1.jpg\"><img src=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2015\/01\/facebook-meta-image1.jpg\" alt=\"facebook-meta-image1\" width=\"573\" height=\"249\" class=\"alignnone size-full wp-image-1045\" \/><\/a>\r\n\r\nJust bellow the Excerpt field or Content field, a new field called \"Custom Fields\" will appear. \r\n\r\nOn the \"Name\" field, enter:\r\n<code>social_media_thumbnail_preview<\/code>\r\nthen for the \"Value\" field, enter the link of the image that you want to appear as a thumbnail when you share your post on facebook. Example:\r\n<code>http:\/\/carlofontanos.com\/wp-content\/uploads\/2015\/01\/access-denied.jpg<\/code>\r\n\r\nJust to be sure that you are doing it all correctly, kindly refer to the screenshot bellow:\r\n\r\n<a href=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2015\/01\/facebook-meta-image2.jpg\"><img src=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2015\/01\/facebook-meta-image2.jpg\" alt=\"facebook-meta-image2\" width=\"939\" height=\"173\" class=\"alignnone size-full wp-image-1047\" \/><\/a>\r\n\r\nWhat we did above is we simply created a new custom field with a meta_key \"social_media_thumbnail_preview\" and a meta_value containing the value of the image link that you just entered. Later on, we are going to query the value of this field and programatically create a new meta tag which will be identified by facebook as the post thumbnail.  \r\n\r\nNext is to hit the \"Publish\" button.\r\n\r\nThe next time you want to create a thumbnail for a post or page - there is no need to re-enter the \"Name\" field, it was already registered by WordPress as a default field. Refer to the screenshot bellow:\r\n\r\n<a href=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2015\/01\/facebook-meta-image3.jpg\"><img src=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2015\/01\/facebook-meta-image3.jpg\" alt=\"facebook-meta-image3\" width=\"853\" height=\"493\" class=\"alignnone size-full wp-image-1046\" \/><\/a>\r\n\r\nNext step is we need to create a function that will register an image meta tag and will then be scraped by facebook.\r\n\r\nOpen your functions.php and simply add the block of code bellow:\r\n[cc lang = \"php\"]\r\nadd_action('wp_head', 'cvf_social_media_thumbnail_preview');\t\r\nfunction cvf_social_media_thumbnail_preview() {\r\n\t\r\n\tglobal $post;\r\n\t\r\n\t$social_media_thumbnail = get_post_meta($post->ID, 'social_media_thumbnail_preview', true);\r\n\t\r\n\tif($social_media_thumbnail){\r\n\t\techo '\r\n\t\t<meta property=\"og:image\" content=\"' . $social_media_thumbnail . '\"\/>\r\n\t\t<meta property=\"og:image:width\" content=\"1024\">';\t\r\n\t}\r\n\t\r\n}\r\n[\/cc]\r\n\r\nWhat the above code does is it gets the ID of the post that is currently being viewed, then gets the meta_value of the meta_key \"social_media_thumbnail_preview\" from the database. If an Image URL exists, it will then generate the meta tags on the header part of the webpage.\r\n\r\nIf you try to view the source code of your web page, you should be able to locate the code similar to the one bellow\r\n<code>\r\n<meta property=\"og:image\" content=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2015\/01\/access-denied.jpg\"\/>\r\n<meta property=\"og:image:width\" content=\"1024\">\r\n<\/code>\r\n\r\nYou can also define your own image width and height in your meta tags:\r\n\r\nWidth:\r\n<code><meta property=\"og:image:width\" content=\"1024\"><\/code>\r\n\r\nHeight: \r\n<code><meta property=\"og:image:height\" content=\"1024\"><\/code>\r\n\r\nWhen you share your post\/page on facebook, it should show the image you selected as its cover image or banner.\r\n\r\n<a href=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2015\/01\/facebook-meta-image5.jpg\"><img src=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2015\/01\/facebook-meta-image5.jpg\" alt=\"facebook-meta-image5\" width=\"743\" height=\"679\" class=\"alignnone size-full wp-image-1048\" \/><\/a>\r\n\r\nIf the thumbnail is not showing the correct image or not showing any thumbnail at all, you can tell facebook to rebuild your link by using a simple tool \"Object Debugger\" developed by facebook: <a href = \"https:\/\/developers.facebook.com\/tools\/debug\/og\/object\/\">https:\/\/developers.facebook.com\/tools\/debug\/og\/object\/<\/a> then enter the link of the post\/page you wish to be re-generated:\r\n\r\n<a href=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2015\/01\/facebook-meta-image4.jpg\"><img src=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2015\/01\/facebook-meta-image4.jpg\" alt=\"facebook-meta-image4\" width=\"948\" height=\"200\" class=\"alignnone size-full wp-image-1049\" \/><\/a>\r\n\r\nRefresh your page, it should now show you the correct cover image when you share your post\/page","post_title":"Creating a Facebook Thumbnail Field in your WordPress Post or Page","post_excerpt":"In this tutorial, I am going to show you how to create a field where you can enter a custom image that you wish to use as your cover image when sharing your posts\/pages on Social Sites such as Facebook","post_status":"publish","comment_status":"open","ping_status":"open","post_password":"","post_name":"creating-a-facebook-thumbnail-field-in-your-wordpress-post-or-page","to_ping":"","pinged":"","post_modified":"2015-01-20 07:24:07","post_modified_gmt":"2015-01-20 07:24:07","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=1043","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":1814,"post_author":"1","post_date":"2017-03-08 17:33:33","post_date_gmt":"2017-03-08 09:33:33","post_content":"<img src=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2017\/03\/create-a-login-page-in-django.jpg\" alt=\"\" width=\"100%\" class=\"img-responsive\" \/>\r\n\r\nIn this tutorial we are going to build a simple login using Django Framework. Above photo is exactly how our app will look like when completed, so let's get started.\r\n\r\n<strong>Note<\/strong>: The codes in this tuturial was developed using Django v1.10.6, it may not work with older versions. \r\n\r\nCreate the base template <strong>mymodule\/templates\/mymodule\/base.html<\/strong>:\r\n[cc lang = \"html\"]\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n\t<title>MyDjangoApp<\/title>\r\n\t\r\n\t<meta charset=\"utf-8\">\r\n\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n\t\r\n\t<link rel=\"stylesheet\" href=\"\/\/maxcdn.bootstrapcdn.com\/bootstrap\/3.3.7\/css\/bootstrap.min.css\">\r\n<\/head>\r\n<body class=\"override\">\r\n\t<nav class=\"navbar navbar-inverse\" role=\"navigation\">\r\n\t\t<div class=\"container\">\r\n\t\t\t<div class=\"navbar-header\">\r\n\t\t\t\t<button type=\"button\" class=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#navbar\" aria-expanded=\"false\">\r\n\t\t\t\t\t<span class=\"sr-only\">Toggle navigation<\/span>\r\n\t\t\t\t\t<span class=\"icon-bar\"><\/span>\r\n\t\t\t\t\t<span class=\"icon-bar\"><\/span>\r\n\t\t\t\t\t<span class=\"icon-bar\"><\/span>\r\n\t\t\t\t<\/button>\r\n\t\t\t\t<a class=\"navbar-brand\" href=\"\/mymodule\/\">MyDjangoApp<\/a>\r\n\t\t\t<\/div>\r\n\t\t\t\r\n\t\t\t<div id=\"navbar\" class=\"collapse navbar-collapse\">\r\n\t\t\t\t<ul class=\"nav navbar-nav navbar-right\">\r\n\t\t\t\t\t<li><a href=\"\/mymodule\/login\">Login<\/a><\/li>\r\n\t\t\t\t<\/ul>\r\n\t\t\t<\/div>\r\n\t\t<\/div>\r\n\t<\/nav>\r\n\t\r\n\t<div class=\"container\">\r\n\t\t<div class=\"row\">\r\n\t\t\t{% block content %}{% endblock %}\r\n\t\t<\/div>\r\n\t<\/div>\r\n\t\r\n\t<footer>\r\n\t\t<div class=\"container\">\r\n\t\t\t<div class=\"row well ml-t\">\r\n\t\t\t\t<div class=\"col-lg-8 col-md-8\">\t\t\r\n\t\t\t\t\t<h4>Developed by: <a href=\"http:\/\/carlofontanos.com\" target=\"_blank\">Carl Victor C. Fontanos<\/a><\/h4>\r\n\t\t\t\t<\/div>\r\n\t\t\t\t<div class=\"col-lg-4 col-md-4\">\r\n\t\t\t\t\t<p class=\"m-t\">Copyright &copy <a href=\"http:\/\/carlofontanos.com\" target=\"_blank\">www.carlofontanos.com<\/a> 2017<\/p>\r\n\t\t\t\t\t<p>All Rights Reserved.<\/p>\r\n\t\t\t\t<\/div>\r\n\t\t\t<\/div>\r\n\t\t<\/div>\r\n\t<\/footer>\r\n<\/body>\r\n<\/html>\r\n[\/cc]\r\n\r\nThen create the login template: <strong>mymodule\/templates\/mymodule\/login.html<\/strong> and include the code bellow:\r\n\r\n[cc lang=\"html\"]\r\n{% extends \"mymodule\/base.html\" %}\r\n\r\n{% block content %}\r\n\t<div class=\"container\">\r\n\t\t<form action=\"{% url 'mymodule:user_login' %}\" method=\"post\">\r\n\t\t\t{% csrf_token %}\r\n\t\t\t<div class=\"col-md-8 col-md-offset-2\">\r\n\t\t\t\t<div class=\"panel panel-default\">\r\n\t\t\t\t\t<div class=\"panel-heading\">Login<\/div>\r\n\t\t\t\t\t<div class=\"panel-body\">\r\n\t\t\t\t\t\t{% if error_message %}\r\n\t\t\t\t\t\t\t<p class=\"bg-danger p-d ml-b\">{{ error_message }}<\/p>\r\n\t\t\t\t\t\t{% endif %}\r\n\t\t\t\t\t\t<div class=\"form-group clearfix\">\r\n\t\t\t\t\t\t\t<label for=\"username\" class=\"col-md-4 control-label text-right\">Username:<\/label>\r\n\t\t\t\t\t\t\t<div class=\"col-md-6\">\r\n\t\t\t\t\t\t\t\t<input name=\"username\" value=\"\" type=\"text\" class=\"form-control\" \/>\r\n\t\t\t\t\t\t\t<\/div>\r\n\t\t\t\t\t\t<\/div>\r\n\t\t\t\t\t\t<div class=\"form-group clearfix\">\r\n\t\t\t\t\t\t\t<label for=\"password\" class=\"col-md-4 control-label text-right\">Password:<\/label>\r\n\t\t\t\t\t\t\t<div class=\"col-md-6\">\r\n\t\t\t\t\t\t\t\t<input name=\"password\" type=\"password\" class=\"form-control\" \/>\r\n\t\t\t\t\t\t\t<\/div>\r\n\t\t\t\t\t\t<\/div>\r\n\t\t\t\t\t\t<div class=\"col-md-6 col-md-offset-4\">\r\n\t\t\t\t\t\t\t<input name=\"login\" type=\"submit\" value=\"Login\" class=\"btn btn-success\" \/> &nbsp; \r\n\t\t\t\t\t\t\t<a href=\"\/mymodule\/register\">or Register<\/a>\r\n\t\t\t\t\t\t<\/div>\r\n\t\t\t\t\t<\/div>\r\n\t\t\t\t<\/div>\r\n\t\t\t<\/div>\r\n\t\t<\/form>\r\n\t<\/div>\r\n{% endblock %}\r\n[\/cc]\r\n\r\nCreate the controller that will handle both GET and POST methods to the login form. The code bellow goes to your <strong>mymodule\/views.py<\/strong>:\r\n[cc lang=\"python\"]\r\nfrom django.contrib.auth import authenticate, login\r\nfrom django.shortcuts import render\r\n\r\ndef user_login(request):\r\n    if request.method == 'POST':\r\n        # Process the request if posted data are available\r\n        username = request.POST['username']\r\n        password = request.POST['password']\r\n        # Check username and password combination if correct\r\n        user = authenticate(username=username, password=password)\r\n        if user is not None:\r\n            # Save session as cookie to login the user\r\n            login(request, user)\r\n            # Success, now let's login the user. \r\n            return render(request, 'ecommerce\/user\/account.html')\r\n        else:\r\n            # Incorrect credentials, let's throw an error to the screen.\r\n            return render(request, 'ecommerce\/user\/login.html', {'error_message': 'Incorrect username and \/ or password.'})\r\n    else:\r\n        # No post data availabe, let's just show the page to the user.\r\n        return render(request, 'ecommerce\/user\/login.html')\r\n[\/cc]\r\n\r\nFinally, register the view in our <strong>mymodule\/urls.py<\/strong>:\r\n[cc lang=\"python\"]\r\nfrom django.conf.urls import url\r\nfrom . import views\r\n\r\napp_name = 'mymodule' # So we can use it like: {% url 'mymodule:user_login' %} on our template. \r\nurlpatterns = [\r\n\turl(r'^login\/$', views.user_login, name='user_login')\r\n]\r\n[\/cc]","post_title":"Creating a Login Page in Django","post_excerpt":"","post_status":"publish","comment_status":"open","ping_status":"open","post_password":"","post_name":"creating-a-login-page-in-django","to_ping":"","pinged":"","post_modified":"2017-04-22 23:00:20","post_modified_gmt":"2017-04-22 15:00:20","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=1814","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":1803,"post_author":"1","post_date":"2017-03-08 17:08:41","post_date_gmt":"2017-03-08 09:08:41","post_content":"<img src=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2017\/03\/create-a-registration-page-in-django.jpg\" alt=\"\" width=\"100%\" class=\"img-responsive\" \/>\r\n\r\nIn this tutorial we are going to build a simple registrtaion using Django Framework. Above photo is exactly how our app will look like when completed, so let's get started.\r\n\r\n<strong>Note<\/strong>: The codes in this tuturial was developed using Django v1.10.6, it may not work with older versions. \r\n\r\nCreate the base template <strong>mymodule\/templates\/mymodule\/base.html<\/strong>:\r\n[cc lang = \"html\"]\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n\t<title>MyDjangoApp<\/title>\r\n\t\r\n\t<meta charset=\"utf-8\">\r\n\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n\t\r\n\t<link rel=\"stylesheet\" href=\"\/\/maxcdn.bootstrapcdn.com\/bootstrap\/3.3.7\/css\/bootstrap.min.css\">\r\n<\/head>\r\n<body class=\"override\">\r\n\t<nav class=\"navbar navbar-inverse\" role=\"navigation\">\r\n\t\t<div class=\"container\">\r\n\t\t\t<div class=\"navbar-header\">\r\n\t\t\t\t<button type=\"button\" class=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#navbar\" aria-expanded=\"false\">\r\n\t\t\t\t\t<span class=\"sr-only\">Toggle navigation<\/span>\r\n\t\t\t\t\t<span class=\"icon-bar\"><\/span>\r\n\t\t\t\t\t<span class=\"icon-bar\"><\/span>\r\n\t\t\t\t\t<span class=\"icon-bar\"><\/span>\r\n\t\t\t\t<\/button>\r\n\t\t\t\t<a class=\"navbar-brand\" href=\"\/mymodule\/\">MyDjangoApp<\/a>\r\n\t\t\t<\/div>\r\n\t\t\t\r\n\t\t\t<div id=\"navbar\" class=\"collapse navbar-collapse\">\r\n\t\t\t\t<ul class=\"nav navbar-nav navbar-right\">\r\n\t\t\t\t\t<li><a href=\"\/mymodule\/register\">Register<\/a><\/li>\r\n\t\t\t\t<\/ul>\r\n\t\t\t<\/div>\r\n\t\t<\/div>\r\n\t<\/nav>\r\n\t\r\n\t<div class=\"container\">\r\n\t\t<div class=\"row\">\r\n\t\t\t{% block content %}{% endblock %}\r\n\t\t<\/div>\r\n\t<\/div>\r\n\t\r\n\t<footer>\r\n\t\t<div class=\"container\">\r\n\t\t\t<div class=\"row well ml-t\">\r\n\t\t\t\t<div class=\"col-lg-8 col-md-8\">\t\t\r\n\t\t\t\t\t<h4>Developed by: <a href=\"http:\/\/carlofontanos.com\" target=\"_blank\">Carl Victor C. Fontanos<\/a><\/h4>\r\n\t\t\t\t<\/div>\r\n\t\t\t\t<div class=\"col-lg-4 col-md-4\">\r\n\t\t\t\t\t<p class=\"m-t\">Copyright &copy <a href=\"http:\/\/carlofontanos.com\" target=\"_blank\">www.carlofontanos.com<\/a> 2017<\/p>\r\n\t\t\t\t\t<p>All Rights Reserved.<\/p>\r\n\t\t\t\t<\/div>\r\n\t\t\t<\/div>\r\n\t\t<\/div>\r\n\t<\/footer>\r\n<\/body>\r\n<\/html>\r\n[\/cc]\r\n\r\nThen create the registration template: <strong>mymodule\/templates\/mymodule\/register.html<\/strong> and include the code bellow:\r\n\r\n[cc lang=\"html\"]\r\n{% extends \"mymodule\/base.html\" %}\r\n\r\n{% block content %}\r\n\t<div class=\"container\">\r\n\t\t<form action=\"{% url 'mymodule:user_register' %}\" method=\"post\">\r\n\t\t\t{% csrf_token %}\r\n\t\t\t<div class=\"col-md-8 col-md-offset-2\">\r\n\t\t\t\t<div class=\"panel panel-default\">\r\n\t\t\t\t\t<div class=\"panel-heading\">Register<\/div>\r\n\t\t\t\t\t<div class=\"panel-body\">\r\n\t\t\t\t\t\t{% if error_message %}\r\n\t\t\t\t\t\t\t<p class=\"bg-danger p-d ml-b\">{{ error_message }}<\/p>\r\n\t\t\t\t\t\t{% endif %}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div class=\"form-group clearfix\">\r\n\t\t\t\t\t\t\t<label for=\"{{ form.username.id_for_label }}\" class=\"col-md-4 control-label text-right\">Username<span class=\"text-red\">*<\/span>:<\/label>\r\n\t\t\t\t\t\t\t<div class=\"col-md-6\">\r\n\t\t\t\t\t\t\t\t{{ form.username }}\r\n\t\t\t\t\t\t\t<\/div>\r\n\t\t\t\t\t\t<\/div>\r\n\t\t\t\t\t\t<div class=\"form-group clearfix\">\r\n\t\t\t\t\t\t\t<label for=\"{{ form.email.id_for_label }}\" class=\"col-md-4 control-label text-right\">Email<span class=\"text-red\">*<\/span>:<\/label>\r\n\t\t\t\t\t\t\t<div class=\"col-md-6\">\r\n\t\t\t\t\t\t\t\t{{ form.email }}\r\n\t\t\t\t\t\t\t<\/div>\r\n\t\t\t\t\t\t<\/div>\r\n\t\t\t\t\t\t<div class=\"form-group clearfix\">\r\n\t\t\t\t\t\t\t<label for=\"{{ form.password.id_for_label }}\" class=\"col-md-4 control-label text-right\">Password<span class=\"text-red\">*<\/span>:<\/label>\r\n\t\t\t\t\t\t\t<div class=\"col-md-6\">\r\n\t\t\t\t\t\t\t\t{{ form.password }}\r\n\t\t\t\t\t\t\t<\/div>\r\n\t\t\t\t\t\t<\/div>\r\n\t\t\t\t\t\t<div class=\"form-group clearfix\">\r\n\t\t\t\t\t\t\t<label for=\"{{ form.password_repeat.id_for_label }}\" class=\"col-md-4 control-label text-right\">Confirm password:<\/label>\r\n\t\t\t\t\t\t\t<div class=\"col-md-6\">\r\n\t\t\t\t\t\t\t\t{{ form.password_repeat }}\r\n\t\t\t\t\t\t\t<\/div>\r\n\t\t\t\t\t\t<\/div>\r\n\t\t\t\t\t\t<div class=\"form-group clearfix\">\r\n\t\t\t\t\t\t\t<label for=\"{{ form.first_name.id_for_label }}\" class=\"col-md-4 control-label text-right\">First Name:<\/label>\r\n\t\t\t\t\t\t\t<div class=\"col-md-6\">\r\n\t\t\t\t\t\t\t\t{{ form.first_name }}\r\n\t\t\t\t\t\t\t<\/div>\r\n\t\t\t\t\t\t<\/div>\r\n\t\t\t\t\t\t<div class=\"form-group clearfix\">\r\n\t\t\t\t\t\t\t<label for=\"{{ form.last_name.id_for_label }}\" class=\"col-md-4 control-label text-right\">Last Name:<\/label>\r\n\t\t\t\t\t\t\t<div class=\"col-md-6\">\r\n\t\t\t\t\t\t\t\t{{ form.last_name }}\r\n\t\t\t\t\t\t\t<\/div>\r\n\t\t\t\t\t\t<\/div>\r\n\t\t\t\t\t\t<div class=\"form-group clearfix\">\r\n\t\t\t\t\t\t\t<label for=\"{{ form.phone_number.id_for_label }}\" class=\"col-md-4 control-label text-right\">Phone Number:<\/label>\r\n\t\t\t\t\t\t\t<div class=\"col-md-6\">\r\n\t\t\t\t\t\t\t\t{{ form.phone_number }}\r\n\t\t\t\t\t\t\t<\/div>\r\n\t\t\t\t\t\t<\/div>\r\n\t\t\t\t\t\t<div class=\"col-md-6 col-md-offset-4\">\r\n\t\t\t\t\t\t\t<input type=\"submit\" value=\"Register\" class=\"btn btn-success\">\r\n\t\t\t\t\t\t<\/div>\r\n\t\t\t\t\t<\/div>\r\n\t\t\t\t<\/div>\r\n\t\t\t<\/div>\r\n\t\t<\/form>\r\n\t<\/div>\r\n{% endblock %}\r\n[\/cc]\r\n\r\nCreate a new file <strong>forms.py<\/strong> and place it under <strong>mymodule\/<\/strong> directory. In it, include the following field definitions:\r\n[cc lang=\"python\"]\r\nfrom django import forms\r\n\r\nclass RegisterForm(forms.Form):\r\n\tusername = forms.CharField(widget=forms.TextInput(attrs={'class':'form-control'}))\r\n\temail = forms.EmailField(widget=forms.EmailInput(attrs={'class':'form-control'}))\r\n\tpassword = forms.CharField(widget=forms.PasswordInput(attrs={'class':'form-control'}))\r\n\tpassword_repeat = forms.CharField(widget=forms.PasswordInput(attrs={'class':'form-control'}))\r\n\tfirst_name = forms.CharField(widget=forms.TextInput(attrs={'class':'form-control'}))\r\n\tlast_name = forms.CharField(widget=forms.TextInput(attrs={'class':'form-control'}))\r\n\tphone_number = forms.CharField(widget=forms.NumberInput(attrs={'class':'form-control'}), required=False)\r\n[\/cc]\r\n\r\nCreate the controller that will handle both GET and POST methods to the registration form. The code bellow goes to your <strong>mymodule\/views.py<\/strong>:\r\n[cc lang=\"python\"]\r\nfrom django.contrib.auth.models import User\r\nfrom django.shortcuts import render\r\nfrom django.http import HttpResponseRedirect\r\nfrom .forms import RegisterForm\r\n\r\ndef user_register(request):\r\n    # if this is a POST request we need to process the form data\r\n    template = 'mymodule\/register.html'\r\n    \r\n    if request.method == 'POST':\r\n        # create a form instance and populate it with data from the request:\r\n        form = RegisterForm(request.POST)\r\n        # check whether it's valid:\r\n        if form.is_valid():\r\n            if User.objects.filter(username=form.cleaned_data['username']).exists():\r\n                return render(request, template, {\r\n                    'form': form, \r\n                    'error_message': 'Username already exists.'\r\n                })\r\n            elif User.objects.filter(email=form.cleaned_data['email']).exists():\r\n                return render(request, template, {\r\n                    'form': form, \r\n                    'error_message': 'Email already exists.'\r\n                })\r\n            elif form.cleaned_data['password'] != form.cleaned_data['password_repeat']:\r\n                return render(request, template, {\r\n                    'form': form, \r\n                    'error_message': 'Passwords do not match.'\r\n                })\r\n            else:\r\n                # Create the user: \r\n                user = User.objects.create_user(\r\n                    form.cleaned_data['username'], \r\n                    form.cleaned_data['email'], \r\n                    form.cleaned_data['password']\r\n                )\r\n                user.first_name = form.cleaned_data['first_name']\r\n                user.last_name = form.cleaned_data['last_name']\r\n                user.phone_number = form.cleaned_data['phone_number']\r\n                user.save()\r\n                \r\n                # Login the user\r\n                login(request, user)\r\n                \r\n                # redirect to accounts page:\r\n                return HttpResponseRedirect('\/mymodule\/account')\r\n\r\n   # No post data availabe, let's just show the page.\r\n    else:\r\n        form = RegisterForm()\r\n\r\n    return render(request, template, {'form': form})\r\n[\/cc]\r\n\r\nFinally, register the view in our <strong>mymodule\/urls.py<\/strong>:\r\n[cc lang=\"python\"]\r\nfrom django.conf.urls import url\r\nfrom . import views\r\n\r\napp_name = 'mymodule' # So we can use it like: {% url 'mymodule:user_register' %} on our template. \r\nurlpatterns = [\r\n\turl(r'^register\/$', views.user_register, name='user_register')\r\n]\r\n[\/cc]","post_title":"Creating a Registration Page in Django","post_excerpt":"A simple bootstrap registration page using Django v.1.10. ","post_status":"publish","comment_status":"open","ping_status":"open","post_password":"","post_name":"creating-a-registration-page-in-django","to_ping":"","pinged":"","post_modified":"2017-04-22 23:00:57","post_modified_gmt":"2017-04-22 15:00:57","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=1803","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":1158,"post_author":"1","post_date":"2015-08-17 06:19:22","post_date_gmt":"2015-08-17 06:19:22","post_content":"I was recently working on a freelance project and one of the tasks is to replace all the textareas in the front-end to the default WYSIWYG editor of WordPress. They also wanted to use a limited number of buttons for both Visual and Text tab. After some research, I was able to come up with my own customized editor that works perfectly in both front-end and back-end:\r\n\r\n[cc lang = \"php\"]\r\n<?php \t\t\r\n$content = 'The content to be loaded';\r\n$editor_id = 'my_editor_id';\r\n$settings =   array(\r\n\t'wpautop' => true, \/\/ enable auto paragraph?\r\n\t'media_buttons' => false, \/\/ show media buttons?\r\n\t'textarea_name' => $editor_id, \/\/ id of the target textarea\r\n\t'textarea_rows' => get_option('default_post_edit_rows', 10), \/\/ This is equivalent to rows=\"\" in HTML\r\n\t'tabindex' => '',\r\n\t'editor_css' => '', \/\/  additional styles for Visual and Text editor, \r\n\t'editor_class' => '', \/\/ sdditional classes to be added to the editor\r\n\t'teeny' => true, \/\/ show minimal editor\r\n\t'dfw' => false, \/\/ replace the default fullscreen with DFW\r\n\t'tinymce' => array(\r\n\t\t\/\/ Items for the Visual Tab\r\n\t\t'toolbar1'=> 'bold,italic,underline,bullist,numlist,link,unlink,forecolor,undo,redo,',\r\n\t),\r\n\t'quicktags' => array(\r\n\t\t\/\/ Items for the Text Tab\r\n\t\t'buttons' => 'strong,em,underline,ul,ol,li,link,code'\r\n\t)\r\n);\r\nwp_editor( $content, $editor_id, $settings );\t\t\t\t\t\t\r\n?>\r\n[\/cc]\r\n\r\nFor the complete list of quicktags and tinymce buttons, please refer to the following links:\r\n<a href=\"https:\/\/codex.wordpress.org\/Quicktags_API\">https:\/\/codex.wordpress.org\/Quicktags_API<\/a>\r\n<a href=\"http:\/\/www.tinymce.com\/wiki.php\/TinyMCE3x:Buttons\/controls\">http:\/\/www.tinymce.com\/wiki.php\/TinyMCE3x:Buttons\/controls<\/a>\r\n\r\nFunction based: \r\n\r\n[cc lang = \"php\"]\r\nfunction cvf_content_editor( $textarea_id, $default_content ) {\r\n\t\r\n\t$content = 'The content to be loaded';\r\n\t$editor_id = 'my_editor_id';\r\n\t$settings =   array(\r\n\t\t'wpautop' => true, \/\/ enable auto paragraph?\r\n\t\t'media_buttons' => false, \/\/ show media buttons?\r\n\t\t'textarea_name' => $editor_id, \/\/ id of the target textarea\r\n\t\t'textarea_rows' => get_option('default_post_edit_rows', 10), \/\/ This is equivalent to rows=\"\" in HTML\r\n\t\t'tabindex' => '',\r\n\t\t'editor_css' => '', \/\/  additional styles for Visual and Text editor, \r\n\t\t'editor_class' => '', \/\/ sdditional classes to be added to the editor\r\n\t\t'teeny' => true, \/\/ show minimal editor\r\n\t\t'dfw' => false, \/\/ replace the default fullscreen with DFW\r\n\t\t'tinymce' => array(\r\n\t\t\t\/\/ Items for the Visual Tab\r\n\t\t\t'toolbar1'=> 'bold,italic,underline,bullist,numlist,link,unlink,forecolor,undo,redo,',\r\n\t\t),\r\n\t\t'quicktags' => array(\r\n\t\t\t\/\/ Items for the Text Tab\r\n\t\t\t'buttons' => 'strong,em,underline,ul,ol,li,link,code'\r\n\t\t)\r\n\t);\r\n\t\r\n\twp_editor( $content, $editor_id, $settings );\r\n\t\r\n}\r\n[\/cc]","post_title":"Customizing WP Editor in WordPress","post_excerpt":"Customizing Wordpress's default wp_editor buttons and settings.","post_status":"publish","comment_status":"open","ping_status":"open","post_password":"","post_name":"customizing-wp-editor-in-wordpress","to_ping":"","pinged":"","post_modified":"2015-08-24 03:13:38","post_modified_gmt":"2015-08-24 03:13:38","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=1158","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"2","filter":"raw"},{"ID":1660,"post_author":"1","post_date":"2016-11-09 11:05:20","post_date_gmt":"2016-11-09 03:05:20","post_content":"Follow the steps bellow to get this project running on Heroku for your personal testing.\r\n<h3>Required softwares:<\/h3>\r\n<ul>\r\n \t<li><strong>Meteor<\/strong> - Download it from here: <a href=\"https:\/\/www.meteor.com\/install\">https:\/\/www.meteor.com\/install<\/a><\/li>\r\n \t<li><strong>Heroku<\/strong> - Download it from here: <a href=\"https:\/\/toolbelt.heroku.com\/\">https:\/\/toolbelt.heroku.com<\/a><\/li>\r\n \t<li><strong>Git<\/strong> - Download it from here: <a href=\"https:\/\/git-scm.com\/downloads\">https:\/\/git-scm.com\/downloads<\/a><\/li>\r\n<\/ul>\r\n<ol>\r\n \t<li>Upload your project to Github.<\/li>\r\n \t<li>Clone github project to your computer.\r\n<ul>\r\n \t<li><strong>$ git clone https:\/\/github.com\/ACCOUNT_USERNAME\/NAME_OF_PROJECT.git<\/strong><\/li>\r\n<\/ul>\r\n<\/li>\r\n \t<li>Navigate to the cloned folder.\r\n<ul>\r\n \t<li>In windows: <strong>$ cd meteor-app-todo-list<\/strong><\/li>\r\n<\/ul>\r\n<\/li>\r\n \t<li><strong>$ heroko login<\/strong>\r\n<ul>\r\n \t<li>Fill up credentials<\/li>\r\n \t<li>If you do not have an account yet, you can register for one at http:\/heroku.com<\/li>\r\n<\/ul>\r\n<\/li>\r\n \t<li><strong>$ heroku apps:create NAME_OF_PROJECT<\/strong>\r\n<ul>\r\n \t<li>Creates the project depending on the name provided.<\/li>\r\n<\/ul>\r\n<\/li>\r\n \t<li>Set Buildpack for Heroku Instance\r\n<ul>\r\n \t<li><strong>$ heroku buildpacks:set https:\/\/github.com\/AdmitHub\/meteor-buildpack-horse.git<\/strong>\r\n<ul>\r\n \t<li>Meteor needs a buildpack in order to be executed by the Heroku dyno manager. As Heroku\u2019s cedar stack has no default language\/framework support, the buildpack determines the framework for us. Unfortunately, Heroku does not have official Meteor support. To get around this, we will use a third-party custom buildpack.<\/li>\r\n<\/ul>\r\n<\/li>\r\n<\/ul>\r\n<\/li>\r\n \t<li>Create a new mongodb instance\r\n<ul>\r\n \t<li><strong>$ heroku addons:create mongolab:sandbox<\/strong><\/li>\r\n<\/ul>\r\n<\/li>\r\n \t<li>Add Environment Variables in heroku:\r\n<ul>\r\n \t<li><strong>$ heroku config:add MONGO_URL=&lt;MONGODB_URI value&gt;<\/strong>\r\n<ul>\r\n \t<li>You can get MONGO_URL by running: <strong>$ heroku config<\/strong><\/li>\r\n<\/ul>\r\n<\/li>\r\n \t<li><strong>$ heroku config:add ROOT_URL=https:\/\/NAME_OF_PROJECT.herokuapp.com<\/strong><\/li>\r\n<\/ul>\r\n<\/li>\r\n \t<li>Check if we can push to heroku:\r\n<ul>\r\n \t<li><strong>$ git remote -v<\/strong>\r\n<ul>\r\n \t<li>Should give you a list of git URLS (github and heroku github).<\/li>\r\n \t<li>if heroku link is not in the list, you can manually add it like this:\r\n<ul>\r\n \t<li><strong>$ git remote add heroku https:\/\/git.heroku.com\/NAME_OF_PROJECT.git<\/strong><\/li>\r\n<\/ul>\r\n<\/li>\r\n<\/ul>\r\n<\/li>\r\n<\/ul>\r\n<\/li>\r\n \t<li>Deploy our code:\r\n<ul>\r\n \t<li><strong>$ git push heroku master<\/strong><\/li>\r\n<\/ul>\r\n<\/li>\r\n<\/ol>\r\n<h3><a id=\"user-content-optional\" class=\"anchor\" href=\"https:\/\/github.com\/carlo-fontanos\/meteor-app-todo-list#optional\"><\/a>Optional<\/h3>\r\n<ul>\r\n \t<li>Deploy app to your mobile device using Heroku project URL as server:\r\n<strong>$ meteor run android-device --mobile-server https:\/\/YOU_HEROKU_APP_SLUG.herokuapp.com\/<\/strong><\/li>\r\n<\/ul>","post_title":"Deploying Meteor App to Heroku","post_excerpt":"How to get your meteor app up and running on Heroku testing environment.","post_status":"publish","comment_status":"open","ping_status":"open","post_password":"","post_name":"deploying-meteor-app-to-heroku","to_ping":"","pinged":"","post_modified":"2016-11-09 11:18:09","post_modified_gmt":"2016-11-09 03:18:09","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=1660","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":1093,"post_author":"1","post_date":"2015-02-17 03:53:50","post_date_gmt":"2015-02-17 03:53:50","post_content":"Sometimes WordPress Update Notifications are annoying, they usually show up in red circles or a notice message on the header part of your Admin Panel. They usually do not disappear not until your click the update button, annoying? - Let's fix that.\r\n\r\nThe use of the bellow codes is not advisable as it prevents maintenance on plugins, themes, and core codes of WordPress therefore making your website vulnerable to hackers.\r\n\r\n<h3>Disable Plugin Notifications:<\/h3>\r\n[cc lang = \"php\"]\r\nremove_action('load-update-core.php','wp_update_plugins');\r\nadd_filter('pre_site_transient_update_plugins','__return_null');\r\n[\/cc]\r\n\r\n&nbsp;\r\n\r\n<h3>Disable all WordPress Notifications(Core, Themes and Plugins):<\/h3>\r\n[cc lang = \"php\"]\r\nfunction cvf_remove_wp_core_updates(){\r\n\tglobal $wp_version;\r\n\treturn(object) array('last_checked' => time(),'version_checked' => $wp_version);\r\n}\r\n\r\n\/\/ Core Notifications\r\nadd_filter('pre_site_transient_update_core','cvf_remove_wp_core_updates');\r\n\/\/ Plugin Notifications\r\nadd_filter('pre_site_transient_update_plugins','cvf_remove_wp_core_updates');\r\n\/\/ Theme Notifications\r\nadd_filter('pre_site_transient_update_themes','cvf_remove_wp_core_updates');\r\n[\/cc]\r\n\r\nTo completely disable all types of automatic updates, core or otherwise, add the following to your wp-config.php file:\r\n\r\n<code>define( 'AUTOMATIC_UPDATER_DISABLED', true );<\/code>","post_title":"Disable Update Notifications in WordPress Admin","post_excerpt":"Stop annoying updates and notifications in your WordPress Admin","post_status":"publish","comment_status":"open","ping_status":"open","post_password":"","post_name":"disable-update-notifications-in-wordpress-admin","to_ping":"","pinged":"","post_modified":"2015-03-04 06:03:46","post_modified_gmt":"2015-03-04 06:03:46","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=1093","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"1","filter":"raw"},{"ID":716,"post_author":"1","post_date":"2014-09-13 12:57:05","post_date_gmt":"2014-09-13 12:57:05","post_content":"<a href=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2014\/09\/ajaxified-wordpress-admin-using-oop.jpg\"><img src=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2014\/09\/ajaxified-wordpress-admin-using-oop.jpg\" alt=\"ajaxified-wordpress-admin-using-oop\" width=\"250\" class=\"alignnone size-full wp-image-720\" \/><\/a>\r\n\r\n[cc lang = \"php\"]\r\nclass Td_Admin {\r\n    \r\n    public function __construct() {\r\n\t\tadd_action('admin_menu', array($this, 'cvf_td_register_site_options') );\r\n\t\tadd_action('wp_ajax_cvf_td_update_trade_settings', array($this, 'cvf_td_update_trade_settings') );\r\n\t\tadd_action('admin_enqueue_scripts', array($this, 'cvf_td_load_admin_scripts') );\r\n    }\r\n    \r\n    public static function cvf_td_load_admin_scripts() {\r\n    \r\n        wp_enqueue_style( 'admin-css', get_template_directory_uri() . '\/css\/admin.css', false, \"1.1.1\", false);\r\n    }\r\n\r\n    \r\n    public static function cvf_td_register_site_options() {\r\n        add_submenu_page( 'edit.php?post_type=page', 'Settings', 'Settings', 'administrator', 'trade-settings', 'Td_Admin::cvf_td_trade_settings' );\r\n    }\r\n    \r\n    public static function cvf_td_trade_settings(){\r\n        ?>\r\n        <h2>Wp Trade Settings<\/h2>\r\n        <span class = \"update-trade-settings-response td-response\"><\/span>\r\n        <table class=\"form-table\">\r\n            <tbody>\r\n                <tr>\r\n                    <th><label for=\"limit_repost\">Items can be reposted after:<\/label><\/th>\r\n                    <td><input type=\"text\" name=\"limit_repost\" id=\"limit_repost\" value=\"<?php echo get_option('td_limit_repost'); ?>\" placeholder = \"\" class=\"regular-text\"> <span class=\"description\">Specify in hours, Default is: 24<\/span><\/td>\r\n                <\/tr>\r\n                <tr>\r\n                    <th><label for=\"max_image_upload\">Maximum Image Upload<\/label><\/th>\r\n                    <td><input type=\"text\" name=\"max_image_upload\" id=\"first_name\" value=\"<?php echo get_option('td_max_image_upload'); ?>\" class=\"regular-text\"><\/td>\r\n                <\/tr>\r\n                <tr>\r\n                    <th><label for=\"max_image_size\">Maximum Image Size<\/label><\/th>\r\n                    <td><input type=\"text\" name=\"max_image_size\" id=\"max_image_size\" value=\"<?php echo get_option('td_max_image_size'); ?>\" class=\"regular-text\"><span class=\"description\">Specify in kilobytes, Default is: 500<\/span><\/td>\r\n                <\/tr>\r\n                <tr>\r\n                    <th><label for=\"currency_symbol\">Currency Symbol<\/label><\/th>\r\n                    <td>\r\n                        <select name=\"currency_symbol\" class = \"currency_symbol\">\r\n                            <option value = \"dollar\">$ Dollar<\/option>\r\n                            <option value = \"euro\">&euro; Euro<\/option>\r\n                            <option value = \"pound\">&pound; Pound<\/option>\r\n                            <option value = \"yen\">&yen; Yen<\/option>\r\n                            <option value = \"peso\">&#8369; Peso<\/option>\r\n                        <\/select>\r\n                    <\/td>\r\n                <\/tr>\r\n\t\t\t\t<tr>\r\n                     <th><label for=\"currency_symbol\">Editor<\/label><\/th>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<?php\r\n\t\t\t\t\t\t$content = '';\r\n\t\t\t\t\t\t$editor_id = 'mycustomeditor';\r\n\t\t\t\t\t\twp_editor( $content, $editor_id );\r\n\t\t\t\t\t\t?>\r\n\t\t\t\t\t<\/td>\r\n                <\/tr>\r\n            <\/tbody>\r\n        <\/table>\r\n        \r\n        <p class=\"submit\"><input type=\"submit\" name=\"submit\" id=\"submit\" class=\"button button-primary update_wp_trade_settings\" value=\"Update Settings\"><\/p>\r\n                \r\n        <script type=\"text\/javascript\">\r\n        jQuery(document).ready(function($) {\r\n            \r\n            var current_currency = '<?php echo get_option('td_currency_symbol'); ?>';\r\n            if(current_currency){\r\n                $(\".currency_symbol\").val(current_currency);\r\n            }\r\n            \r\n            $('input').on('focus', function(){\r\n                $('input').removeClass('border-red');\r\n            });\r\n            \r\n            $(\"body\").on(\"click\", \".update_wp_trade_settings\", function(e) {                        \r\n                e.preventDefault(); \r\n                \r\n                if(!$(\"input[name=limit_repost]\").val()) {\r\n                    $(\"input[name=limit_repost]\").addClass('border-red');\r\n                } else if(!$(\"input[name=max_image_upload]\").val()) {\r\n                    $(\"input[name=max_image_upload]\").addClass('border-red');\r\n                } else if(!$(\"input[name=max_image_size]\").val()) {\r\n                    $(\"input[name=max_image_size]\").addClass('border-red');\r\n                } else {\r\n                \r\n                    $(\".update-trade-settings-response\").html('<p><img src = \"<?php bloginfo('template_url'); ?>\/images\/loading.gif\" class = \"loader\" \/><\/p>'); \r\n                    var data = {\r\n                        'action': 'cvf_td_update_trade_settings',\r\n                        'cvf_action': 'update_trade_settings',\r\n                        'limit_repost': $(\"input[name=limit_repost]\").val(),\r\n                        'max_image_upload': $(\"input[name=max_image_upload]\").val(),\r\n                        'max_image_size': $(\"input[name=max_image_size]\").val(),\r\n                        'currency_symbol': $(\".currency_symbol\").val(),\r\n                        'text_area_text': tinymce.editors.mycustomeditor.getContent()\r\n                    };\r\n                    \r\n                    $.post(ajaxurl, data, function(response) {\r\n                        element = $(\".update-trade-settings-response\");\r\n                        $('html, body').animate({scrollTop: $(element).offset().top-100}, 150);\r\n                        $(element).html(response);\r\n                    });\r\n                }\r\n            });\r\n        });\r\n        <\/script>\r\n        <?php\r\n        \r\n    }\r\n    \r\n    public static function cvf_td_update_trade_settings(){\r\n        \r\n        $errors = array();\r\n        $currency_list = array('dollar', 'euro', 'pound', 'yen', 'peso');\r\n        \r\n        if(isset($_POST['cvf_action']) && $_POST['cvf_action'] == 'update_trade_settings'){\r\n            \r\n            foreach($_POST as $k => $value){\r\n                $_POST[$k] = sanitize_text_field($value);\r\n            }\r\n            \r\n            if (empty($errors) === true) {\r\n            \r\n                if(!is_numeric($_POST['limit_repost'])){\r\n                    $errors[] = 'Only numeric values are allowed in \"Items can be reposted after\"';\r\n                } elseif ($_POST['limit_repost'] < 0) {\r\n                    $errors[] = 'Repost limit cannot be negative';\r\n                }\r\n                \r\n                if(!is_numeric($_POST['max_image_upload'])){\r\n                    $errors[] = 'Only numeric values are allowed in \"Maximum Image Upload\"';\r\n                } elseif ($_POST['max_image_upload'] < 0) {\r\n                    $errors[] = 'Maximum Image Upload cannot be negative';\r\n                }\r\n                \r\n                if(!is_numeric($_POST['max_image_size'])){\r\n                    $errors[] = 'Only numeric values are allowed in \"Maximum Image Size\"';\r\n                } elseif ($_POST['max_image_size'] < 10) {\r\n                    $errors[] = '\"Maximum Image Upload\" must be greater than 10kb';\r\n                }\r\n                \r\n                if(!in_array($_POST['currency_symbol'], $currency_list)){\r\n                    $errors[] = 'Invalid Currency Symbol.';\r\n                }\r\n            }\r\n            \r\n            if(empty($_POST) === false && empty($errors) === true) {\r\n                \r\n                update_option('td_limit_repost', $_POST['limit_repost']);\r\n                update_option('td_max_image_upload', $_POST['max_image_upload']);\r\n                update_option('td_max_image_size', $_POST['max_image_size']);\r\n                update_option('td_currency_symbol', $_POST['currency_symbol']);\r\n                update_option('td_text_area_text', $_POST['text_area_text']);\r\n                \r\n                echo '\r\n                <div id=\"message\" class=\"updated\">\r\n                    <p><strong>Settings updated.<\/strong><\/p>\r\n                <\/div>';\r\n                \r\n            } elseif (empty($errors) === false) {\r\n                echo '\r\n                <div id=\"message\" class=\"error\">\r\n                    <ul>';\r\n                    foreach ($errors as $error) {\r\n                        echo '<li><strong>' . $error . '<\/strong><\/li>'; \r\n                    }\r\n                echo '<\/ul>\r\n                <\/div>';\r\n                \r\n            }\r\n        }\r\n        \r\n        exit();\r\n    }\r\n    \r\n} new Td_Admin();\r\n\r\n[\/cc]","post_title":"Example of an Ajaxified WordPress Admin using OOP Style","post_excerpt":"A Good demonstration of Ajaxified WordPress Admin along with Object Oriented Approach","post_status":"publish","comment_status":"open","ping_status":"closed","post_password":"","post_name":"example-of-an-ajaxified-wordpress-admin-using-oop-style","to_ping":"","pinged":"","post_modified":"2016-08-24 10:59:43","post_modified_gmt":"2016-08-24 02:59:43","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=716","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":82,"post_author":"1","post_date":"2014-04-26 12:44:42","post_date_gmt":"2014-04-26 12:44:42","post_content":"For example you want to export a report containing posts under a specific category 'uncategorized' while allowing you to filter the desired date range. Here is how we do it:\r\n\r\n<img src=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2014\/04\/download-reports.png\" alt=\"download-reports\" \/>\r\n\r\nFirst we need to enqueue the date picker JS file so that we can use it to our form.\r\n\r\n[cc lang = \"php\"]\r\nadd_action( 'init', 'enqueue_jquery_scripts' );\r\nfunction enqueue_jquery_scripts() {\r\n\r\n\twp_enqueue_script('jquery-ui-datepicker');\r\n\twp_enqueue_style('jquery-ui-css', 'http:\/\/ajax.googleapis.com\/ajax\/libs\/jqueryui\/1.8.2\/themes\/smoothness\/jquery-ui.css');\r\n}\r\n[\/cc]\r\n\r\nThen on our custom page we include a custom script to generate the class that we will be using for our date picker input field.\r\n\r\n[cc lang = \"javascript\"]\r\n<script type=\"text\/javascript\">\r\n\tjQuery(document).ready(function($) {\r\n\t\t$('.custom_date').datepicker({\r\n\t\tdateFormat : 'yy-mm-dd'\r\n\t\t});\r\n\t});\r\n<\/script>\r\n[\/cc]\r\n\r\nCreate the form:\r\n\r\n[cc lang = \"html\"]\r\n<form method = \"post\">\r\n\r\n\t<input type=\"text\" class=\"custom_date\" name=\"date_from\" placeholder = \"Date From\"\/>\r\n\t<input type=\"text\" class=\"custom_date\" name=\"date_to\" placeholder = \"Date To\"\/>\t\r\n\r\n\t<input type=\"submit\" name=\"btnDownload\" id=\"submit\" class=\"button-primary\" value=\"Download\">\r\n\r\n<\/form>\r\n[\/cc]\r\n\r\nFinally we create the method that will be handling the post submission\r\n\r\n[cc lang = \"php\"]\r\nif ( $_POST['btnDownload'] ) { \r\n\r\n\tglobal $wpdb;\r\n\r\n\t\/\/ Grab any post values you sent with your submit function\r\n\t$DownloadFrom = $_POST['date_from'];\r\n\t$DownloadTo = $_POST['date_to'];\r\n\r\n\t$sql_where = \"\";\r\n\tif ( $DownloadFrom != \"\" &amp;&amp; $DownloadTo != \"\" ) {\r\n\t\t$sql_where = $wpdb->prepare( \" AND datetime BETWEEN %s AND %s \", $DownloadFrom, $DownloadTo );\r\n\r\n\t}\r\n\r\n\t\/\/ Build your query\r\n\t$MyQuery = $wpdb->get_results($wpdb->prepare(\"\r\n\tSELECT p.post_title, p.post_content, p.post_date, p.guid\r\n\tFROM wp_posts p\r\n\tLEFT JOIN wp_term_relationships tr ON tr.object_id = p.id\r\n\tWHERE post_status = 'publish'\r\n\tAND tr.term_taxonomy_id = 1\r\n\tAND p.id != 0\".$sql_where, array() ) );\r\n\r\n\t\/\/ Process report request\r\n\tif ( !$MyQuery || empty($MyQuery) ) {\r\n\r\n\t\tdie(\"Invalid parameters!\");\r\n\t\theader (\"Refresh: 1; url=\" . home_url() . \"\/yourwebsite\/yourformpage\" );\r\n\r\n\t} else {\r\n\t\t\/\/ Prepare our csv download\r\n\r\n\t\t\/\/ Set header row values\r\n\t\t$csv_fields=array();\r\n\t\t$csv_fields[] = 'Title';\r\n\t\t$csv_fields[] = 'Description';\r\n\t\t$csv_fields[] = 'Date Posted';\r\n\t\t$csv_fields[] = 'Link';\r\n\r\n\t\t$output_filename = 'MyPosts_' . $DownloadFrom .'-'. $DownloadTo  . '.csv';\r\n\t\t$output_handle = @fopen( 'php:\/\/output', 'w' );\r\n\r\n\t\theader( 'Cache-Control: must-revalidate, post-check=0, pre-check=0' );\r\n\t\theader( 'Content-Description: File Transfer' );\r\n\t\theader( 'Content-type: text\/csv' );\r\n\t\theader( 'Content-Disposition: attachment; filename=' . $output_filename );\r\n\t\theader( 'Expires: 0' );\r\n\t\theader( 'Pragma: public' );\t\r\n\r\n\t\t\/\/ Insert header row\r\n\t\tfputcsv( $output_handle, $csv_fields );\r\n\r\n\t\t\/\/ Parse results to csv format\r\n\t\tforeach ($MyQuery as $Result) {\r\n\t\t\t$leadArray = (array) $Result; \/\/ Cast the Object to an array\r\n\t\t\t\/\/ Add row to file\r\n\t\t\tfputcsv( $output_handle, $leadArray );\r\n\t\t\t}\r\n\r\n\t\t\/\/ Close output file stream\r\n\t\tfclose( $output_handle ); \r\n\r\n\t\tdie();\r\n\t}\r\n}\r\n[\/cc]\r\n\r\nCheckout my other WordPress Tutorials by following this <a href = \"http:\/\/carlofontanos.com\/wordpress-list\/\">LINK<\/a> ","post_title":"Exporting Reports to CSV with WordPress","post_excerpt":"Export your Reports using queries and gain full control over the output of the report.","post_status":"publish","comment_status":"open","ping_status":"open","post_password":"","post_name":"export-reports-to-csv-using-worpress","to_ping":"","pinged":"","post_modified":"2015-02-09 07:42:07","post_modified_gmt":"2015-02-09 07:42:07","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=82","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":1117,"post_author":"1","post_date":"2015-04-23 03:28:12","post_date_gmt":"2015-04-23 03:28:12","post_content":"Simply cast an Associative array:\r\n\r\n[cc lang = \"php\"]\r\n$obj = (object) array('animal' => 'dog', 'name' => 'simon');\r\n\r\n\/\/ Then you can access values as objects:\r\necho $obj->animal; \/\/ Outputs dog\r\necho $obj->name; \/\/ Outputs simon\r\n\r\n[\/cc]\r\n\r\nNo need to create a class or Function to accomplish it.","post_title":"Fastest way to Convert Associative Arrays to Objects","post_excerpt":"No need to create a class or Function to accomplish it.","post_status":"publish","comment_status":"open","ping_status":"open","post_password":"","post_name":"fastest-way-to-convert-associative-arrays-to-objects","to_ping":"","pinged":"","post_modified":"2015-04-23 05:28:09","post_modified_gmt":"2015-04-23 05:28:09","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=1117","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":1026,"post_author":"1","post_date":"2015-01-07 08:38:31","post_date_gmt":"2015-01-07 08:38:31","post_content":"<a href=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2015\/01\/featured-image-shortcode.jpg\"><img src=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2015\/01\/featured-image-shortcode.jpg\" alt=\"featured-image-shortcode\" width=\"600\" height=\"350\" class=\"alignnone size-full wp-image-1027\" \/><\/a>\r\n\r\n<span id=\"page-has-downlodable-file\" file=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2015\/01\/featured-image-shortcode.zip\"><\/span>\r\n\r\n<p><strong>Usage:<\/strong><\/p>\r\n<code>[featured-image size = \"large\" class = \"featured-image\" title = \"something\" alt = \"image\"]<\/code>\r\n\r\n<strong>Available attributes:<\/strong>\r\n1. class\r\n2. title\r\n3. alt\r\n\r\n<strong>Available sizes: <\/strong>\r\n1. thumbnail\r\n2. medium\r\n3. large\r\n4. full\r\n\r\nGive away code:\r\n[cc lang = \"php\"]\r\nadd_shortcode('featured-image', array('Featured_image_shortcode', 'cvf_post_thumbnail_shortcode') );\r\n\r\nclass Featured_image_shortcode {\r\n\r\n\tpublic static function cvf_post_thumbnail_shortcode($atts, $content = '') {\r\n\t\t\r\n\t\t$img_attr = '';\r\n\t\t$atts['class'] = '';\r\n\t\t\r\n\t\t$img_attr = array(\r\n\t\t\t'class'\t=> $atts['class'],\r\n\t\t\t'alt'\t=> trim(strip_tags($atts['alt'])),\r\n\t\t\t'title'\t=> trim(strip_tags($atts['title']))\r\n\t\t);\r\n\t\t\r\n\t\tif(!$atts['size']){\r\n\t\t\t$atts['size'] = 'thumbnail';\r\n\t\t}\r\n\t\t\r\n\t\treturn get_the_post_thumbnail(null, $atts['size'], $img_attr);\r\n\t}\r\n}\r\n[\/cc]","post_title":"Featured Image Shortcode [Plugin]","post_excerpt":"Creates a shortcode for your featured image to easily embed it within your WP Editor.","post_status":"publish","comment_status":"open","ping_status":"open","post_password":"","post_name":"featured-image-shortcode-plugin","to_ping":"","pinged":"","post_modified":"2017-09-19 15:14:07","post_modified_gmt":"2017-09-19 07:14:07","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=1026","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":354,"post_author":"1","post_date":"2014-06-21 16:57:02","post_date_gmt":"2014-06-21 16:57:02","post_content":"Moving files from FTP to localhost usually cause this problem to happen.\r\n\r\nTo fix this problem, simply add the following block of code into your .htaccess file. If you do not have an .htaccess file, create it. \r\n\r\n[cc lang = \"php\"]\r\n<IfModule mod_rewrite.c>\r\nRewriteEngine On\r\nRewriteBase \/project_name\/\r\nRewriteRule ^index\\.php$ - [L]\r\nRewriteCond %{REQUEST_FILENAME} !-f\r\nRewriteCond %{REQUEST_FILENAME} !-d\r\nRewriteRule . \/project_name\/index.php [L]\r\n<\/IfModule>\r\n[\/cc]\r\n\r\nMake sure to change 'project_name' with the folder name of your project.","post_title":"Fix 404 Page Not Found in all Pages in Wordpress","post_excerpt":"How to Fix 404 Page Not Found in all Pages Except Home Page","post_status":"publish","comment_status":"open","ping_status":"closed","post_password":"","post_name":"how-to-fix-404-page-not-found-in-all-pages-except-home-page-in-wordpress","to_ping":"","pinged":"","post_modified":"2015-02-09 07:24:55","post_modified_gmt":"2015-02-09 07:24:55","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=354","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":1062,"post_author":"1","post_date":"2015-02-04 06:47:35","post_date_gmt":"2015-02-04 06:47:35","post_content":"<a href=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2015\/02\/flat-surface-shader-image-sample.png\"><img src=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2015\/02\/flat-surface-shader-image-sample.png\" alt=\"flat-surface-shader-image-sample\" width=\"50%\" class=\"alignnone size-full wp-image-1063\" \/><\/a>\r\n\r\n<a href = \"http:\/\/carlofontanos.com\/demo\/flat-surface-shader\/\" class = \"btn btn-success\" target = \"_blank\">Demo<\/a> <span id=\"page-has-downlodable-file\" file=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2017\/09\/flat-surface-shader-demo-master.zip\"><\/span>\r\n\r\nThe Flat Surface Shader is a simple plugin developed by Matthew Wagerfield which is based on the Lambertian Reflectance model, where the color of a triangle is calculated by a variety of different light sources within a particular scene. It is a great alternative to creating 3d effects with WebGL. Basically, this cool toy takes geometry, light and triangles and turns it into something fun, exciting and beautiful that everyone can use. With this Flat Surface Shader, triangles are rendered into three different contexts (WebGL, Canvas 2D and SVG). You can customize the settings yourself and even export your finished piece of art as a SVG or a PNG graphic that you can use later. What makes this project even better is that it is open source. You can visit their website, have a look at the code yourself and you can even adapt it or make it better if you want to. <a href = \"http:\/\/blog.pixellogo.com\/free-wallpapers-2\/cool-2d-flat-surface-free-background-maker\/\" target = \"_blank\">Reference<\/a>\r\n\r\nOn the <a href = \"http:\/\/carlofontanos.com\/demo\/flat-surface-shader\/\" target = \"_blank\">Demo<\/a>, I rendered FSS using a Canvas.\r\n<h3>The Code<\/h3>\r\n[cc lang = \"javascript\"]\r\nMESH: {\r\n\tambient: '#555555', \/\/ Default \r\n\tdiffuse: '#FFFFFF', \/\/ Default\r\n\twidth: 1.2, \/\/ Triangle Width\r\n\theight: 1.2, \/\/ Triangle Height\r\n\tdepth: 10, \/\/ Transparency of the triangles\r\n\tsegments: 16, \/\/ Number of triangles to display in 1 row\r\n\tslices: 8, \/\/ Number of triangles to display in 1 column\r\n\txRange: 0.8, \/\/ Wideness of the triangles in X Position\r\n\tyRange: 0.1, \/\/ Wideness of the triangles in Y Position\r\n\tzRange: 1.0, \/\/ Wideness of the triangles in Z Position\r\n\tspeed: 0.002 \/\/ Speed of the moving traingles\r\n},\r\n\r\nLIGHT: {\r\n\tautopilot: true, \/\/ Set this to true if you want the light to follow your mouse cursor\r\n\tambient: '#880066',\r\n\tdiffuse: '#ff8800',\r\n\tcount: 2, \/\/ Contrast \r\n\tzOffset: 100,\r\n\t\r\n\txyScalar: 1,\r\n\tspeed: 0.001,\r\n\tgravity: 1200,\r\n\tdampening: 0.15,\r\n\tminLimit: 8,\r\n\tmaxLimit: null,\r\n\tminDistance: 20,\r\n\tmaxDistance: 400,\r\n\tdraw: false \/\/ Set to true if you want to just draw a background image (static).\r\n}\r\n[\/cc]\r\n\r\nYou Configure it live @ <a href = \"http:\/\/matthew.wagerfield.com\/flat-surface-shader\/\" target = \"_blank\">http:\/\/matthew.wagerfield.com\/flat-surface-shader\/<\/a> refer to the screenshot bellow\r\n\r\n<a href=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2015\/02\/flat-surface-editor.jpg\"><img src=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2015\/02\/flat-surface-editor.jpg\" alt=\"flat-surface-editor\" width=\"25%\" class=\"alignnone size-full wp-image-1064\" \/><\/a>\r\n\r\nAnother cool example that I saw from CodePen is an Earth Figure with FSS used on the water: <a href = \"http:\/\/codepen.io\/Yuschick\/pen\/tbiHp\" target = \"_blank\">codepen.io\/Yuschick\/pen\/tbiHp<\/a>","post_title":"Flat Surface Shader Tutorial","post_excerpt":"The Flat Surface Shader is a simple plugin developed by Matthew Wagerfield which is based on the Lambertian Reflectance model, where the color of a triangle is calculated by a variety of different light sources within a particular scene.","post_status":"publish","comment_status":"open","ping_status":"open","post_password":"","post_name":"flat-surface-shader-tutorial","to_ping":"","pinged":"\nhttp:\/\/blog.pixellogo.com\/free-wallpapers-2\/cool-2d-flat-surface-free-background-maker\/","post_modified":"2017-09-19 15:36:55","post_modified_gmt":"2017-09-19 07:36:55","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=1062","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":146,"post_author":"1","post_date":"2014-04-27 12:38:45","post_date_gmt":"2014-04-27 12:38:45","post_content":"Syntax:\r\n\r\n[cc lang = \"php\"]\r\n$date = time();\r\n$date_today = date(\"Y-m-d H:i:s\", $date);\r\n[\/cc]\r\n\r\nThe time(); function will output the current date today in time stamp format.\r\nThe date(); function accepts two parameters, the first parameter is how you want to output the date and the 2nd parameter is the date to be formatted. If no parameters are provided, the default will be the value of the time(); function which is the current date.\r\n\r\nList of Date Formats that you can use:\r\n\r\n[cc lang = \"php\"]\r\ndate(\"F j, Y, g:i a\");                 \/\/ March 10, 2001, 5:16 pm\r\ndate(\"m.d.y\");                         \/\/ 03.10.01\r\ndate(\"j, n, Y\");                       \/\/ 10, 3, 2001\r\ndate(\"Ymd\");                           \/\/ 20010310\r\ndate('h-i-s, j-m-y, it is w Day');     \/\/ 05-16-18, 10-03-01, 1631 1618 6 Satpm01\r\ndate('\\i\\t \\i\\s \\t\\h\\e jS \\d\\a\\y.');   \/\/ it is the 10th day.\r\ndate(\"D M j G:i:s T Y\");               \/\/ Sat Mar 10 17:16:18 MST 2001\r\ndate('H:m:s \\m \\i\\s\\ \\m\\o\\n\\t\\h');     \/\/ 17:03:18 m is month\r\ndate(\"H:i:s\");                         \/\/ 17:16:18\r\ndate(\"Y-m-d H:i:s\");                   \/\/ 2001-03-10 17:16:18 (the MySQL DATETIME format)\r\n[\/cc]\r\n\r\nTo get the current date in an array format, use:\r\n\r\n[cc lang = \"php\"]\r\n$today = getdate();\r\nprint_r($today);\r\n[\/cc]\r\n\r\nThe above code will output the following:\r\n\r\n[cc lang = \"php\"]\r\nArray\r\n(\r\n    [seconds] => 5\r\n    [minutes] => 50\r\n    [hours] => 5\r\n    [mday] => 3\r\n    [wday] => 6\r\n    [mon] => 5\r\n    [year] => 2014\r\n    [yday] => 122\r\n    [weekday] => Saturday\r\n    [month] => May\r\n    [0] => 1399089005\r\n)\r\n[\/cc]\r\n\r\nTo convert mysql date format (Ex. 2013-10-28 07:57:07) , we should first convert it using \"strtotime\"\r\n\r\n[cc lang = \"php\"]\r\n$mysql_date = '2013-10-28 07:57:07';\r\n$php_date = strtotime( $mysql_date );\r\n$result = date( 'Y-m-d H:i:s', $php_date );\r\n[\/cc]\r\n\r\nReference: http:\/\/php.net\/manual\/en\/function.date.php\r\n","post_title":"Formatting Dates in PHP","post_excerpt":"Change the output of the time stamp to something more readable","post_status":"publish","comment_status":"open","ping_status":"open","post_password":"","post_name":"formatting-dates-in-php","to_ping":"","pinged":"","post_modified":"2015-02-09 07:38:54","post_modified_gmt":"2015-02-09 07:38:54","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=146","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":1107,"post_author":"1","post_date":"2015-02-26 05:06:14","post_date_gmt":"2015-02-26 05:06:14","post_content":"<a href=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2015\/02\/generate-csv-then-send-to-email.jpg\"><img src=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2015\/02\/generate-csv-then-send-to-email.jpg\" alt=\"generate-csv-then-send-to-email\" width=\"1129\" height=\"327\" class=\"alignnone size-full wp-image-1109\" \/><\/a>\r\n\r\nRecently I was tasked to create a module that will automatically generate a CSV report then send it to the admin email every month. The following code worked for me, which is included in a separate PHP file. To achieve a monthly notification email, you can use <a href = \"http:\/\/www.setcronjob.com\" target = \"_blank\">www.setcronjob.com<\/a> which is basically a time-based scheduler that can be configured to visit your PHP link anytime depending on the schedule you set.\r\n\r\n[cc lang = \"php\"]\r\nfunction create_csv_string($data) {\r\n\t\r\n\tmysql_connect(HOST, USERNAME, PASSWORD);\r\n\tmysql_select_db(DATABASE);\r\n\t\r\n\t$data = mysql_query('SELECT id, company, name, company_account_number, email, phone_number, invoice FROM carlofontanos_table');\r\n\r\n\t\/\/ Open temp file pointer\r\n\tif (!$fp = fopen('php:\/\/temp', 'w+')) return FALSE;\r\n\t\r\n\tfputcsv($fp, array('ID', 'Company', 'Name', 'Company Account Number', 'Email', 'Phone Number', 'Invoice'));\r\n\t\r\n\t\/\/ Loop data and write to file pointer\r\n\twhile ($line = mysql_fetch_assoc($data)) fputcsv($fp, $line);\r\n\t\r\n\t\/\/ Place stream pointer at beginning\r\n\trewind($fp);\r\n\r\n\t\/\/ Return the data\r\n\treturn stream_get_contents($fp);\r\n\r\n}\r\n\r\nfunction send_csv_mail($csvData, $body, $to = 'email@example.com', $subject = 'Website Report', $from = 'noreply@carlofontanos.com') {\r\n\r\n\t\/\/ This will provide plenty adequate entropy\r\n\t$multipartSep = '-----'.md5(time()).'-----';\r\n\r\n\t\/\/ Arrays are much more readable\r\n\t$headers = array(\r\n\t\t\"From: $from\",\r\n\t\t\"Reply-To: $from\",\r\n\t\t\"Content-Type: multipart\/mixed; boundary=\\\"$multipartSep\\\"\"\r\n\t);\r\n\r\n\t\/\/ Make the attachment\r\n\t$attachment = chunk_split(base64_encode(create_csv_string($csvData))); \r\n\r\n\t\/\/ Make the body of the message\r\n\t$body = \"--$multipartSep\\r\\n\"\r\n\t\t. \"Content-Type: text\/plain; charset=ISO-8859-1; format=flowed\\r\\n\"\r\n\t\t. \"Content-Transfer-Encoding: 7bit\\r\\n\"\r\n\t\t. \"\\r\\n\"\r\n\t\t. \"$body\\r\\n\"\r\n\t\t. \"--$multipartSep\\r\\n\"\r\n\t\t. \"Content-Type: text\/csv\\r\\n\"\r\n\t\t. \"Content-Transfer-Encoding: base64\\r\\n\"\r\n\t\t. \"Content-Disposition: attachment; filename=\\\"Website-Report-\" . date(\"F-j-Y\") . \".csv\\\"\\r\\n\"\r\n\t\t. \"\\r\\n\"\r\n\t\t. \"$attachment\\r\\n\"\r\n\t\t. \"--$multipartSep--\";\r\n\r\n\t\/\/ Send the email, return the result\r\n\treturn @mail($to, $subject, $body, implode(\"\\r\\n\", $headers)); \r\n\r\n}\r\n\r\n$array = array(array(1,2,3,4,5,6,7), array(1,2,3,4,5,6,7), array(1,2,3,4,5,6,7));\r\n\r\nsend_csv_mail($array, \"Website Report \\r\\n \\r\\n www.carlofontanos.com\");\r\n[\/cc]\r\n\r\nIf you just want to generate a CSV File and make it available for download as soon as you access the page, then you can use the following code:\r\n\r\n[cc lang = \"php\"]\r\nheader('Content-Type: text\/csv; charset=utf-8');\r\nheader('Content-Disposition: attachment; filename=data.csv');\r\n\r\n$output = fopen('php:\/\/output', 'w');\r\n\r\nfputcsv($output, array('ID', 'Company', 'Name', 'Company Account Number', 'Email', 'Phone Number', 'Invoice'));\r\n\r\nmysql_connect(HOST, USERNAME, PASSWORD);\r\nmysql_select_db(DATABASE);\r\n\r\n$rows = mysql_query('SELECT id, company, name, company_account_number, email, phone_number, invoice FROM transaxle_rewards_data');\r\n\r\nwhile ($row = mysql_fetch_assoc($rows)) fputcsv($output, $row);\r\n[\/cc]","post_title":"Generate CSV file and send as Email attachment PHP","post_excerpt":"Querying reports from SQL database then generate a CSV File containing all the queried data then send the CSV File to the admin email.","post_status":"publish","comment_status":"open","ping_status":"open","post_password":"","post_name":"generate-csv-file-and-send-as-email-attachment-php","to_ping":"","pinged":"","post_modified":"2015-04-27 14:59:04","post_modified_gmt":"2015-04-27 14:59:04","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=1107","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":650,"post_author":"1","post_date":"2014-09-02 03:25:54","post_date_gmt":"2014-09-02 03:25:54","post_content":"<a href=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2014\/09\/emails-with-html-and-css1.jpg\"><img src=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2014\/09\/emails-with-html-and-css1.jpg\" alt=\"emails-with-html-and-css\" width=\"600\" class=\"alignnone size-full wp-image-707\" \/><\/a>\r\n\r\n&nbsp;\r\n<h3>According to Chris Coyier, here are the things you can NOT do when creating emails:<\/h3><br \/>\r\n\r\n<ul>\r\n\t<li><strong>Include a &lt;head&gt; section with styles.<\/strong>\u00a0Apple Mail.app supports it, but Gmail and Hotmail do not, so it's a no-no. Hotmail will support a style section in the body but Gmail still doesn't.<\/li>\r\n\t<li><strong>Link to an external stylesheet.<\/strong>\u00a0Not many email clients support this, best to just forget it.<\/li>\r\n\t<li><strong>Background-image \/ Background-position.<\/strong>\u00a0Gmail is also the culprit on this one.<\/li>\r\n\t<li><strong>Clear your floats.<\/strong>\u00a0Gmail again.<\/li>\r\n\t<li><strong>Margin.<\/strong>\u00a0Yep, seriously, Hotmail ignores margins.\u00a0<em>Basically any CSS positioning at all doesn't work.<\/em><\/li>\r\n\t<li><strong>Font-anything.<\/strong>\u00a0Chances are Eudora will ignore anything you try to declare with fonts.<\/li>\r\n<\/ul>\r\n\r\n<h3>What you CAN do is:<\/h3>\r\n\r\nIn two words, inline styles. It's not as awful as you might think, since we are basically developing a one-off email, inline styles are not nearly as egregious as using them on a website. Need a big green title for a block of text?\r\n\r\n<code><h3 style=\"color: #1c70db;\">NOW $159<\/h3><\/code>\r\n\r\n<ul>\r\n\t<li>The big can-do is\u00a0<strong>images<\/strong>. Think creatively on what you can do with images.<\/li>\r\n\t<li>Since you will be using tables,\u00a0<strong>think gridular<\/strong>. Grids are designers friends, there is lots you can do with a grid.<\/li>\r\n<\/ul>\r\n\r\n<h3>Layout Techniques<\/h3>\r\n\r\nMost people suggest using table, tr, and td tags for page layout within an HTML email. Tables are the most stable option, especially if you're creating email messages that require a more complicated multi-column layout. Gmail simply removes div tags, and coverage in other clients like Hotmail is spotty. Also, floating div tags don't work in several email clients, so any floating elements can be placed in a table.\r\nUsing a div tag for a layout or background color is a better option when you're working with a single-column layout. Applying styles to div tags using inline styles versus a style tag will help keep that style in place when the email ships out to the masses.\r\n\r\nOn the bright side, you can scale back on div tags if they're causing problems, and use the almost universally supported table, tr, and td tags for anything you can't accomplish reliably with a div.\r\n\r\n<h3>Sending Emails with HTML and CSS in WordPress<\/h3>\r\n\r\nFirst we need to tell WordPress what content type are we going to use for our emails:\r\n[cc lang = \"php\"]\r\nadd_filter (\"wp_mail_content_type\", \"cvf_mail_content_type\");\r\nfunction cvf_mail_content_type() {\r\n\r\n\treturn \"text\/html\";\r\n}\r\n[\/cc]\r\n\r\nThen let's modify the wp_mail function by adding some html contents and css on the $message parameter:\r\n[cc lang = \"php\"]\r\n<?php\r\nfunction cvf_email($to) {\r\n\t\r\n\t$from = get_option('admin_email');\r\n\t$headers = 'From: Carlo Fontanos <\"' . $from . '\">';\r\n\t$subject = \"Welcome to CarloFontanos \".$username.\"!\";\r\n\t\r\n\tob_start();\r\n\t\/\/ Include header contents\r\n\tinclude(\"email_header.php\");\t\r\n\t?>\r\n\t\r\n\t<p>A very special welcome to you, <strong style=\"color:orange\"><?php echo $username ?><\/strong>. Thank you for joining CarloFontanos.com!<\/p>\r\n\t<p>We hope you enjoy your stay at CarloFontanos.com. If you have any problems, questions, opinions, praise, comments, suggestions, please feel free to contact us at any time<\/p>\r\n\t\t\r\n\t<?php\r\n\t\/\/ Include footer contents\r\n\tinclude(\"email_footer.php\");\r\n\r\n\t$message = ob_get_contents();\r\n\t\r\n\tob_end_clean();\r\n\r\n\twp_mail($to, $subject, $message, $headers);\r\n}\r\n[\/cc]\r\n\r\n<h3>Other Tips from Chris Coyier<\/h3><br \/>\r\n\r\n<ul>\r\n<li>Remember to use <strong>full paths<\/strong> to images, not relative paths. (e.g. http:\/\/www.yourserver.com\/email\/images\/logo.gif). Also, link to images from your own server, not anyone elses.<\/li>\r\n<li><strong>Check with your ISP<\/strong> before you go out sending thousands and thousands of emails, they might think you are a spammer.<\/li>\r\n<li><strong>Test, test, and test<\/strong> again with as many different email clients as you can possibly get access to. You will definetly want to test the major online clients like Gmail, Yahoo, and Hotmail, but also definitely check Outlook, Mail.app, and as many other desktop clients as possible.<\/li>\r\n<li><strong>Don't go over 600px<\/strong> in width. Even that is pushing it. If your design can handle it, 440px is closer to ideal.<\/li>\r\n<li>Think of any extra CSS you may use as <strong>upward-compatibility<\/strong>. You can always include some header style CSS if you want, but think of it as a bonus for people using email clients that support it. Then turn it off completely and make sure the design still makes sense.<\/li>\r\n<li><strong>Try not to look like SPAM.<\/strong> Pretty obvious, but just writing good code and honest copy should keep you out of the can here. Your HTML email is definitely NOT the place for a Viagra joke.<\/li>\r\n<li>Just like in web design, it doesn't hurt to <strong>think above the fold<\/strong>. Meaning what users will see before they have to scroll.<\/li>\r\n<li><strong>Use your footer like a footer<\/strong>. This is a great place for lots of things including phone numbers and addresses, about information, unsubscribe options, and perhaps a little reminder of what this email is and why the reader is on the list.<\/li>\r\n<li><strong>OBEY THE LAW.<\/strong> The <a href=\"http:\/\/www.ftc.gov\/bcp\/edu\/pubs\/business\/ecommerce\/bus61.shtm\">CAN-SPAM act<\/a> became law on Jan. 1, 2004. It says there many things you must do as a commercial email-er. Highlights are basically don't be deceptive, and that you MUST include a physical mailing address as well as a working unsubscribe link.<\/li>\r\n<\/ul>","post_title":"Generate Emails with HTML & CSS in WordPress","post_excerpt":"Adding HTML tags and CSS Styles into your Email Contents","post_status":"publish","comment_status":"open","ping_status":"closed","post_password":"","post_name":"generate-emails-with-html-and-css-in-wordpress","to_ping":"","pinged":"","post_modified":"2015-02-09 06:51:21","post_modified_gmt":"2015-02-09 06:51:21","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=650","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":1847,"post_author":"1","post_date":"2017-04-20 16:02:56","post_date_gmt":"2017-04-20 08:02:56","post_content":"Recently, I was exploring on how to get a perfect score of 100 on Google PageSpeed Insights. I searched for days and did\u00a0several trial and errors, finally I was able to get my static page to score 100. Bellow are some tips on how I was able to do it.\r\n<a class=\"btn btn-success\" href=\"http:\/\/carlofontanos.com\/o\/\" target=\"_blank\" rel=\"noopener noreferrer\">Checkout Demo site<\/a> \u00a0 <a class=\"btn btn-primary\" href=\"https:\/\/developers.google.com\/speed\/pagespeed\/insights\/?url=http%3A%2F%2Fcarlofontanos.com%2Fo%2F\" target=\"_blank\" rel=\"noopener noreferrer\">Run Demo site on PageSpeed Insights<\/a>\r\n<ul>\r\n \t<li><strong>Use CDN<\/strong> - This allow users from a around the world to download static content from a closer source instead of spanning the Atlantic ocean to retrieve data.<\/li>\r\n \t<li><strong>Compress your JS, CSS, Images and HTML<\/strong>. The more compressed you get your scripts \/ images, the faster the download will be.<\/li>\r\n \t<li><strong>Get a faster hosting<\/strong>. Google also rank sites base on the amount of time spent to deliver your content to readers. According to Google, users tend to leave sites that take more than 3 seconds to load. So it's important to to pick the right hosting for your website. Tip: new hosting sites are usually better because their servers are less crowded.<\/li>\r\n \t<li><strong>Leverage browser caching.<\/strong> I always use the following config to enable caching for specific types of file.\r\n<pre class=\"lang:default decode:true \">ExpiresActive On\r\nExpiresByType image\/jpg \"access 1 year\"\r\nExpiresByType image\/jpeg \"access 1 year\"\r\nExpiresByType image\/gif \"access 1 year\"\r\nExpiresByType image\/png \"access 1 year\"\r\nExpiresByType text\/css \"access 1 month\"\r\nExpiresByType text\/html \"access 1 month\"\r\nExpiresByType application\/pdf \"access 1 month\"\r\nExpiresByType text\/x-javascript \"access 1 month\"\r\nExpiresByType application\/x-shockwave-flash \"access 1 month\"\r\nExpiresByType image\/x-icon \"access 1 year\"\r\nExpiresDefault \"access 1 month\"\r\n\r\n<\/pre>\r\n<\/li>\r\n \t<li><strong>Enable Gzip Compression<\/strong> - Gzip Compression allows your web server to provide smaller file sizes which load faster for your website users. The code below should be added to your .htaccess file.\r\n<pre class=\"lang:default decode:true \">mod_gzip_on Yes\r\nmod_gzip_dechunk Yes\r\nmod_gzip_item_include file .(html?|txt|css|js|php|pl)$\r\nmod_gzip_item_include handler ^cgi-script$\r\nmod_gzip_item_include mime ^text\/.*\r\nmod_gzip_item_include mime ^application\/x-javascript.*\r\nmod_gzip_item_exclude mime ^image\/.*\r\nmod_gzip_item_exclude rspheader ^Content-Encoding:.*gzip.*\r\n\r\n<\/pre>\r\nThe code above will work on Apache. If it's not working there is another way that may work for you. Remove the above code from your .htaccess file and try this one instead:\r\n<pre class=\"lang:default decode:true \">AddOutputFilterByType DEFLATE text\/plain\r\nAddOutputFilterByType DEFLATE text\/html\r\nAddOutputFilterByType DEFLATE text\/xml\r\nAddOutputFilterByType DEFLATE text\/css\r\nAddOutputFilterByType DEFLATE application\/xml\r\nAddOutputFilterByType DEFLATE application\/xhtml+xml\r\nAddOutputFilterByType DEFLATE application\/rss+xml\r\nAddOutputFilterByType DEFLATE application\/javascript\r\nAddOutputFilterByType DEFLATE application\/x-javascript\r\n<\/pre>\r\nIn my experience, enabling Gzip Compression gives you most of the score difference on Google PageSpeed Insights.<\/li>\r\n \t<li><strong>Get rid of render blocking scripts<\/strong>.\r\n<ul>\r\n \t<li>If you put your scripts within the head tag of your HTML - \u00a0the page will have to\u00a0wait for the css and js to finish loading before it starts rendering your content. The best approach I found is to append css and js scripts dynamically to the header tag and in the end of body tag, that is - after DOM has completed loading. \u00a0You can get the script here:\u00a0<a href=\"https:\/\/gist.github.com\/carlo-fontanos\/abc69dfea9d1e853c0e49fe509dbaa4b\" target=\"_blank\" rel=\"noopener noreferrer\">https:\/\/gist.github.com\/carlo-fontanos\/abc69dfea9d1e853c0e49fe509dbaa4b<\/a><\/li>\r\n \t<li>Note that the <span class=\"lang:default decode:true  crayon-inline \">loadScript()<\/span>\u00a0\u00a0and <span class=\"lang:default decode:true  crayon-inline \">loadStyle()<\/span>\u00a0\u00a0loads the files asynchronously so if you have scripts that are depending on another script, ex. jQuery, then you should nest them like this:.\r\n<pre class=\"lang:default decode:true \">loadScript(\"js\/script1.js\", function(){\r\n\tloadScript(\"js\/script2.js\", function(){\r\n\t\tloadScript(\"js\/script3.js\", function(){\r\n\t\t\tloadScript(\"js\/script4.js\", function(){\r\n\t\t\t\tloadScript(\"js\/script5.js\", function(){});\r\n\t\t\t});\r\n\t\t});\r\n\t});\r\n});\r\n<\/pre>\r\n<\/li>\r\n \t<li>Observation: when you refresh your page you will notice that it loads an unstyled HTML for a few seconds then renders back properly after your critical stylesheets have been fully loaded - uhh.. that's ugly. Let's fix that! \u00a0Within the head tag of your HTML (right after your meta tags), add the following styles:\r\n<pre class=\"lang:default decode:true\">&lt;style id=\"init-style\"&gt;\r\n*{color:#fff; border:0; background:none;} \r\nimg,button{display:none;}\r\n&lt;\/style&gt;<\/pre>\r\n<\/li>\r\n \t<li>The CSS code above\u00a0TEMPORARILY sets\u00a0all the elements\u00a0to appear white and all images removed.\u00a0Basically we are trying to make the screen appear like\u00a0it's still trying to load the content when actually the content is already there, but just not visible yet.<\/li>\r\n \t<li>If you look at the <span class=\"lang:default decode:true crayon-inline \">&lt;styles&gt;<\/span>\u00a0 tag, it has an ID \"init-style\" - this will help us\u00a0easily identify and remove it when all our critical css files have been fully loaded. So for example, we need to load a critical css file such as bootstrap: 1st is we load bootstrap dynamically, then 2nd we remove the initial styles from the header tag right after. Like this:\r\n<pre class=\"lang:default decode:true\">loadStyle(\"\/\/maxcdn.bootstrapcdn.com\/bootstrap\/4.0.0-alpha.6\/css\/bootstrap.min.css\", function(){\r\n\tdocument.getElementById(\"init-style\").outerHTML=''; \/* Remove initial styles from your page *\/\r\n});\t\t\t\r\n<\/pre>\r\n<\/li>\r\n<\/ul>\r\n<\/li>\r\n \t<li><strong>Combine CSS Files<\/strong>. Fewer HTTP requests for CSS content is better rather than loading a bunch individual CSS files. You can use this PHP script to\u00a0combine multiple CSS files into a single file then\u00a0compress it on-the-fly:\u00a0<a href=\"https:\/\/gist.github.com\/carlo-fontanos\/f2ab6afaa71f29595b3f0d95f40ad2b0\">https:\/\/gist.github.com\/carlo-fontanos\/f2ab6afaa71f29595b3f0d95f40ad2b0<\/a><\/li>\r\n<\/ul>\r\nI see a lot of posts complaining about scripts like Google Analytics being a render blocker. Well, if Google is cheating on you, you can cheat Google back:\r\n\r\nThis is the user-agent for pageSpeed:\r\n<pre class=\"lang:default decode:true \">\u201cMozilla\/5.0 (X11; Linux x86_64) AppleWebKit\/536.8 (KHTML, like Gecko; Google Page Speed Insights) Chrome\/19.0.1084.36 Safari\/536.8\u201d<\/pre>\r\nYou can insert a conditional to avoid serving the analytics script to PageSpeed:\r\n<pre class=\"lang:default decode:true\">&lt;?php if (!isset($_SERVER['HTTP_USER_AGENT']) || stripos($_SERVER['HTTP_USER_AGENT'], 'Speed Insights') === false): ?&gt;\r\n\t\/* your analytics code here or any HTML element you want ignored by PageSpeed Insights *\/ \r\n&lt;?php endif; ?&gt;\r\n<\/pre>\r\nor via Javascript:\r\n<pre class=\"lang:default decode:true \">if(navigator.userAgent.indexOf(\"Speed Insights\") == -1) { \r\n\t\/* your analytics code here or any HTML element you want ignored by PageSpeed Insights *\/\r\n}\r\n<\/pre>\r\nIf your only concern is getting a 100\/100 score this will do it.","post_title":"Get a Perfect Score of 100 on Google PageSpeed Insights","post_excerpt":"","post_status":"publish","comment_status":"open","ping_status":"open","post_password":"","post_name":"get-a-perfect-score-of-100-on-google-pagespeed-insights","to_ping":"","pinged":"","post_modified":"2017-04-25 14:34:21","post_modified_gmt":"2017-04-25 06:34:21","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=1847","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":1123,"post_author":"1","post_date":"2015-04-29 10:35:21","post_date_gmt":"2015-04-29 10:35:21","post_content":"There will be times that you will need to pull out data from a web service using PHP's GET method. In this tutorial I will be demonstrating how you can make a GET Request using cURL.\r\n\r\n<h3>Example of GET Request:<\/h3>\r\n\r\nYou can test cURL in your own local server as it's the same with using a regular form with an action.\r\n\r\n[cc lang = \"php\"]\r\n$url = \"https:\/\/website.com\/api.php?action=get_data&x=1&y=2\";\r\n\r\n\/\/  Initiate curl\r\n$ch = curl_init();\r\n\/\/ Disable SSL verification\r\ncurl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);\r\n\/\/ Will return the response, if false it print the response\r\ncurl_setopt($ch, CURLOPT_RETURNTRANSFER, true);\r\n\/\/ Set the url\r\ncurl_setopt($ch, CURLOPT_URL,$url);\r\n\/\/ Execute\r\n$result=curl_exec($ch);\r\n\/\/ Closing\r\ncurl_close($ch);\r\n\r\n\/\/ Print the return data\r\nprint_r(json_decode($result, true));\r\n\r\n[\/cc]\r\n\r\nUse json_decode if the return is in json format. \r\n\r\n<h3>Function:<\/h3>\r\nIt's best to put your cURL GET Request in a function if your a dealing with many get request in all parts of your website \r\n[cc lang = \"php\"]\r\nfunction cvf_curl_get($url) {\r\n\t\r\n\t$ch = curl_init();\r\n\tcurl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);\r\n\tcurl_setopt($ch, CURLOPT_RETURNTRANSFER, true);\r\n\tcurl_setopt($ch, CURLOPT_URL,$url);\r\n\t$result=curl_exec($ch);\r\n\tcurl_close($ch);\r\n\r\n\treturn json_decode($result, true);\r\n\t\r\n}\r\n[\/cc]","post_title":"GET Request using cURL","post_excerpt":"Demonstrates how to pull out data from a Web Service using cURL GET Method","post_status":"publish","comment_status":"open","ping_status":"open","post_password":"","post_name":"get-request-using-curl","to_ping":"","pinged":"","post_modified":"2015-05-04 08:48:27","post_modified_gmt":"2015-05-04 08:48:27","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=1123","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":1356,"post_author":"1","post_date":"2016-07-26 00:44:26","post_date_gmt":"2016-07-25 16:44:26","post_content":"Put this in your helper file:            \r\n[cc lang = \"php\"]\r\nfunction set_active( $route ) {\r\n    if( is_array( $route ) ){\r\n        return in_array(Request::path(), $route) ? 'active' : '';\r\n    }\r\n    return Request::path() == $route ? 'active' : '';\r\n}                                                                                    \r\n[\/cc]\r\n<br \/>\r\n<strong>Usage:<\/strong>\r\n            \r\n[cc lang = \"html\"]\r\n<li class = \"{{ set_active('admin\/users') }}\">\r\n\t<a href=\"{{ url('\/admin\/users\/') }}\">Users<\/a>\r\n<\/li>\r\n[\/cc]\r\n  \r\n<strong>Multi-level:<\/strong>\r\n[cc lang = \"html\"]\r\n<li class=\"{{ set_active(['admin\/items', Request::is('admin\/auction\/*'), 'admin\/something']) }}\">\r\n\t<ul>\r\n\t\t<li class = \"{{ set_active('admin\/item') }}\">\r\n\t\t\t<a href=\"{{ url('\/admin\/item') }}\">All<\/a>\r\n\t\t<\/li>\r\n\t\t<li class = \"{{ set_active('admin\/item\/create') }}\">\r\n\t\t\t<a href=\"{{ URL::to('\/admin\/item\/create') }}\">Add New<\/a>\r\n\t\t<\/li>\r\n\t\t<li class = \"{{ set_active('admin\/something') }}\">\r\n\t\t\t<a href=\"{{ URL::to('\/admin\/something') }}\">Something<\/a>\r\n\t\t<\/li>\r\n\t<\/ul>\r\n<\/li>        \r\n[\/cc]\r\n\r\n<\/li>\r\n<\/ol>","post_title":"Handling active menu item in Laravel 5","post_excerpt":"Best practice for handling \"active\" menu item in Laravel 5","post_status":"publish","comment_status":"open","ping_status":"open","post_password":"","post_name":"handling-active-menu-item-in-laravel-5","to_ping":"","pinged":"","post_modified":"2016-07-26 11:27:59","post_modified_gmt":"2016-07-26 03:27:59","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=1356","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":1001,"post_author":"1","post_date":"2014-12-15 09:40:25","post_date_gmt":"2014-12-15 09:40:25","post_content":"Today we are going to discuss how you can integrate AJAX using <a href = \"http:\/\/jquery.malsup.com\/form\/\" target = \"_blank\">jQuery's Form Plugin<\/a> in your CodeIgniter project.\r\n\r\nWhen I first began developing for CodeIgniter, I was left scratching my head understanding methods that made the process easy and within CodeIgniter best practices. I find it strange that there is not much information about how to integrate AJAX into it, since it is a relatively known framework and AJAX methodology is very common in web development.\r\n\r\nI have been looking for information about this subject on the Internet and the truth is that, besides being very scattered, it is not very clear, so here is my contribution from what I have learned, hopefully developers out there will find this tutorial useful.\r\n\r\n\r\n<h3>Step 1<\/h3>\r\nIn your header template file, include the following scripts:\r\n\r\n<code>\r\n<script src=\"http:\/\/ajax.googleapis.com\/ajax\/libs\/jquery\/1.7\/jquery.js\"><\/script> \r\n<script src=\"http:\/\/malsup.github.com\/jquery.form.js\"><\/script> \r\n<\/code>\r\n\r\nFeel free to use other AJAX methods, but for this tutorial we are going to use the <a href = \"http:\/\/jquery.malsup.com\/form\/\" target = \"_blank\">jQuery form plugin<\/a>\r\n\r\n<h3>Step 2<\/h3>\r\nLet's create a form where we will be doing AJAX\r\nCreate a view file named \"add.php\", then add the following code:\r\n[cc lang = \"html\"]\r\n<h1>New Blog<\/h1>\r\n\r\n<!-- This is where we will be outputting response from our AJAX requests -->\r\n<div class = \"new-blog-messages\"><\/div>\r\n<div class = \"col-md-6\">\r\n        <!-- Generate the form attribute and add a class which we will be using to identify the form when we do AJAX -->\r\n        <?php echo form_open('blog\/add_submit', array('class' => 'new-blog-form')) ?>\r\n\r\n\t\t<div class = \"form-group\">\r\n\t\t\t<label for=\"title\">Title<\/label>\r\n\t\t\t<input type=\"input\" name=\"post_title\" class = \"form-control post_title\" \/><br \/>\r\n\t\t<\/div>\r\n\t\t\r\n\t\t<div class = \"form-group\">\r\n\t\t\t<label for=\"text\">Description<\/label>\r\n\t\t\t<textarea name=\"post_content\" class = \"form-control post_content\" rows = \"15\"><\/textarea><br \/>\r\n\t\t<\/div>\r\n\t\t\r\n\t\t<div class = \"form-group\">\r\n\t\t\t<label for=\"text\">Short Description<\/label>\r\n\t\t\t<textarea name=\"post_excerpt\" class = \"form-control post_excerpt\" rows = \"7\"><\/textarea><br \/>\r\n\t\t<\/div>\r\n\t\t\r\n\t\t<input type=\"submit\" name=\"submit\" value=\"Submit\" class = \"btn btn-primary new-blog-submit\" \/>\r\n\t<\/form>\r\n\t\r\n\t<script>\t\t\t\t\t\r\n\tjQuery(document).ready(function($) {\r\n\t\t\r\n\t\tvar options = {\r\n\t\t\tbeforeSend: function(){\r\n\t\t\t\t$(\".new-blog-messages\").html('<p><img src = \"<?php echo base_url() ?>images\/loading.gif\" class = \"loader\" \/><\/p>');\r\n\t\t\t},\r\n\t\t\tcomplete: function(response){\r\n\t\t\t\tif(response.responseText === 'success'){\r\n\t\t\t\t\t$(\".new-blog-messages\").html('<p class = \"bg-success\">Blog successfully created!<\/p>');\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$(\".new-blog-messages\").html('<p class = \"bg-danger\">' + response.responseText + '<\/p>');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\t\t\r\n\t\t$(\".new-blog-form\").ajaxForm(options);\t\r\n\r\n\t\treturn false;\r\n\t\t\r\n\t});\r\n\t<\/script>\r\n\t\r\n<\/div>\r\n[\/cc]\r\nThe above code shows the implementation of the ajax form plugin using the ajaxForm function:\r\n\r\n<code>$(\".new-blog-form\").ajaxForm(options);<\/code>\r\n\r\nThe form is submitted to the action url: http:\/\/youwebsite.com\/blog\/add_submit, where the add_submit is the name of the method in your controller file found in step 3.\r\n\r\n<h3>Step 3<\/h3>\r\nCreate a controller named \"blog.php\" then add the following code:\r\n\r\n[cc lang = \"php\"]\r\n<?php\r\nclass Blog extends CI_Controller {\r\n\r\n\tpublic function __construct() {\r\n\t\t\r\n\t\tparent::__construct();\r\n\t\r\n\t}\r\n\t\r\n\tpublic function index() {\r\n\t\t\r\n\t\t$data['post_title'] = 'New Blog Item';\r\n\r\n\t\t\/\/ Load the add.php page\r\n\t\t$this->load->view('templates\/header', $data);\r\n\t\t$this->load->view('pages\/blog\/add');\r\n\t\t$this->load->view('templates\/footer');\r\n\t\t\r\n\t}\r\n\t\r\n\tpublic function add_submit() {\r\n\t\t\r\n\t\t$post_content = $this->input->post('post_content');\r\n\t\t$post_title = $this->input->post('post_title');\r\n\t\t$post_excerpt = $this->input->post('post_excerpt');\r\n\r\n\t\t\/\/ Validate input fields\r\n\t\tif(empty($post_title)){\r\n\t\t\techo 'Title can not be empty';\r\n\t\t\t\r\n\t\t} else if(empty($post_content)) {\r\n\t\t\techo 'Description can not be empty';\r\n\t\t\t\r\n\t\t} else { \r\n        \/\/ Replace this area with your INSERT POST function\r\n\t\t\t$args = array(\r\n\t\t\t\t'post_content'\t\t=>\t$post_content,\r\n\t\t\t\t'post_title'\t\t=>\t$post_title,\r\n\t\t\t\t'post_excerpt'\t\t=>\t$post_excerpt\r\n\t\t\t);\r\n\t\t\t\r\n\t\t\t$post_id = $this->post_model->insert_post($args);\r\n\t\t\t\r\n\t\t\tif($post_id) {\r\n\t\t\t\techo 'success';\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\techo 'Failed to create new blog, please try again later.';\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\texit();\r\n\t\t\t\r\n\t}\r\n}\r\n[\/cc]\r\n\r\nKudos on a job well done! You have learned and achieved seamless communication through Ajax. In many cases, the code to do so was quite small. Now, you might enjoy the challenge of further enhancing the application by  implementing any other UI ideas that you may have had while reading this tutorial.","post_title":"How to do Ajax in Codeigniter","post_excerpt":"A very basic but powerful implementation of Ajax that complements Codeigniter.","post_status":"publish","comment_status":"open","ping_status":"closed","post_password":"","post_name":"how-to-do-ajax-in-codeigniter","to_ping":"","pinged":"","post_modified":"2015-02-09 05:53:39","post_modified_gmt":"2015-02-09 05:53:39","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=1001","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":1396,"post_author":"1","post_date":"2016-07-26 11:36:23","post_date_gmt":"2016-07-26 03:36:23","post_content":"<ol>\r\n<li>Create a dummy button on your view:\r\n<code>\r\n<input type = \"submit\" class = \"btn btn-primary m-d do-ajax\" value = \"AJAX\" \/>\r\n{{ csrf_field() }} {{-- This will include a unique token which will we will pass along with our AJAX post --}}\r\n<\/code>\r\n<\/li>\r\n<li>On your JS script, add the following:\r\n[cc lang = \"javascript\"]\r\n$('body').on('click', '.do-ajax', function () {\r\n\t$.ajax({\r\n\t\turl: '.\/page\/do-ajax',\r\n\t\theaders: {'X-CSRF-TOKEN': $('input[name=_token]').val()},\r\n\t\tdata: {\r\n\t\t\ttest: 'test'\r\n\t\t},\r\n\t\ttype: 'POST',\r\n\t\tdatatype: 'JSON',\r\n\t\tsuccess: function (resp) {\r\n\t\t\talert(resp);\r\n\t\t}\r\n\t});\r\n});\r\n[\/cc]\r\n<\/li>\r\n<li>On your controller add this new method: \r\n[cc lang = \"php\"]\r\npublic function do_ajax(Request $request) {\r\n\tif( $request->ajax() ) {\r\n\t\treturn response()->json([\r\n\t\t\t'testdata' => 'it works!'\r\n\t\t]);\r\n\t}\r\n}\r\n[\/cc]\r\n<\/li>\r\n<li>On your route, add the following code:\r\n<code>Route::post('\/page\/do-ajax', 'PageController@do_ajax');<\/code>\r\n<\/li>\r\n  \r\n <li>Try it out, click the button. You should get the response of the ajax request: \"it works!\". <\/li>\r\n <\/ol>","post_title":"How to do ajax in Laravel 5.2","post_excerpt":"Best practices in implementing ajax in your laravel app. ","post_status":"publish","comment_status":"open","ping_status":"open","post_password":"","post_name":"how-to-do-ajax-in-laravel-5-2","to_ping":"","pinged":"","post_modified":"2016-07-26 11:56:23","post_modified_gmt":"2016-07-26 03:56:23","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=1396","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":275,"post_author":"1","post_date":"2014-05-10 14:03:51","post_date_gmt":"2014-05-10 14:03:51","post_content":"<img src=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2014\/05\/xampp-max-size-error.jpg\" alt=\"xampp-max-size-error\" width=\"940\" class=\"alignnone size-full wp-image-276\" \/>\r\n\r\nMake changes in xampp\\php\\php.ini\r\n\r\nLook for the following:\r\n\r\n[cc lang = \"php\"]\r\npost_max_size       = 8M\r\nupload_max_filesize = 2M\r\nmax_execution_time  = 30\r\nmax_input_time      = 60\r\nmemory_limit        = 8M\r\n[\/cc]\r\n\r\nthen replace the lines with the following:\r\n\r\n[cc lang = \"php\"]\r\npost_max_size       = 750M\r\nupload_max_filesize = 750M\r\nmax_execution_time  = 5000\r\nmax_input_time      = 5000\r\nmemory_limit        = 1000M\r\n[\/cc]\r\n\r\nRestart your XAMPP after making the changes, if you are still seeing the same error - try restarting your computer.","post_title":"How to Import Large Database Files in XAMPP","post_excerpt":"Increase the maximum file upload size of your XAMPP and start uploading your \"huge\" databases!","post_status":"publish","comment_status":"open","ping_status":"open","post_password":"","post_name":"how-to-import-large-database-files-in-xampp","to_ping":"","pinged":"\nhttp:\/\/carlofontanos.com\/php-list\/","post_modified":"2015-02-09 07:46:59","post_modified_gmt":"2015-02-09 07:46:59","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=275","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"2","filter":"raw"},{"ID":150,"post_author":"1","post_date":"2014-04-27 12:42:00","post_date_gmt":"2014-04-27 12:42:00","post_content":"I recently created a page that contains a list of articles. I wanted to show the title and the excerpt, but the output of the excerpt is too long and breaking my list. So here is what I did to limit the number of words:\r\n\r\nCreate a function that will accept two parameters (the text to be limited and the desired number of words)\r\n\r\n[cc lang = \"php\"]\r\nfunction limit_words($text, $limit) {\r\n\t$words = explode(\" \",$text);\r\n\treturn implode(\" \",array_splice($words,0,$limit));\r\n}\r\n[\/cc]\r\n\r\nThen we call the function to our page:\r\n\r\n[cc lang = \"php\"]\r\n$text = \"The quick brown fox jumps over the lazy dog\";\r\n \r\necho limit_words($text,5);\r\n[\/cc]","post_title":"How to Limit the Number Words to Output in PHP","post_excerpt":"Creating a function that will limit the number of words to output","post_status":"publish","comment_status":"open","ping_status":"open","post_password":"","post_name":"how-to-limit-words-in-a-post","to_ping":"","pinged":"","post_modified":"2015-02-09 07:36:54","post_modified_gmt":"2015-02-09 07:36:54","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=150","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":1330,"post_author":"1","post_date":"2016-05-05 17:58:12","post_date_gmt":"2016-05-05 09:58:12","post_content":"Recently I was working on an HTML table with a lot of columns, I thought \"How is this going to look on my mobile phone?\". So then I searched for \"responsive tables\" and found Stackable.JS. The purpose of Stackable.JS is to give you an easy way of converting wide tables to a format that will work better on small screens. It creates a copy of the table that is converted into a 2-column key\/value format.\r\n\r\n<a href = \"http:\/\/carlofontanos.com\/demo\/stackable-js\/\" class = \"btn btn-success\">Demo<\/a> <span id=\"page-has-downlodable-file\" file=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2016\/05\/stackable-js-demo.zip\"><\/span>\r\n\r\n<hr \/>\r\n<h3>How does it work?<\/h3>\r\nOn the demo, I used the cardtable method. Card table breaks each row into its own table. The row tables function like cards. Any content left in tfoot is also broken into its own card, this allows for things like view all links or pagination to be easily used.\r\n\r\n<strong>Original:<\/strong>\r\n\r\n<img src=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2016\/05\/stackable-js-demo-full-width.jpg\" alt=\"stackable-js-demo-full-width\" width=\"926\" height=\"293\" \/>\r\n\r\n<strong>When screen hits 768px and bellow:<\/strong>\r\n\r\n<img src=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2016\/05\/stackable-js-demo-stacked-at-768px.jpg\" alt=\"stackable-js-demo-stacked-at-768px\" width=\"688\" height=\"581\" \/>\r\n\r\n<h3>The Code<\/h3>\r\nSimply copy the entire code to a html file then run it. \r\n[cc lang = \"html\"]\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n\t<style>\r\n\t.stacktable { width: 100%; }\r\n\t.stacktable tr td, .stacktable tr th { border: 1px solid #dfdfdf; padding: 10px; }\r\n\t.st-head-row { padding-top: 1em; }\r\n\t.st-head-row.st-head-row-main { font-size: 1.5em; padding-top: 0; }\r\n\t.st-key { width: 49%; text-align: right; padding-right: 1%; font-weight: bold; }\r\n\t.st-val { width: 49%; padding-left: 1%; }\r\n\t\r\n\t.stacktable.large-only { display: table; }\r\n\t.stacktable.small-only { display: none; }\r\n\r\n\t@media (max-width: 768px) {\r\n\t\t.stacktable.large-only { display: none; }\r\n\t\t.stacktable.small-only { display: table; }\r\n\t}\r\n\t<\/style>\r\n<\/head>\r\n<body>\r\n\t<table id=\"make-responsive\" class=\"table\" width = \"100%\">\r\n\t\t<thead>\r\n\t\t\t<tr>\r\n\t\t\t\t<th width=\"30%\">Name<\/th>\r\n\t\t\t\t<th width=\"30%\">Phone<\/th>\r\n\t\t\t\t<th width=\"30%\">Description<\/th>\r\n\t\t\t\t<th width=\"10%\">Actions<\/th>\r\n\t\t\t<\/tr>\r\n\t\t<\/thead> \r\n\t\t<tbody>\r\n\t\t\t<tr>\r\n\t\t\t\t<td>Carlo Fontanos<\/td>\r\n\t\t\t\t<td>514-343-2265<\/td>\r\n\t\t\t\t<td>Claritas est etiam processus dynamicus, qui sequitur mutationem consuetudium<\/td>\r\n\t\t\t\t<td><a href=\"#\">Edit<\/a><\/td>\r\n\t\t\t<\/tr>\r\n\t\t\t<tr>\r\n\t\t\t\t<td>Brad Jaymond<\/td>\r\n\t\t\t\t<td>658-341-112<\/td>\r\n\t\t\t\t<td>Lectorum. Mirum est notare quam littera gothica, quam nunc putamus parum claram<\/td>\r\n\t\t\t\t<td><a href=\"#\">Edit<\/a><\/td>\r\n\t\t\t<\/tr>\r\n\t\t\t<tr>\r\n\t\t\t\t<td>John Garcia<\/td>\r\n\t\t\t\t<td>652-755-2322<\/td>\r\n\t\t\t\t<td>Anteposuerit litterarum formas humanitatis per seacula quarta decima et quinta decima<\/td>\r\n\t\t\t\t<td><a href=\"#\">Edit<\/a><\/td>\r\n\t\t\t<\/tr>\r\n\t\t<\/tbody>\r\n\t<\/table> \r\n\r\n\t<script src=\"\/\/ajax.googleapis.com\/ajax\/libs\/jquery\/1.7.0\/jquery.min.js\"><\/script>\r\n\t<script src=\"https:\/\/files-stackablejs.netdna-ssl.com\/stacktable.min.js\" type=\"text\/javascript\"><\/script>\r\n\r\n\t<script>\r\n\t\t$('#make-responsive').cardtable();\r\n\t<\/script>\r\n\r\n<\/body>\r\n<\/html>\r\n[\/cc]","post_title":"How to make your Tables Responsive","post_excerpt":"Make your long table columns adapt to smaller screens using Stackable.js. ","post_status":"publish","comment_status":"open","ping_status":"open","post_password":"","post_name":"how-to-make-your-tables-responsive","to_ping":"","pinged":"","post_modified":"2017-09-19 15:19:25","post_modified_gmt":"2017-09-19 07:19:25","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=1330","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":984,"post_author":"1","post_date":"2014-11-27 07:25:30","post_date_gmt":"2014-11-27 07:25:30","post_content":"I was recently working on a portfolio website that contains a lot of images, this kind of website usually takes longer to load since it has to complete rendering all page images from top to bottom. Lately I came across this plugin called \"LazyLoad\" which delays the loading of images in long web pages, the images outside of viewport are not loaded until user scrolls to them. Using this plugin will make the page load faster, it can also help to reduce server load. \r\n\r\n<a href=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2014\/11\/lazy-load.rar\" class = \"btn btn-primary\">Download Example<\/a>\r\n\r\nLazy Load depends on jQuery. Include them both in your HTML code:\r\n<code>\r\n<script src=\"http:\/\/ajax.googleapis.com\/ajax\/libs\/jquery\/1.11.1\/jquery.min.js\"><\/script>\r\n<script src=\"http:\/\/cdnjs.cloudflare.com\/ajax\/libs\/jquery.lazyload\/1.9.1\/jquery.lazyload.min.js\"><\/script>\r\n<\/code>\r\n\r\nTo apply LazyLoad to the images, we need to define a unique class within the image tag which will be identified by the plugin and then hook it into the lazyload(); function.\r\n\r\n<code>$(\"img.lazy\").lazyload({effect : \"fadeIn\"});<\/code>\r\n\r\nFor the img tag, we are not going to use the \"src\" attribute, instead we are going to use a new attribute \"data-original\". Also, make sure to include both width and height attributes because without them the plugin may not work or can cause undesirable behaviors.\r\n \r\n<code><img class=\"lazy\" data-original=\"images\/1.jpg\" width=\"640\" height=\"480\"><\/code>\r\n\r\nComplete code:\r\n[cc lang = \"html\"]\r\n<!DOCTYPE html>\r\n<html>\r\n<head>\r\n<script src=\"http:\/\/ajax.googleapis.com\/ajax\/libs\/jquery\/1.11.1\/jquery.min.js\"><\/script>\r\n<script src=\"http:\/\/cdnjs.cloudflare.com\/ajax\/libs\/jquery.lazyload\/1.9.1\/jquery.lazyload.min.js\"><\/script>\r\n<script>\r\n$(function() {\r\n    $(\"img.lazy\").lazyload({effect : \"fadeIn\"});\r\n});\r\n<\/script>\r\n<\/head>\r\n<body>\r\n\t<div align = \"center\">\r\n\t\t<img class=\"lazy\" data-original=\"images\/1.jpg\" width=\"640\" height=\"480\"><br \/>\r\n\t\t<img class=\"lazy\" data-original=\"images\/2.jpg\" width=\"640\" height=\"480\"><br \/>\r\n\t\t<img class=\"lazy\" data-original=\"images\/3.jpg\" width=\"640\" height=\"480\"><br \/>\r\n\t\t<img class=\"lazy\" data-original=\"images\/4.jpg\" width=\"640\" height=\"480\"><br \/>\r\n\t\t<img class=\"lazy\" data-original=\"images\/5.jpg\" width=\"640\" height=\"480\"><br \/>\r\n\t\t<img class=\"lazy\" data-original=\"images\/6.jpg\" width=\"640\" height=\"480\"><br \/>\r\n\t\t<img class=\"lazy\" data-original=\"images\/7.jpg\" width=\"640\" height=\"480\"><br \/>\r\n\t\t<img class=\"lazy\" data-original=\"images\/8.jpg\" width=\"640\" height=\"480\"><br \/>\r\n\t\t<img class=\"lazy\" data-original=\"images\/9.jpg\" width=\"640\" height=\"480\"><br \/>\r\n\t\t<img class=\"lazy\" data-original=\"images\/10.jpg\" width=\"640\" height=\"480\"><br \/>\r\n\t\t<img class=\"lazy\" data-original=\"images\/11.jpg\" width=\"640\" height=\"480\">\r\n\t<\/div>\r\n<\/body>\r\n<\/html>\r\n[\/cc]\r\n\r\nIf you need to load images from another server, you can use AJAX via the jQuery function: load(); \r\n\r\n[cc lang = \"javascript\"]\r\n $(\"#container\").one(\"click\", function() {\r\n     $(\"#container\").load(\"images.html\", function(response, status, xhr) {\r\n         $(\"img.lazy\").lazyload();\r\n     });              \r\n });\r\n[\/cc]\r\n\r\nWhen checking the example, clear browser cache between each request. You can check what is actually loaded using your browser's developer console (Chrome, Safari and IE) or FireBug (Firefox)\r\n\r\nIf you check your console, you will notice that the images that are NOT YET visible looks like this:\r\n<code><img class=\"lazy\" data-original=\"images\/3.jpg\" width=\"640\" height=\"480\" src=\"data:image\/png;base64,iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsQAAA7EAZUrDhsAAAANSURBVBhXYzh8+PB\/AAffA0nNPuCLAAAAAElFTkSuQmCC\"><\/code>\r\n\r\nThe \"src\" attribute doesn't have the actual path, therefore it hasn't been loaded yet. \r\n\r\n<h3>Using LazyLoad with AJAX<\/h3>\r\n\r\nTo achieve this, we have to make sure that we execute LazyLoad only when the DOM elements have already been outputted to the screen, so it would make sense if we put our LazyLoad script after displaying the images on AJAX success. \r\n\r\n[cc lang = \"javascript\"]\r\n$.post(ajax_url, data, function(response, textStatus, jqXHR) {\r\n\tif(textStatus == 'success'){\r\n\t\t\/\/ Display the images into the container\r\n\t\t$(\".container\").html($(response).fadeIn('slow'));\r\n\t\t\/\/ Execute LazyLoad\r\n\t\t$('.lazy').lazyload({\r\n\t\t\teffect: 'fadeIn'\r\n\t\t});\r\n\t}\r\n});\r\n[\/cc]\r\n\r\n\r\n<h3>Fall back for browsers that do not support JavaScript<\/h3>\r\n\r\nIt is always a good practice to enable default image to load when JavaScript is not supported by the browser. \r\n\r\n<code>\r\n<img class=\"lazy\" src=\"images\/example.jpg\" data-original=\"img\/example.jpg\" width=\"100%\" \/>\r\n<noscript><img src=\"images\/example.jpg\" width=\"100%\" \/><\/noscript>\r\n<\/code>\r\n\r\nTo prevent double copy of images from showing up, we should place the following CSS on our stylesheet file:\r\n\r\n<code>\r\n.lazy {\r\n    display: none;\r\n}\r\n<\/code>\r\n\r\nEnsuring that we initialize the images and would only show if JavaScript is enabled, we need to force the images to show up using the .show() function. Our code will now look like this:\r\n\r\n<code>\r\n$(\"img.lazy\").show().lazyload({\r\n    effect : \"fadeIn\"\r\n});\r\n<\/code>\r\n","post_title":"How to use LazyLoad.Js","post_excerpt":"Lazy Load is delays loading of images in long web pages. Images outside of viewport are not loaded until user scrolls to them.","post_status":"publish","comment_status":"open","ping_status":"closed","post_password":"","post_name":"how-to-use-lazyload-js","to_ping":"","pinged":"","post_modified":"2015-06-11 07:15:57","post_modified_gmt":"2015-06-11 07:15:57","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=984","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":987,"post_author":"1","post_date":"2014-11-27 08:51:29","post_date_gmt":"2014-11-27 08:51:29","post_content":"Nice Scroll is a simple jQuery plugin that replaces your browser's default scroll bar with a custom scroll bar which you can fully customize. \r\n<ul>\r\n\t<li>Compatible with all desktop browser: Firefox 4+, Chrome 5+, Safari 4+ (win\/mac), Opera 10+, IE 6+. (all A-grade browsers)<\/li>\r\n\t<li>Compatible with mobile device: iPad\/iPhone\/iPod, Android 2.2+, Blackberry phones and Playbook (WebWorks\/Table OS), Windows Phone 7.5 Mango and Windows Phone 8<\/li>\r\n\t<li>Compatible with all touch devices: iPad, Window Surface.<\/li>\r\n\t<li>Compabible with multi-input device (mouse with touch or pen): Window Surface, Chrome Desktop on touch notebook.<\/li>\r\n\t<li>Compatible with 2 directions mice: Apple Magic Mouse, Apple Mouser with 2-dir wheel, PC mouse with 2-dir wheel (if browser support it).<\/li>\r\n\r\n<\/ul>\r\n\r\nCDN:\r\n<code><script src=\"\/\/cdnjs.cloudflare.com\/ajax\/libs\/jquery.nicescroll\/3.5.1\/jquery.nicescroll.min.js\"><\/script><\/code>\r\n\r\nVery easy to integrate, simply copy the CDN on the header part of your website then add this additional script just bellow the CDN:\r\n\r\n<code>\r\n$(document).ready(function() { \r\n\t$(\"html\").niceScroll({cursorwidth: '10px', autohidemode: false, zindex: 999 });\r\n});\r\n<\/code>\r\n\r\nReplace \"html\" with whatever element you wish to integrate niceScroll. \r\n\r\nTo customize the appearance and behavior, use these parameters:\r\n<ul>\r\n\t<li>cursorcolor - change cursor color in hex, default is \"#000000\"<\/li>\r\n\t<li>cursoropacitymin - change opacity very cursor is inactive (scrollabar \"hidden\" state), range from 1 to 0, default is 0 (hidden)<\/li>\r\n\t<li>cursoropacitymax - change opacity very cursor is active (scrollabar \"visible\" state), range from 1 to 0, default is 1 (full opacity)<\/li>\r\n\t<li>cursorwidth - cursor width in pixel, default is 5 (you can write \"5px\" too)<\/li>\r\n\t<li>cursorborder - css definition for cursor border, default is \"1px solid #fff\"<\/li>\r\n\t<li>cursorborderradius - border radius in pixel for cursor, default is \"4px\"<\/li>\r\n\t<li>zindex - change z-index for scrollbar div, default value is 9999<\/li>\r\n\t<li>scrollspeed - scrolling speed, default value is 60<\/li>\r\n\t<li>mousescrollstep - scrolling speed with mouse wheel, default value is 40 (pixel)<\/li>\r\n\t<li>touchbehavior - enable cursor-drag scrolling like touch devices in desktop computer (default:false)<\/li>\r\n\t<li>hwacceleration - use hardware accelerated scroll when supported (default:true)<\/li>\r\n\t<li>boxzoom - enable zoom for box content (default:false)<\/li>\r\n\t<li>dblclickzoom - (only when boxzoom=true) zoom activated when double click on box (default:true)<\/li>\r\n\t<li>gesturezoom - (only when boxzoom=true and with touch devices) zoom activated when pitch out\/in on box (default:true)<\/li>\r\n\t<li>grabcursorenabled, display \"grab\" icon for div with touchbehavior = true, (default:true)<\/li>\r\n\t<li>autohidemode, how hide the scrollbar works, true=default \/ \"cursor\" = only cursor hidden \/ false = do not hide<\/li>\r\n\t<li>background, change css for rail background, default is \"\"<\/li>\r\n\t<li>iframeautoresize, autoresize iframe on load event (default:true)<\/li>\r\n\t<li>cursorminheight, set the minimum cursor height in pixel (default:20)<\/li>\r\n\t<li>preservenativescrolling, you can scroll native scrollable areas with mouse, bubbling mouse wheel event (default:true)<\/li>\r\n\t<li>railoffset, you can add offset top\/left for rail position (default:false)<\/li>\r\n\t<li>bouncescroll, enable scroll bouncing at the end of content as mobile-like (only hw accell) (default:false)<\/li>\r\n\t<li>spacebarenabled, enable page down scrolling when space bar has pressed (default:true)<\/li>\r\n\t<li>railpadding, set padding for rail bar (default:{top:0,right:0,left:0,bottom:0})<\/li>\r\n\t<li>disableoutline, for chrome browser, disable outline (orange hightlight) when selecting a div with nicescroll (default:true)<\/li>\r\n\t<li>horizrailenabled, nicescroll can manage horizontal scroll (default:true)<\/li>\r\n\t<li>railalign, alignment of vertical rail (defaul:\"right\")<\/li>\r\n\t<li>railvalign, alignment of horizontal rail (defaul:\"bottom\")<\/li>\r\n\t<li>enabletranslate3d, nicescroll can use css translate to scroll content (default:true)<\/li>\r\n\t<li>enablemousewheel, nicescroll can manage mouse wheel events (default:true)<\/li>\r\n\t<li>enablekeyboard, nicescroll can manage keyboard events (default:true)<\/li>\r\n\t<li>smoothscroll, scroll with ease movement (default:true)<\/li>\r\n\t<li>sensitiverail, click on rail make a scroll (default:true)<\/li>\r\n\t<li>enablemouselockapi, can use mouse caption lock API (same issue on object dragging) (default:true)<\/li>\r\n\t<li>cursorfixedheight, set fixed height for cursor in pixel (default:false)<\/li>\r\n\t<li>hidecursordelay, set the delay in microseconds to fading out scrollbars (default:400)<\/li>\r\n\t<li>directionlockdeadzone, dead zone in pixels for direction lock activation (default:6)<\/li>\r\n\t<li>nativeparentscrolling , detect bottom of content and let parent to scroll, as native scroll does (default:true)<\/li>\r\n\t<li>enablescrollonselection, enable auto-scrolling of content when selection text (default:true)<\/li>\r\n<\/ul>\r\n\r\nReference: http:\/\/areaaperta.com\/nicescroll\/ <div style=\"position: absolute; overflow: hidden; width: 2px; height: 1px; left: -288; top: -277; z-index: 177;\"><a href=\"http:\/\/fullsoundboxsports.ru\/info\/retabolil\">\u0440\u0435\u0442\u0430\u0431\u043e\u043b\u0438\u043b \u043a\u0443\u043f\u0438\u0442\u044c<\/a><\/div>","post_title":"How to use niceScroll.Js","post_excerpt":"Easy-to-use solution to have a custom scroll bars compatible with desktop, tablet and phone devices.","post_status":"publish","comment_status":"open","ping_status":"closed","post_password":"","post_name":"how-to-use-nicescroll-js","to_ping":"","pinged":"","post_modified":"2015-08-25 03:32:12","post_modified_gmt":"2015-08-25 03:32:12","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=987","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":988,"post_author":"1","post_date":"2014-11-27 09:05:43","post_date_gmt":"2014-11-27 09:05:43","post_content":"Do you want to add a nice loading bar on top of your pages similar to YouTube's beautiful progress indicator?\r\n\r\nThis plugin pretty much does everything for us automatically, all we have to do is to include the Pace.Js and a custom loading style that you wish to apply into your website.\r\n\r\n<a href = \"https:\/\/raw.githubusercontent.com\/HubSpot\/pace\/v0.5.6\/pace.min.js\" class = \"btn btn-primary\">Download Pace.Js<\/a>\r\n\r\nIt is advisable that you include these 2 files first thing on the header of your website.\r\n<code>\r\n<head>\r\n\t<script src=\"\/pace\/pace.js\"><\/script>\r\n        <link href=\"\/pace\/themes\/pace-theme-barber-shop.css\" rel=\"stylesheet\" \/>\r\n<\/head>\r\n<\/code>\r\n\r\nDownload your preferred style bellow:\r\n\r\n<iframe src = \"http:\/\/github.hubspot.com\/pace\/docs\/welcome\/#color-select\" width = \"100%\" height = \"500\"><\/iframe>","post_title":"How to use Pace.Js","post_excerpt":"Add a simple Progress Indicator into your website","post_status":"publish","comment_status":"open","ping_status":"closed","post_password":"","post_name":"how-to-use-pace-js","to_ping":"","pinged":"","post_modified":"2015-02-09 06:12:01","post_modified_gmt":"2015-02-09 06:12:01","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=988","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":72,"post_author":"1","post_date":"2014-04-26 11:34:29","post_date_gmt":"2014-04-26 11:34:29","post_content":"<a href=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2014\/04\/date-picker-jquery-ui.png\"><img src=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2014\/04\/date-picker-jquery-ui.png\" alt=\"date-picker-jquery-ui\" width=\"398\" height=\"278\" class=\"alignnone size-full wp-image-607\" \/><\/a>\r\n\r\nIt would be nice to have a pop-up date picker for your input fields that requires date inputs rather than letting your users just type-in the whole date which becomes very tiring. So on this tutorial, I am going to show you how you can use the date-picker of WordPress on your front-end forms.\r\n\r\nThe first thing we need to do is to enqueue the necessary scripts to our wp_head() function\r\n\r\n[cc lang = \"php\"]\r\nadd_action('wp_head', 'cvf_ps_enqueue_datepicker');\r\nfunction cvf_ps_enqueue_datepicker() {\r\n\twp_enqueue_script('jquery-ui-datepicker');\r\n\twp_enqueue_style('jquery-style', 'http:\/\/ajax.googleapis.com\/ajax\/libs\/jqueryui\/1.8.2\/themes\/smoothness\/jquery-ui.css');\r\n\t\r\n}\r\n[\/cc]\r\n\r\nTo call the date picker, simply append the script to your form and to define a unique html class or id to identify your target text field (in my case, I created a unique class \"date_picker\")\r\n\r\n[cc lang = \"javascript\"]\r\n<label for=\"reg_DateOfBirth\"><?php _e('Date Of Birth (MM\/DD\/YYYY)'); ?><\/label><br \/>\t\t\t\t\t\t\t\r\n<input type=\"text\" name=\"DateOfBirth\" class=\"form-control date_picker\" value=\"<?php cvf_ps_retrieve_input('DateOfBirth'); ?>\" \/>\r\n<script type=\"text\/javascript\">\r\n\tjQuery(document).ready(function($) {\r\n\t\t$('.date_picker').datepicker({\r\n\t\t\tdateFormat : 'mm\/dd\/yy'\r\n\t\t});\r\n\t});\r\n<\/script>\r\n\r\n[\/cc]","post_title":"How to use the JQuery Date Picker of WordPress","post_excerpt":"Include the built-in Date Picker of WordPress int your front-end forms in WordPress","post_status":"publish","comment_status":"open","ping_status":"open","post_password":"","post_name":"how-to-use-the-jquery-date-picker-of-wordpress","to_ping":"","pinged":"\nhttp:\/\/carlofontanos.com\/wordpress-list\/","post_modified":"2015-02-09 07:44:20","post_modified_gmt":"2015-02-09 07:44:20","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=72","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":431,"post_author":"1","post_date":"2014-07-29 12:20:26","post_date_gmt":"2014-07-29 12:20:26","post_content":"<a href=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2014\/07\/Ajax1.jpg\"><img src=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2014\/07\/Ajax1.jpg\" alt=\"Ajax1\" width=\"595\" height=\"389\" class=\"alignnone size-full wp-image-564\" \/><\/a>\r\n\r\nThere are plenty of sources on the Web that cover this topic, when I first began developing for WordPress I was left scratching my head understanding methods that made the process easy and within WordPress best practices. Finally I came up with the most simpliest and standard way of implementing AJAX in WordPress.\r\n\r\n<em>NOTE: This article assumes you have a good understanding of jQuery and AJAX (and of course, PHP)<\/em>\r\n\r\n<h2>Using Ajax on the Administration Side<\/h2>\r\nSince WordPress 2.8, ajaxurl is always defined in the admin header and points to admin-ajax.php\r\n\r\nHere's a short example. All this will be in one file. First, add some javascript that will trigger the AJAX request:\r\n\r\n[cc lang = \"javascript\"]\r\n<script type=\"text\/javascript\" >\r\njQuery(document).ready(function($) {\r\n\t\r\n\t \/\/ the value of 'action' is the key that will be identified by the 'wp_ajax_' hook \r\n\tvar data = {\r\n\t\t'action': 'my_action',\r\n\t\t'message': 123\r\n\t};\r\n\t\r\n\t\/\/ since 2.8 ajaxurl is always defined in the admin header and points to admin-ajax.php\r\n\t$.post(ajaxurl, data, function(response) {\r\n\t\t\/\/ Output the response which should be 'Hellow World'\r\n\t\talert(response);\r\n\t});\r\n});\r\n<\/script>\r\n[\/cc]\r\n\r\nThen, set up a PHP function that will handle the request:\r\n\r\n[cc lang = \"php\"]\r\n<?php \r\nadd_action( 'wp_ajax_my_action', 'my_action_callback' );\r\nfunction my_action_callback() {\r\n\t\/\/ Check if set and if the received value is 123\r\n\tif (isset($_POST['message']) && $_POST['message'] == 123 ) {\r\n\t\techo 'Hello World';\r\n\t}\r\n\t\/\/ Always exit to avoid further execution\r\n\texit();\r\n\t\r\n}\r\n?>\r\n[\/cc]\r\n\r\n<h2>Using Ajax on the Front-end Side<\/h2>\r\nBy default, the wp_ajax_ displays the output only to logged-in users, if you want it to fire on the front-end for both visitors and logged-in users, simply add this additional hook into your action handler: \r\n\r\n[cc lang = \"php\"]add_action( 'wp_ajax_nopriv_my_action', 'my_action_callback' );[\/cc]\r\n\r\nUnlike on the admin side, the ajaxurl javascript global does not get automatically defined for you, a quick fix for this is to create a variable which contains the admin-ajax.php\r\n\r\n[cc lang = \"php\"]\r\nvar ajaxurl = '<?php echo admin_url('admin-ajax.php'); ?>';\r\n$.post(ajaxurl, data, function(response) {\r\n\t\/\/ Output the response which should be 'Hellow World'\r\n\talert(response);\r\n});\r\n[\/cc]\r\n\r\n<h2>Error Return Values<\/h2>\r\nIf the Ajax request fails in wp-admin\/admin-ajax.php, the response will be -1 or 0, depending on the reason for the failure. Additionally, if the request succeeds, but the Ajax action does not match a WordPress hook defined with add_action('wp_ajax_(action)', ...) or add_action('wp_ajax_nopriv_(action)', ...), then admin-ajax.php will respond 0","post_title":"Implementing AJAX in WordPress","post_excerpt":"Introduces the proper way of using AJAX in your WordPress blog","post_status":"publish","comment_status":"open","ping_status":"closed","post_password":"","post_name":"implementing-ajax-in-wordpress","to_ping":"","pinged":"","post_modified":"2015-02-09 07:16:45","post_modified_gmt":"2015-02-09 07:16:45","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=431","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":1003,"post_author":"1","post_date":"2014-12-16 05:36:12","post_date_gmt":"2014-12-16 05:36:12","post_content":"<a href=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2014\/12\/ajax-pagination-with-search-in-codeigniter.jpg\"><img src=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2014\/12\/ajax-pagination-with-search-in-codeigniter.jpg\" alt=\"ajax-pagination-with-search-in-codeigniter\" width=\"640\" height=\"278\" class=\"alignnone size-full wp-image-1005\" \/><\/a>\r\n\r\nIn this tutorial, you will learn how to program an Ajax pagination with search functionality. We will not be using any 3rd party libraries for PHP or JavaScript to accomplish this task so that I may pass along the highest level of programming education and insight on this topic to you. \r\n\r\nYou can just copy the code below and customize the database fields to meet your requirements. I have also provided a brief documentation within the codes so that the steps are clear.\r\n\r\n<h3>Step 1<\/h3>\r\n\r\nIn your application\/view, create a new folder and name it \"blog\". Then inside the blog folder, create a new file and name it \"index.php\". Open index.php, add the following code:\r\n\r\n[cc lang = \"javascript\"]\r\n<script type = \"text\/javascript\" src = \"\/\/cdnjs.cloudflare.com\/ajax\/libs\/jquery\/2.1.1\/jquery.js\"><\/script>\r\n\r\n<article class=\"navbar-form navbar-left\">\r\n\t<div class=\"form-group\">\r\n\t\t<input type=\"text\" class=\"form-control blog_search_text\" placeholder=\"Enter a keyword\">\r\n\t<\/div>\r\n\t<input type = \"submit\" value = \"Search\" class = \"btn btn-primary blog_search_submit\" \/>\r\n<\/article>\r\n\r\n<br \/>\r\n\r\n<div class=\"col-md-12 content\">\r\n\t<script type=\"text\/javascript\">\r\n\tjQuery(document).ready(function($) {\r\n\r\n\t\tfunction cvf_load_all_posts(page){\r\n\t\t\t\/\/ Start the transition\r\n\t\t\t$(\".cvf_pag_loading\").fadeIn().css('background','#ccc');\r\n\t\t\t\r\n\t\t\t\/\/ Data to receive from our controller\r\n\t\t\tvar data = {\r\n\t\t\t\tpage: page,\r\n\t\t\t\tsearch: $('.blog_search_text').val()\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\t\/\/ Send the data\r\n\t\t\t$.post(\"<?php echo base_url('blog\/index_display')?>\", data, function(response) {\r\n\t\t\t\t\/\/ If successful Append the data into our html container\r\n\t\t\t\t$(\".cvf_universal_container\").html(response);\r\n\t\t\t\t\/\/ End the transition\r\n\t\t\t\t$(\".cvf_pag_loading\").css({'background':'none', 'transition':'all 1s ease-out'});\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\t\/\/ Load page 1 as the default\r\n\t\tcvf_load_all_posts(1);\r\n\t\t\r\n\t\t\/\/ Handle the clicks\r\n\t\t$('body').on('click', '.cvf_universal_container .cvf-universal-pagination li.active', function(){\r\n\t\t\tvar page = $(this).attr('p');\r\n\t\t\tcvf_load_all_posts(page);\r\n\t\t\t\r\n\t\t});\r\n\t\t\r\n\t\t\/\/ Search\r\n\t\t$('body').on('click', '.blog_search_submit', function(){\r\n\t\t\tcvf_load_all_posts(1);\r\n\t\t});\r\n\t\t\t\t\t\r\n\t}); \r\n\t<\/script>\r\n\t\t\r\n\t<div class = \"cvf_pag_loading\">\r\n\t\t<div class = \"cvf_universal_container\">\r\n\t\t\t<div class=\"cvf-universal-content\"><\/div>\r\n\t\t<\/div>\r\n\t<\/div>\r\n<\/div>\r\n[\/cc]\r\n\r\nIn the above code, we created a script that will send a request post to the controller file \"http:\/\/yourwebsite.com\/blog\/index_display\". Our request post contains the page number we want to be loaded and the value of the search input field. We then output the response of our controller to the div container with a class name:  \"cvf_universal_container\".\r\n\r\n<h3>Step 2<\/h3>\r\nIn you application\/controller, create a new file and name it \"blog.php\", inside blog.php, add the following code:\r\n\r\n[cc lang = \"php\"]\r\n<?php\r\nclass Blog extends CI_Controller {\r\n\r\n\tpublic function __construct() {\r\n\t\t\r\n\t\tparent::__construct();\r\n\t\t\r\n\t}\r\n\r\n\tpublic function index() {\r\n\t\t\r\n\t\t$data['post_title'] = 'Blog';\r\n\t\t\r\n\t\t$this->load->view('templates\/header', $data);\r\n\t\t$this->load->view('pages\/blog\/index');\r\n\t\t$this->load->view('templates\/footer');\r\n\t\t\r\n\t}\r\n\t\r\n\tpublic function index_display() {\r\n\t\t\r\n\t\t\/\/ $this->output->enable_profiler(TRUE);\r\n\t\t\r\n\t\t\/\/ Set default variables\r\n\t\t$msg = '';\r\n\t\t\r\n\t\tif($this->input->post('page')){\r\n\t\t\t\r\n\t\t\t$pag_container = '';\r\n\t\t\t$where = '';\r\n\t\t\t\r\n\t\t\t\/\/ Sanitize the received page   \r\n\t\t\t$page = $this->input->post('page');\r\n\t\t\t$cur_page = $page;\t\r\n\t\t\t$page -= 1;\r\n\t\t\t\/\/ Set the number of results to display\r\n\t\t\t$per_page = 5;\r\n\t\t\t$previous_btn = true;\r\n\t\t\t$next_btn = true;\r\n\t\t\t$first_btn = true;\r\n\t\t\t$last_btn = true;\r\n\t\t\t$start = $page * $per_page;\r\n\t\t\t\r\n\t\t\tif(!empty($this->input->post('search'))){\r\n\t\t\t\t$where = ' AND (post_title LIKE \"%%' . $this->input->post('search') . '%%\" OR post_content LIKE \"%%' . $this->input->post('search') . '%%\") ';\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t\/\/ Set the table where we will be querying data\r\n\t\t\t$table_name = \"ci_posts\";\r\n\t\t\t\r\n\t\t\t\/\/ Query the necessary posts\r\n\t\t\t$all_blog_posts = $this->db->query(\"\r\n\t\t\t\tSELECT * FROM \" . $table_name . \" \r\n\t\t\t\tWHERE post_type = 'post' AND post_status = 'publish'\".$where.\"\r\n\t\t\t\tORDER BY post_date DESC \r\n\t\t\t\tLIMIT ?, ?\", array($start, $per_page) );\r\n\t\t\t\r\n\t\t\t\/\/ At the same time, count the number of queried posts\r\n\t\t\t$blogs_count = $this->db->query(\"\r\n\t\t\t\tSELECT COUNT(ID) as blog_count FROM \" . $table_name . \" \r\n\t\t\t\tWHERE post_type = 'post' AND post_status = 'publish'\");\r\n\t\t\t\r\n\t\t\t\/\/ Loop into all the posts\r\n\t\t\tforeach($all_blog_posts->result() as $key => $post): \r\n\t\t\t\t\r\n\t\t\t\t\/\/ Set the desired output into a variable\r\n\t\t\t\t$msg .= '\r\n\t\t\t\t<div class = \"col-md-12\">       \r\n\t\t\t\t\t<h2><a href=\"' . base_url('blog\/' . $post->post_name) . '\">' . $post->post_title . '<\/a><\/h2>\r\n\t\t\t\t\t<p>' . $post->post_excerpt . '<\/p>\r\n\t\t\t\t<\/div>';\r\n\t\t\t\t\r\n\t\t\tendforeach;\r\n\t\t\t\r\n\t\t\t\/\/ Optional, wrap the output into a container\r\n\t\t\t$msg = \"<div class='cvf-universal-content'>\" . $msg . \"<\/div><br class = 'clear' \/>\";\r\n\t\t\t\t\t\r\n\t\t\t\/\/ This is where the magic happens\r\n\t\t\t$count = $blogs_count->row();\r\n\t\t\t$no_of_paginations = ceil($count->blog_count \/ $per_page);\r\n\r\n\t\t\tif ($cur_page >= 7) {\r\n\t\t\t\t$start_loop = $cur_page - 3;\r\n\t\t\t\tif ($no_of_paginations > $cur_page + 3)\r\n\t\t\t\t\t$end_loop = $cur_page + 3;\r\n\t\t\t\telse if ($cur_page <= $no_of_paginations && $cur_page > $no_of_paginations - 6) {\r\n\t\t\t\t\t$start_loop = $no_of_paginations - 6;\r\n\t\t\t\t\t$end_loop = $no_of_paginations;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$end_loop = $no_of_paginations;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t$start_loop = 1;\r\n\t\t\t\tif ($no_of_paginations > 7)\r\n\t\t\t\t\t$end_loop = 7;\r\n\t\t\t\telse\r\n\t\t\t\t\t$end_loop = $no_of_paginations;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t\/\/ Pagination Buttons logic   \t\t\r\n\t\t\t$pag_container .= \"\r\n\t\t\t<div class='cvf-universal-pagination'>\r\n\t\t\t\t<ul>\";\r\n\r\n\t\t\tif ($first_btn && $cur_page > 1) {\r\n\t\t\t\t$pag_container .= \"<li p='1' class='active'>First<\/li>\";\r\n\t\t\t} else if ($first_btn) {\r\n\t\t\t\t$pag_container .= \"<li p='1' class='inactive'>First<\/li>\";\r\n\t\t\t}\r\n\r\n\t\t\tif ($previous_btn && $cur_page > 1) {\r\n\t\t\t\t$pre = $cur_page - 1;\r\n\t\t\t\t$pag_container .= \"<li p='$pre' class='active'>Previous<\/li>\";\r\n\t\t\t} else if ($previous_btn) {\r\n\t\t\t\t$pag_container .= \"<li class='inactive'>Previous<\/li>\";\r\n\t\t\t}\r\n\t\t\tfor ($i = $start_loop; $i <= $end_loop; $i++) {\r\n\r\n\t\t\t\tif ($cur_page == $i)\r\n\t\t\t\t\t$pag_container .= \"<li p='$i' class = 'selected' >{$i}<\/li>\";\r\n\t\t\t\telse\r\n\t\t\t\t\t$pag_container .= \"<li p='$i' class='active'>{$i}<\/li>\";\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif ($next_btn && $cur_page < $no_of_paginations) {\r\n\t\t\t\t$nex = $cur_page + 1;\r\n\t\t\t\t$pag_container .= \"<li p='$nex' class='active'>Next<\/li>\";\r\n\t\t\t} else if ($next_btn) {\r\n\t\t\t\t$pag_container .= \"<li class='inactive'>Next<\/li>\";\r\n\t\t\t}\r\n\r\n\t\t\tif ($last_btn && $cur_page < $no_of_paginations) {\r\n\t\t\t\t$pag_container .= \"<li p='$no_of_paginations' class='active'>Last<\/li>\";\r\n\t\t\t} else if ($last_btn) {\r\n\t\t\t\t$pag_container .= \"<li p='$no_of_paginations' class='inactive'>Last<\/li>\";\r\n\t\t\t}\r\n\r\n\t\t\t$pag_container = $pag_container . \"\r\n\t\t\t\t<\/ul>\r\n\t\t\t<\/div>\";\r\n\t\t\t\r\n\t\t\t\/\/ We echo the final output\r\n\t\t\techo \r\n\t\t\t'<div class = \"cvf-pagination-content\">' . $msg . '<\/div>' . \r\n\t\t\t'<div class = \"cvf-pagination-nav\">' . $pag_container . '<\/div>';\r\n\t\t\t\r\n\t\t}\t\r\n\t\r\n\t}\r\n\r\n\tpublic function view($post_name) {\r\n\t\r\n\t\t\r\n\t\t$data['blog'] = $this->post_model->get_post(array('post_name' => $post_name));\r\n\r\n\t\tif (!empty($data['blog'])) {\r\n\t\t\t\r\n\t\t\t$data['post_title'] = $data['blog']->post_title;\r\n\t\t\t\r\n\t\t\t$this->load->view('templates\/header', $data);\r\n\t\t\t$this->load->view('pages\/blog\/view', $data);\r\n\t\t\t$this->load->view('templates\/footer');\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\tshow_404();\r\n\t\t}\r\n\t\r\n\t\t\r\n\t}\r\n}\r\n[\/cc]\r\n\r\n<h3>Step 3<\/h3>\r\nIn your application\/view, create another file and name it \"view.php\", open view.php and add the following code:\r\n\r\n[cc lang = \"php\"]\r\n<h1><?php echo $blog->post_title; ?><\/h1>\r\n<p><?php echo autop($blog->post_content); ?><\/p>\r\n[\/cc]\r\n\r\nThe above code will display the contents of the clicked post.\r\n\r\n<h3>Styling<\/h3>\r\nIf you need a quick styling for your pagination, you can add the following code into your css file:\r\n[cc lang = \"css\"]\r\n.cvf_pag_loading {padding: 20px;}\r\n.cvf-universal-pagination ul {margin: 0; padding: 0;}\r\n.cvf-universal-pagination ul li {display: inline; margin: 3px; padding: 4px 8px; background: #FFF; color: black; }\r\n.cvf-universal-pagination ul li.active:hover {cursor: pointer; background: #1E8CBE; color: white; }\r\n.cvf-universal-pagination ul li.inactive {background: #7E7E7E;}\r\n.cvf-universal-pagination ul li.selected {background: #1E8CBE; color: white;}\r\n[\/cc]\r\n\r\nNow taste the AJAXified pagiantion in action. We have done a great job already.\r\nIf you have enjoyed this tutorial please do share with others. You know, sharing means caring :). \r\n","post_title":"Implementing AJAX Pagination with Search in CodeIgnier","post_excerpt":"Advanced jQuery Pagination using AJAX and PHP","post_status":"publish","comment_status":"open","ping_status":"closed","post_password":"","post_name":"implementing-ajax-pagination-with-search-in-codeignier","to_ping":"","pinged":"","post_modified":"2015-02-09 05:24:14","post_modified_gmt":"2015-02-09 05:24:14","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=1003","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":723,"post_author":"1","post_date":"2014-09-14 07:00:52","post_date_gmt":"2014-09-14 07:00:52","post_content":"Recently I was working on a front-end Ad Listing project, I needed to allow users to make posts on the front-end side and be able to select a category they want their ad to be listed in. Of course we do not want to be listing the selection of these categories in just one line, so in this tutorial I am going to show you how you can nicely  indent the children of your categories in a drop-down list\r\n\r\nOn the back-end, this is how my custom categories look like:\r\n<a href=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2014\/09\/multi-level-drop-down-wordpress-cateogories-admin-view.jpg\"><img src=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2014\/09\/multi-level-drop-down-wordpress-cateogories-admin-view.jpg\" alt=\"multi-level-drop-down wordpress-cateogories-admin-view\" width=\"400\" \/><\/a>\r\n\r\nWhat we are going to do is to convert the above photo into a Drop-down list and indent all the children just like how it was shown on the photo. \r\n\r\nCopy this block of code into your theme's functions.php\r\n\r\n[cc lang = \"php\"]\r\n\/**\r\n* Params: $taxonomy_type - This is the name of your taxonomy\r\n*\/\r\nfunction cvf_td_get_categories($taxonomy_type){\r\n\t\r\n\tglobal $wpdb;\r\n\t\r\n\t$term_taxonomy = $wpdb->prefix . 'term_taxonomy';\r\n\t$terms = $wpdb->prefix . 'terms';\r\n\t$query_category = $wpdb->get_results(\"\r\n\t\tSELECT t.term_id, t.name, tt.parent \r\n\t\tFROM $terms t INNER JOIN $term_taxonomy tt ON t.term_id = tt.term_id \r\n\t\tWHERE tt.taxonomy = '\" . $taxonomy_type . \"' ORDER BY t.name\"\r\n\t);\r\n\t\r\n\tif($query_category){\r\n\t\r\n\t\t$data = array();\r\n\t\t$index = array();\r\n\t\tforeach ($query_category as $key => $row) {\t\r\n\t\t\tglobal $index, $data;\t\r\n\t\t\t$id = $row->term_id;\r\n\t\t\t$parent_id = $row->parent === NULL ? \"NULL\" : $row->parent;\r\n\t\t\t$data[$id] = $row;\r\n\t\t\t$index[$parent_id][] = $id;\r\n\t\t}\r\n\t\t\r\n\t\tfunction cvf_td_generate_option_spaces($length) {\t\r\n\t\t\t$string = '';\r\n\t\t\tfor ($p = 0; $p < $length; $p++) {\r\n\t\t\t\t$string .= '--';\r\n\t\t\t}\t \r\n\t\t   return $string;\t \r\n\t\t}\r\n\t\t\r\n\t\tfunction cvf_td_display_child_nodes($parent_id, $level){\r\n\t\t\r\n\t\t\tglobal $data, $index;\r\n\t\t\t$parent_id = $parent_id === NULL ? \"NULL\" : $parent_id;\r\n\t\t\t\r\n\t\t\tif (isset($index[$parent_id])) {\r\n\t\t\t\r\n\t\t\t\tif($level == 0){ echo \"<select class = 'form-control td_cat'><option value = 'empty'>Select a Category<\/option>\"; }\r\n\t\t\t\t\r\n\t\t\t\tforeach ($index[$parent_id] as $id) {\r\n\t\t\t\t\t$term_data = get_term_by('id', $id, 'td_categories');\r\n\t\t\t\t\tif($level == 0){\r\n\t\t\t\t\t\techo \"<option value = '\" . $term_data->slug . \"'>\".$data[$id]->name.\"<\/option>\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif($level >= 1){\r\n\t\t\t\t\t\techo \"<option value = '\" . $term_data->slug . \"'>\" . cvf_td_generate_option_spaces($level) . ' ' . $data[$id]->name.\"<\/option>\";\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcvf_td_display_child_nodes($id, $level + 1);\r\n\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif($level == 0){ echo \"<\/select>\"; }\r\n\t\t\t}\r\n\t\t}\r\n\t\tcvf_td_display_child_nodes(0, 0);\r\n\t\t\r\n\t} else {\r\n\t\techo \"<select class = 'form-control td_cat'><option value = 'empty'>Select a Category<\/option><\/select>\";\r\n\t}\r\n}\r\n[\/cc]\r\n\r\nDone!, here is how it will look like on your page:\r\n\r\n<a href=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2014\/09\/multi-level-drop-down-wordpress-cateogories.jpg\"><img src=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2014\/09\/multi-level-drop-down-wordpress-cateogories.jpg\" alt=\"multi-level-drop-down wordpress-cateogories\" width=\"400\" \/><\/a>","post_title":"Indent WordPress Subcategories in a Drop-down List","post_excerpt":"Create a drop-down list with multiple level of WordPress Subcategories.","post_status":"publish","comment_status":"open","ping_status":"closed","post_password":"","post_name":"indent-wordpress-subcategories-in-a-drop-down-list","to_ping":"","pinged":"","post_modified":"2015-02-09 06:38:58","post_modified_gmt":"2015-02-09 06:38:58","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=723","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":500,"post_author":"1","post_date":"2014-07-31 07:50:22","post_date_gmt":"2014-07-31 07:50:22","post_content":"<a href=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2014\/07\/php-code-pic.jpg\"><img src=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2014\/07\/php-code-pic.jpg\" alt=\"php-code-pic\" width=\"550\" height=\"200\" class=\"alignnone size-full wp-image-509\" \/><\/a>\r\n\r\nAdd this code snippet into your functions.php:\r\n\r\n[cc lang = \"php\"]\r\nfunction cvf_insert_php($content) {\r\n\r\n\t$cvf_content = $content;\r\n\tpreg_match_all('!\\[php[^\\]]*\\](.*?)\\[\/php[^\\]]*\\]!is',$cvf_content,$cvf_matches);\r\n\t$cvf_nummatches = count($cvf_matches[0]);\r\n\tfor( $cvf_i=0; $cvf_i<$cvf_nummatches; $cvf_i++ ) {\r\n\t\tob_start();\r\n\t\teval($cvf_matches[1][$cvf_i]);\r\n\t\t$cvf_replacement = ob_get_contents();\r\n\t\tob_clean();\r\n\t\tob_end_flush();\r\n\t\t$cvf_search = quotemeta($cvf_matches[0][$cvf_i]);\r\n\t\t$cvf_search = str_replace('\/',\"\\\\\".'\/',$cvf_search);\r\n\t\t$cvf_content = preg_replace(\"\/$cvf_search\/\",$cvf_replacement,$cvf_content,1);\r\n\t}\r\n\treturn $cvf_content;\r\n}\r\n\r\nadd_filter( 'the_content', 'cvf_insert_php', 9 );\r\n[\/cc]\r\n\r\nThen on your WP editor, you can start your PHP code by using the shortcode: \"[php]\" instead of \"&lt;?php\". The ending tag of your PHP would be \"[\/php]\" and NOT \"?&gt;\"","post_title":"Insert PHP Code to your WordPress Post or Page","post_excerpt":"Make your post editor read PHP codes using shortcodes as tags","post_status":"publish","comment_status":"open","ping_status":"closed","post_password":"","post_name":"insert-php-code-to-your-wordpress-post-or-page","to_ping":"","pinged":"","post_modified":"2015-02-09 07:14:10","post_modified_gmt":"2015-02-09 07:14:10","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=500","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":1423,"post_author":"1","post_date":"2016-08-20 14:09:17","post_date_gmt":"2016-08-20 06:09:17","post_content":"<ul>\r\n \t<li>Go to your <strong>c:\/ drive<\/strong> and create a folder \"<strong>mongodb<\/strong>\"<\/li>\r\n \t<li>Download mongoDB from this link: <a href=\"http:\/\/www.mongodb.org\/downloads\">http:\/\/www.mongodb.org\/downloads<\/a><\/li>\r\n \t<li>Select \"<strong>Custom<\/strong>\" when installing the software<\/li>\r\n<\/ul>\r\n<p style=\"padding-left: 30px;\"><img class=\"alignnone size-full wp-image-1425\" src=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2016\/08\/mong-db-custom-installation.jpg\" alt=\"mong-db-custom-installation\" width=\"507\" height=\"385\" \/><\/p>\r\n\r\n<ul>\r\n \t<li>Install mongoDB in the following path: <strong>c:\/mongodb<\/strong><\/li>\r\n \t<li>Go to your <strong>c:\/ drive<\/strong> then create a new folder \"<strong>data<\/strong>\", inside it create another folder \"<strong>db<\/strong>\"<\/li>\r\n \t<li>Start MongoDB in your command prompt by executing the following command:\u00a0<strong>C:\\mongodb\\bin\\mongod.exe<\/strong><\/li>\r\n<\/ul>\r\n<p style=\"padding-left: 30px;\"><img class=\"alignnone size-full wp-image-1424\" src=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2016\/08\/mongo-db-successfully-running.jpg\" alt=\"mongo-db-successfully-running\" width=\"676\" height=\"462\" \/><\/p>\r\nCongratulations, you have successfully installed MongoDB \u00a0in Windows.\r\n\r\nMoving on, let us now configure XAMPP\r\n<ul>\r\n \t<li>Download the mongoDB driver from this link: <a href=\"http:\/\/windows.php.net\/downloads\/pecl\/releases\/mongo\/1.6.11\/php_mongo-1.6.11-5.6-ts-vc11-x86.zip\">http:\/\/windows.php.net\/downloads\/pecl\/releases\/mongo\/1.6.11\/php_mongo-1.6.11-5.6-ts-vc11-x86.zip<\/a><\/li>\r\n \t<li>Open the ZIP file then extract the file:\u00a0<strong>php_mongo.dll<\/strong> to <strong>C:\\xampp\\php\\ext <\/strong>directory.<\/li>\r\n \t<li>Go to <strong>xampp\/php\/<\/strong> and open up <strong>php.ini<\/strong> using your favorite editor, add the following lines to your extensions:\u00a0<strong>extension=php_mongo.dll<\/strong><\/li>\r\n \t<li>Restart XAMPP.<\/li>\r\n<\/ul>\r\nTo verify that you have successfully configured\u00a0mongoDB in XAMPP, create a file in your<strong> xampp\/htdocs<\/strong> folder, in it put the following code:\r\n\r\n[cc lang =\"php\"]\r\n<?php\r\nphpinfo();\r\n\r\n[\/cc]\r\n\r\nNow access this file in your browser. Ex. \"localhost\/testfile.php\"\r\n\r\nYou should see that MongoDB is already installed:\r\n\r\n<img class=\"alignnone size-full wp-image-1431\" src=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2016\/08\/mongodb-successful-installation.jpg\" alt=\"mongodb-successful-installation\" width=\"1009\" height=\"395\" \/>","post_title":"Installing MongoDB in XAMPP Windows","post_excerpt":"Install and configure MongoDB in XAMPP with Windows environment.","post_status":"publish","comment_status":"open","ping_status":"open","post_password":"","post_name":"installing-mongodb-in-xampp-windows","to_ping":"","pinged":"","post_modified":"2016-08-20 22:56:17","post_modified_gmt":"2016-08-20 14:56:17","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=1423","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":1233,"post_author":"1","post_date":"2015-12-18 04:04:08","post_date_gmt":"2015-12-18 04:04:08","post_content":"For this example I used a Java Toolkit: <strong>json-simple<\/strong>, you can download it here: <a href=\"https:\/\/code.google.com\/p\/json-simple\/downloads\/list\">https:\/\/code.google.com\/p\/json-simple\/downloads\/list<\/a>\r\n\r\n[cc lang = \"java\"]\r\n\/*\r\n * @author:         Carlo Fontanos\r\n * @author_url:     carlofontanos.com\r\n * \r\n * A simple code snippet for parsing JSON data from a URL\r\n *\/\r\npackage api;\r\n\t\t\t\t\r\nimport java.io.BufferedReader;\r\nimport java.io.FileNotFoundException;\r\nimport java.io.IOException;\r\nimport java.io.InputStreamReader;\r\nimport java.net.URL;\r\nimport java.net.URLConnection;\r\nimport org.json.simple.JSONArray;\r\nimport org.json.simple.JSONObject;\r\nimport org.json.simple.parser.JSONParser;\r\nimport org.json.simple.parser.ParseException;\r\n\r\npublic class JsonParser {\r\n    \r\n    public static void main(String[] args) {\r\n        JSONParser parser = new JSONParser();\r\n\r\n        try {         \r\n            URL oracle = new URL(\"http:\/\/carlofontanos.com\/api\/tutorials.php?data=all\"); \/\/ URL to Parse\r\n            URLConnection yc = oracle.openConnection();\r\n            BufferedReader in = new BufferedReader(new InputStreamReader(yc.getInputStream()));\r\n            \r\n            String inputLine;\r\n            while ((inputLine = in.readLine()) != null) {               \r\n                JSONArray a = (JSONArray) parser.parse(inputLine);\r\n                \r\n                \/\/ Loop through each item\r\n                for (Object o : a) {\r\n                    JSONObject tutorials = (JSONObject) o;\r\n\r\n                    Long id = (Long) tutorials.get(\"ID\");\r\n                    System.out.println(\"Post ID : \" + id);\r\n\r\n                    String title = (String) tutorials.get(\"post_title\");\r\n                    System.out.println(\"Post Title : \" + title);\r\n\r\n                    System.out.println(\"\\n\");\r\n                }\r\n            }\r\n            in.close();\r\n        } catch (FileNotFoundException e) {\r\n            e.printStackTrace();\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        } catch (ParseException e) {\r\n            e.printStackTrace();\r\n        }\t\r\n    }   \r\n}\r\n[\/cc]\r\n\r\nContents of tutorials.php:\r\n[cc lang = \"php\"]\r\n<?php \r\nheader(\"Access-Control-Allow-Origin: *\");\r\nheader(\"Content-Type: application\/json; charset=UTF-8\");\r\n\r\nrequire_once( '..\/wp-load.php' );\r\n\r\nif( isset( $_GET['data'] ) && $_GET['data'] == 'all' ) {\r\n\t$all_tutorials = array(\r\n\t\t'post_type' => 'post',\r\n\t\t'post_status' => 'publish',\r\n\t\t'posts_per_page' => -1, \/\/ all\r\n\t\t'orderby' => 'title',\r\n\t\t'order' => 'ASC'\r\n\t);\r\n\t \r\n\t$tutorials_data = get_posts( $all_tutorials );\r\n\techo json_encode( $tutorials_data );\r\n}\r\n[\/cc]\r\n\r\nResult from NetBeans console: \r\n\r\n<img src=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2015\/12\/parsing-tutorial-from-carlofontanos.com_.jpg\" alt=\"parsing-tutorial-from-carlofontanos.com\" width=\"1151\" height=\"437\" class=\"alignnone size-full wp-image-1234\" \/>\r\n","post_title":"Java - Parsing JSON Data from a URL","post_excerpt":"Simple code snippet for parsing JSON data from a URL in Java","post_status":"publish","comment_status":"open","ping_status":"open","post_password":"","post_name":"java-parsing-json-data-from-a-url","to_ping":"","pinged":"","post_modified":"2015-12-19 03:28:27","post_modified_gmt":"2015-12-19 03:28:27","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=1233","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":1162,"post_author":"1","post_date":"2015-08-24 03:33:19","post_date_gmt":"2015-08-24 03:33:19","post_content":"I was loading the wp_editor thru AJAX, the editor shows up but the buttons for both Visual and Text Tab are missing. After some research I found an easy fix to this problem\r\n\r\nThe idea:\r\n<ol>\r\n<li>Create a hidden div containing the wp_editor (place this code bellow the container where you are loading your ajax response)<\/li>\r\n<li>On AJAX success, get the contents of the hidden editor then append it to your AJAX response div container<\/li>\r\n<li>Reinitialize the editor: Remove the editor then add it back<\/li>\r\n<\/ol>\r\n\r\nCreate a hidden div containing the wp_editor:\r\n\r\n[cc lang = \"html\"]\r\n<div class=\"hidden-editor-container\" style = \"display: none;\">\r\n\t<?php wp_editor('Default Content', 'tdmessagereply'); ?>\r\n<\/div>\r\n[\/cc]\r\n\r\nServer Side Structure:\r\n\r\n[cc lang = \"php\"]\r\n\r\npublic static function cvf_td_veiw_frontend_message() {\r\n\t\r\n\tif(isset($_POST['cvf_action']) && $_POST['cvf_action'] == 'veiw_frontend_message' ) {\r\n\t\t\r\n\t\t$display .= '\r\n\t\t<article>\r\n\t\t\t<div class = \"form-group\">\r\n\t\t\t\t<label>' . __('Reply', 'my-text-domain') . ':<\/label><br \/>\r\n\t\t\t\t<div class = \"bg-primary hidden-reply-editor\"><\/div>\r\n\t\t\t<\/div>\t\r\n\t\t\t<input type = \"submit\" value = \"' . __('Send', 'my-text-domain') . '\" class = \"btn btn-primary reply_to_conversation\" \/>\r\n\t\t<\/article>';\r\n\t\t\r\n\t\techo $display;\r\n\t}\r\n\texit();\r\n}\r\nadd_action('wp_ajax_cvf_td_veiw_frontend_message', 'cvf_td_veiw_frontend_message') );\r\nadd_action('wp_ajax_nopriv_cvf_td_veiw_frontend_message', 'cvf_td_veiw_frontend_message') );\r\n[\/cc]\r\n\r\nAJAX Request Structure:\r\n\r\n[cc lang = \"javascript\"]\r\nvar data = {\r\n\t'action': 'cvf_td_veiw_frontend_message',\r\n\t'cvf_action': 'veiw_frontend_message'\r\n};\r\n\r\n$.post(global.ajax_url, data, function(response) {\r\n\t\r\n\t\/\/ After the response has been appended to the our front-end...\t\r\n\tif($(\".cvf_td_conversation_messages\").html(response)){\r\n\t\t\r\n\t\t\/\/ Get the contents of the hidden wp_editor\r\n\t\treply_editor = $('.hidden-editor-container').contents();\r\n\t\t\r\n\t\t\/\/ Append the contents of the hidden wp_editor to div container\r\n\t\t$('.hidden-reply-editor').append( reply_editor );\r\n\t\t\r\n\t\t\/\/ Reinitialize the editor: Remove the editor then add it back\r\n\t\ttinymce.execCommand( 'mceRemoveEditor', false, 'tdmessagereply' );\r\n\t\ttinymce.execCommand( 'mceAddEditor', false, 'tdmessagereply' );\r\n\t}\r\n});\r\n[\/cc]\r\n\r\nHope this tutorial makes a better day for someone :)","post_title":"Loading wp_editor via AJAX","post_excerpt":"Fix problem with wp_editor showing but missing buttons on Text and Visual tab","post_status":"publish","comment_status":"open","ping_status":"open","post_password":"","post_name":"loading-wp_editor-via-ajax","to_ping":"","pinged":"","post_modified":"2015-08-25 02:35:41","post_modified_gmt":"2015-08-25 02:35:41","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=1162","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":1440,"post_author":"1","post_date":"2016-08-29 15:38:12","post_date_gmt":"2016-08-29 07:38:12","post_content":"I was recently working on a project that makes use of MongoDB as database, the client wanted to have a Paginated list of documents, Search box, Column Sorting feature and a Per Page Filter. There are over 5 million documents in their database which are basically generated tickets for their customers. Since I have an existing pagination which actually works like a charm, I thought i'd try to convert it to make use mongoDB's query methods. I was successful in developing my client's requests and now I just wanted to share to you guys how I did it.   \r\n\r\n<span id=\"page-has-downlodable-file\" file=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2017\/09\/mongodb-ajax-pagination-with-search-and-sort-using-php-master.zip\"><\/span>\r\n\r\n<img src = \"http:\/\/carlofontanos.com\/wp-content\/uploads\/2016\/08\/mongodb-ajax-pagination-with-search-and-sort-using-php-screenshot-example.jpg\" class=\"ml-tb\" \/>\r\n\r\n<h3 class=\"ml-t\">The code<\/h3>\r\n<ol>\r\n \t<li>Lets start off by making a directory\u00a0in our local server, let's call it <strong>mongodb.\u00a0<\/strong><\/li>\r\n \t<li>I am currently using Windows as my local server and\u00a0XAMPP as my web server. If you have not setup MongoDB yet and want to know how to set it up in Windows, I made a separate tutorial for that - <a href=\"http:\/\/carlofontanos.com\/installing-mongodb-in-xampp-windows\/\">see this link<\/a><\/li>\r\n \t<li>Inside our mongodb folder, create the following directories and files:\r\n\t\t<ul>\r\n\t\t\t<li><strong>index.php<\/strong><\/li>\r\n\t\t\t<li>This file is basically where our pagination will be displayed.<\/li>\r\n\t\t\t<li><em>Code:<\/em>:\r\n[ccl lang=\"html\"]\r\n<?php require_once('inc\/config.php'); ?>\r\n<?php require_once('header.php'); ?>\r\n  \r\n<div class=\"container\">\r\n\t<form class = \"post-list\">\r\n\t\t<input type = \"hidden\" value = \"\" \/>\r\n\t<\/form>\r\n\t\r\n\t<article class=\"navbar-form navbar-left ml-b\">\r\n\t\t<div class=\"form-group\">\r\n\t\t\t<label>Per Page: <\/label>\r\n\t\t\t<select class=\"form-control post_max\">\r\n\t\t\t\t<option value=\"40\">40<\/option>\r\n\t\t\t\t<option value=\"80\">80<\/option>\r\n\t\t\t\t<option value=\"160\">160<\/option>\r\n\t\t\t<\/select>\r\n\t\t\t<label>Search Keyword: <\/label>\r\n\t\t\t<input type=\"text\" class=\"form-control post_search_text\" placeholder=\"Enter a keyword\">\r\n\t\t<\/div>\r\n\t\t<input type = \"submit\" value = \"Filter\" class = \"btn btn-primary post_search_submit\" \/>\r\n\t<\/article>\r\n\t\r\n\t<br class = \"clear\" \/>\r\n\t\r\n\t<div class = \"wave-box-wrapper\">\r\n\t\t<div class = \"wave-box\"><\/div>\r\n\t\t<table class = \"table table-striped table-post-list no-margin\">\r\n\t\t\t<thead>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<th id = \"name\" class = \"active\"><a href = \"#\">Name<\/a><\/th>\r\n\t\t\t\t\t<th id = \"price\"><a href = \"#\">Price<\/a><\/th>\r\n\t\t\t\t\t<th id = \"status\"><a href = \"#\">Status<\/a><\/th>\r\n\t\t\t\t\t<th id = \"date\"><a href = \"#\">Date<\/a><\/th>\r\n\t\t\t\t\t<th id = \"quantity\"><a href = \"#\">Quantity<\/a><\/th>\r\n\t\t\t\t\t<th>Action<\/th>\r\n\t\t\t\t<\/tr>\r\n\t\t\t<\/thead>\r\n\t\t\t<tbody class = \"pagination-container\"><\/tbody>\r\n\t\t<\/table>\r\n\t\t\r\n\t\t<div class = \"pagination-nav\"><\/div>\r\n\t<\/div>\r\n<\/div>\r\n\r\n<?php require_once('footer.php'); ?>\r\n[\/cc]\r\n\t\t\t<\/li>\r\n\t\t\t\r\n\t\t\t<li><strong>header.php:<\/strong><\/li>\r\n\t\t\t<li>For this example I decided to use Bootstrap for a quick theme setup.<\/li>\r\n\t\t\t<li><em>Code:<\/em>\r\n[cc lang = \"html\"]\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n\t<title>MongoDB AJAX Pagination with Search and Sort | by Carlo Fontanos<\/title>\r\n\t\r\n\t<meta charset=\"utf-8\">\r\n\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n\t\r\n\t<link rel=\"stylesheet\" href=\"\/\/maxcdn.bootstrapcdn.com\/bootstrap\/3.3.7\/css\/bootstrap.min.css\">\r\n\t<link rel=\"stylesheet\" href=\"\/\/cdn.rawgit.com\/Eonasdan\/bootstrap-datetimepicker\/e8bddc60e73c1ec2475f827be36e1957af72e2ea\/build\/css\/bootstrap-datetimepicker.css\">\r\n\t<link rel=\"stylesheet\" href=\"css\/styles.css\">\r\n<\/head>\r\n<body class=\"override\">\r\n\t<div class=\"container\">\r\n\t\t<nav class=\"navbar navbar-default\">\r\n\t\t\t<div class=\"container-fluid\">\r\n\t\t\t\t<div class=\"navbar-header\">\r\n\t\t\t\t\t<a class=\"navbar-brand\" href=\"index.php\">MongoDB Example<\/a>\r\n\t\t\t\t<\/div>\r\n\t\t\t<\/div>\r\n\t\t<\/nav>\r\n\t<\/div>\r\n[\/cc]\r\n\t\t\t<\/li>\r\n\t\t\t<li><strong>footer.php:<\/strong><\/li>\r\n\t\t\t<li><em>Code:<\/em>\r\n[cc lang = \"html\"]\r\n\t<footer class=\"m-t\">\r\n\t\t<div class=\"container\">\t\r\n\t\t\t<div class=\"panel panel-default\">\r\n\t\t\t\t<div class=\"panel-body\">\r\n\t\t\t\t\t<span class=\"pull-right\">Copyright &copy <a href=\"http:\/\/carlofontanos.com\" target=\"_blank\">www.carlofontanos.com<\/a>; <?php echo date('Y'); ?><\/span>\r\n\t\t\t\t<\/div>\r\n\t\t\t<\/div>\r\n\t<\/footer>\r\n\t\r\n\t<script src=\"\/\/ajax.googleapis.com\/ajax\/libs\/jquery\/1.12.4\/jquery.min.js\"><\/script>\r\n\t<script src=\"\/\/maxcdn.bootstrapcdn.com\/bootstrap\/3.3.7\/js\/bootstrap.min.js\"><\/script>\r\n\t<script src=\"js\/app.js\"><\/script>\r\n<\/body>\r\n<\/html>\r\n[\/cc]\r\n\t\t\t<\/li>\r\n\r\n\t\t\t<li><strong>\/css<\/strong>\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t<li><strong>styles.css<\/strong><\/li>\r\n\t\t\t\t\t<li><em>Code:<\/em>\r\n[cc lang=\"css\"]\r\n\/* Pagination Styles *\/\r\n.pagination-nav { margin: 30px 0 20px 0; }\r\n.pagination-nav ul {margin: 0; padding: 0;}\r\n.pagination-nav ul li {display: inline-block; margin: 3px; padding: 4px 8px; background: #FFF; color: black; }\r\n.pagination-nav ul li.active:hover {cursor: pointer; background: #367fa9; color: white; }\r\n.pagination-nav ul li.inactive {background: #CACACA;}\r\n.pagination-nav ul li.selected {background: #367fa9; color: white;}\r\n[\/cc]\r\n\t\t\t\t\t<\/li>\r\n\t\t\t\t<\/ul>\r\n\t\t\t<\/li>\r\n\t\t\t<li><strong>\/inc<\/strong>\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t<li><strong>config.php<\/strong><\/li>\r\n\t\t\t\t\t<li><em>Code:<\/em>\r\n[cc lang=\"php\"]\r\n$connection = new MongoClient();\r\n$db = $connection->selectDB('my_database_name');\r\n[\/cc]\r\n\t\t\t\t\tYou can change the string <strong>my_database_name<\/strong> to anything you like. \r\n\t\t\t\t\t<\/li>\r\n\t\t\t\t\t<li><strong>view.php<\/strong><\/li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<p>This is where all the logic happens. If you want to integrate this with your existing app, you will have to change the document field names to match your requirements. For this example I would assume you have a database with the following document fields:\r\n\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t\t<li>name (string)<\/li>\r\n\t\t\t\t\t\t\t\t<li>price (string)<\/li>\r\n\t\t\t\t\t\t\t\t<li>status (string)<\/li>\r\n\t\t\t\t\t\t\t\t<li>date (string)<\/li>\r\n\t\t\t\t\t\t\t\t<li>quantity (string)<\/li>\r\n\t\t\t\t\t\t\t<\/ul>\r\n\t\t\t\t\t\t<\/p>\r\n\t\t\t\t\t<\/li>\r\n\t\t\t\t\t<li><em>Code:<\/em>\r\n[cc lang=\"php\"] \r\nrequire_once('config.php');\r\n\r\n$collection = $db->products;\r\n$pag_content = '';\r\n$pag_navigation = '';\r\n\r\nif( isset( $_POST['data']['page'] ) ){\r\n\t\r\n\t$page = $_POST['data']['page']; \/* The page we are currently at *\/\r\n\t$name = $_POST['data']['th_name']; \/* The name of the column name we want to sort *\/\r\n\t$sort = $_POST['data']['th_sort']; \/* The order of our sort (DESC or ASC) *\/\r\n\t$max  = $_POST['data']['max']; \/* Number of items to display per page *\/\r\n\t$cur_page = $page;\r\n\t$page -= 1;\r\n\t$per_page = $max ? $max : 40; \r\n\t$previous_btn = true;\r\n\t$next_btn = true;\r\n\t$first_btn = true;\r\n\t$last_btn = true;\r\n\t$start = $page * $per_page;\r\n\t\r\n\t$where_search = array();\r\n\t\r\n\t\/* Check if there is a string inputted on the search box *\/\r\n\tif( ! empty( $_POST['data']['search']) ){\r\n\t\t\/* If a string is inputted, include an additional query logic to our main query to filter the results *\/\r\n\t\t$filter = new MongoRegex('\/' . $_POST['data']['search'] . '\/i');\r\n\t\t$where_search = array(\r\n\t\t\t'$or' => array(\r\n\t\t\t\tarray('name' => $filter),\r\n\t\t\t\tarray('price' => $filter)\r\n\t\t\t)\r\n\t\t);\r\n\t}\r\n\t\r\n\t\/* Retrieve all the posts *\/\r\n\t$all_items = $collection\r\n\t\t->find( $where_search, array('_id', 'name', 'price', 'status', 'date', 'quantity') )\r\n\t\t->limit( $per_page )\r\n\t\t->skip( $start )\r\n\t\t->sort( array(\r\n\t\t\t$name => $sort == 'ASC' ? 1 : -1\r\n\t\t));\r\n\t\r\n\t$count = $collection\r\n\t\t->find($where_search)\r\n\t\t->count();\r\n\t\t\r\n\t\/* Check if our query returns anything. *\/\r\n\tif( $count ){\r\n\t\t\r\n\t\t\/* Iterate thru each item *\/\r\n\t\tforeach( $all_items as $key => $item ){\r\n\t\t\t\r\n\t\t\t$item = (object) $item;\r\n\t\t\t$status = $item->status == 1 ? 'Active' : 'Inactive';\r\n\t\t\t\r\n\t\t\t$pag_content .= '\r\n\t\t\t<tr>\r\n\t\t\t\t<td>' . $item->name . '<\/td>\r\n\t\t\t\t<td>$' . $item->price . '<\/td>\r\n\t\t\t\t<td>' . $status . '<\/td>\r\n\t\t\t\t<td>' . date(\"F j, Y, g:i a\", strtotime( $item->date ) ) . '<\/td>\r\n\t\t\t\t<td>' . $item->quantity . '<\/td>\r\n\t\t\t\t<td>\r\n\t\t\t\t\t<a href=\"#_\" class=\"text-success\"><span class=\"glyphicon glyphicon-pencil\" title=\"Edit\"><\/span><\/a> &nbsp; &nbsp;\r\n\t\t\t\t\t<a href=\"#_\" class=\"text-danger delete-product\" item_id=\"' . $item->_id . '\"><span class=\"glyphicon glyphicon-remove\" title=\"Delete\"><\/span><\/a>\r\n\t\t\t\t<\/td>\r\n\t\t\t<\/tr>';         \r\n\t\t}\r\n\t\t\r\n\t\/* If the query returns nothing, we throw an error message *\/\r\n\t} else {\r\n\t\t$pag_content .= '<td colspan = \"7\" class = \"bg-danger p-d\">No results found.<\/td>';\r\n\t\t\r\n\t}\r\n\r\n\t$pag_content = $pag_content . \"<br class = 'clear' \/>\";\r\n\t\r\n\t$no_of_paginations = ceil($count \/ $per_page);\r\n\r\n\tif ($cur_page >= 7) {\r\n\t\t$start_loop = $cur_page - 3;\r\n\t\tif ($no_of_paginations > $cur_page + 3)\r\n\t\t\t$end_loop = $cur_page + 3;\r\n\t\telse if ($cur_page <= $no_of_paginations && $cur_page > $no_of_paginations - 6) {\r\n\t\t\t$start_loop = $no_of_paginations - 6;\r\n\t\t\t$end_loop = $no_of_paginations;\r\n\t\t} else {\r\n\t\t\t$end_loop = $no_of_paginations;\r\n\t\t}\r\n\t} else {\r\n\t\t$start_loop = 1;\r\n\t\tif ($no_of_paginations > 7)\r\n\t\t\t$end_loop = 7;\r\n\t\telse\r\n\t\t\t$end_loop = $no_of_paginations;\r\n\t}\r\n\t  \r\n\t$pag_navigation .= \"<ul>\";\r\n\r\n\tif ($first_btn && $cur_page > 1) {\r\n\t\t$pag_navigation .= \"<li p='1' class='active'>First<\/li>\";\r\n\t} else if ($first_btn) {\r\n\t\t$pag_navigation .= \"<li p='1' class='inactive'>First<\/li>\";\r\n\t} \r\n\r\n\tif ($previous_btn && $cur_page > 1) {\r\n\t\t$pre = $cur_page - 1;\r\n\t\t$pag_navigation .= \"<li p='$pre' class='active'>Previous<\/li>\";\r\n\t} else if ($previous_btn) {\r\n\t\t$pag_navigation .= \"<li class='inactive'>Previous<\/li>\";\r\n\t}\r\n\tfor ($i = $start_loop; $i <= $end_loop; $i++) {\r\n\r\n\t\tif ($cur_page == $i)\r\n\t\t\t$pag_navigation .= \"<li p='$i' class = 'selected' >{$i}<\/li>\";\r\n\t\telse\r\n\t\t\t$pag_navigation .= \"<li p='$i' class='active'>{$i}<\/li>\";\r\n\t}\r\n\t\r\n\tif ($next_btn && $cur_page < $no_of_paginations) {\r\n\t\t$nex = $cur_page + 1;\r\n\t\t$pag_navigation .= \"<li p='$nex' class='active'>Next<\/li>\";\r\n\t} else if ($next_btn) {\r\n\t\t$pag_navigation .= \"<li class='inactive'>Next<\/li>\";\r\n\t}\r\n\r\n\tif ($last_btn && $cur_page < $no_of_paginations) {\r\n\t\t$pag_navigation .= \"<li p='$no_of_paginations' class='active'>Last<\/li>\";\r\n\t} else if ($last_btn) {\r\n\t\t$pag_navigation .= \"<li p='$no_of_paginations' class='inactive'>Last<\/li>\";\r\n\t}\r\n\r\n\t$pag_navigation = $pag_navigation . \"<\/ul>\";\t\r\n}\r\n\r\n\r\n$response = array(\r\n\t'content' \t\t=>\t$pag_content,\r\n\t'navigation' \t=>\t$pag_navigation,\r\n);\r\n\r\necho json_encode( $response );\r\n\r\nexit();\r\n[\/cc]\r\n\t\t\t\t\t<\/li>\r\n\t\t\t\t<\/ul>\r\n\t\t\t<\/li>\r\n\t\t\t<li><strong>\/js<\/strong>\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t<li><strong>app.js<\/strong><\/li>\r\n\t\t\t\t\t<li>This app js class handles column sorting, searching, pagination clicks, and filter.<\/li>\r\n\t\t\t\t\t<li><em>Code:<\/em>\r\n[cc lang = \"js\"]\r\n\/**\r\n * App Class\r\n *\r\n * @author\t\tCarl Victor Fontanos\r\n * @author_url\twww.carlofontanos.com\r\n *\r\n *\/\r\n\r\n\/**\r\n * Setup a App namespace to prevent JS conflicts.\r\n *\/\r\nvar app = {\r\n\t\t\r\n\r\n\tPosts: function() {\r\n\t\t\r\n\t\t\/**\r\n\t\t * This method contains the list of functions that needs to be loaded\r\n\t\t * when the \"Posts\" object is instantiated.\r\n\t\t *\r\n\t\t *\/\r\n\t\tthis.init = function() {\r\n\t\t\t\/\/ this.loaded_posts_pagination();\r\n\t\t\tthis.get_items_pagination();\r\n\t\t}\r\n\t\t\r\n\t\t\/**\r\n\t\t * Load items pagination.\r\n\t\t *\/\r\n\t\tthis.get_items_pagination = function() {\r\n\t\t\t\r\n\t\t\t_this = this;\r\n\t\t\t\r\n\t\t\t\/* Check if our hidden form input is not empty, meaning it's not the first time viewing the page. *\/\r\n\t\t\tif($('form.post-list input').val()){\r\n\t\t\t\t\/* Submit hidden form input value to load previous page number *\/\r\n\t\t\t\tdata = JSON.parse($('form.post-list input').val());\r\n\t\t\t\t_this.ajax_get_items_pagination(data.page, data.th_name, data.th_sort);\r\n\t\t\t} else {\r\n\t\t\t\t\/* Load first page *\/\r\n\t\t\t\t_this.ajax_get_items_pagination(1, 'name', 'ASC');\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar th_active = $('.table-post-list th.active');\r\n\t\t\tvar th_name = $(th_active).attr('id');\r\n\t\t\tvar th_sort = $(th_active).hasClass('DESC') ? 'DESC': 'ASC';\r\n\t\t\t\t\t\t\r\n\t\t\t\/* Search *\/\r\n\t\t\t$('body').on('click', '.post_search_submit', function(){\r\n\t\t\t\t_this.ajax_get_items_pagination(1, th_name, th_sort);\r\n\t\t\t});\r\n\t\t\t\/* Search when Enter Key is triggered *\/\r\n\t\t\t$(\".post_search_text\").keyup(function (e) {\r\n\t\t\t\tif (e.keyCode == 13) {\r\n\t\t\t\t\t_this.ajax_get_items_pagination(1, th_name, th_sort);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\t\/* Pagination Clicks   *\/                  \r\n\t\t\t$('body').on('click', '.pagination-nav li.active', function(){\r\n\t\t\t\tvar page = $(this).attr('p');\r\n\t\t\t\tvar current_sort = $(th_active).hasClass('DESC') ? 'DESC': 'ASC';\r\n\t\t\t\t_this.ajax_get_items_pagination(page, th_name, current_sort);                \r\n\t\t\t}); \r\n\r\n\t\t\t\/* Sorting Clicks *\/\r\n\t\t\t$('body').on('click', '.table-post-list th', function(e) {\r\n\t\t\t\te.preventDefault();                             \r\n\t\t\t\tvar th_name = $(this).attr('id');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\tif(th_name){\r\n\t\t\t\t\t\/* Remove all TH tags with an \"active\" class *\/\r\n\t\t\t\t\tif($('.table-post-list th').removeClass('active')) {\r\n\t\t\t\t\t\t\/* Set \"active\" class to the clicked TH tag *\/\r\n\t\t\t\t\t\t$(this).addClass('active');\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(!$(this).hasClass('DESC')){\r\n\t\t\t\t\t\t_this.ajax_get_items_pagination(1, th_name, 'DESC');\r\n\t\t\t\t\t\t$(this).addClass('DESC');\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t_this.ajax_get_items_pagination(1, th_name, 'ASC');\r\n\t\t\t\t\t\t$(this).removeClass('DESC');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\t\/**\r\n\t\t * AJAX items pagination.\r\n\t\t *\/\r\n\t\tthis.ajax_get_items_pagination = function(page, th_name, th_sort){\r\n\t\t\t\r\n\t\t\tif($(\".pagination-container\").length){\r\n\t\t\t\t$(\".pagination-container\").html('<img src=\"img\/loading.gif\" class=\"ml-tb\" \/>');\r\n\t\t\t\t\r\n\t\t\t\tvar post_data = {\r\n\t\t\t\t\tpage: page,\r\n\t\t\t\t\tsearch: $('.post_search_text').val(),\r\n\t\t\t\t\tth_name: th_name,\r\n\t\t\t\t\tth_sort: th_sort,\r\n\t\t\t\t\tmax: $('.post_max').val(),\r\n\t\t\t\t};\r\n\t\t\t\t\r\n\t\t\t\t$('form.post-list input').val(JSON.stringify(post_data));\r\n\t\t\t\t\r\n\t\t\t\tvar data = {\r\n\t\t\t\t\taction: \"demo_load_my_posts\",\r\n\t\t\t\t\tdata: JSON.parse($('form.post-list input').val())\r\n\t\t\t\t};\r\n\t\t\t\t\r\n\t\t\t\t$.ajax({\r\n\t\t\t\t\turl: 'inc\/view.php',\r\n\t\t\t\t\ttype: 'POST',\r\n\t\t\t\t\tdata: data,\r\n\t\t\t\t\tsuccess: function (response) {\r\n\t\t\t\t\t\tresponse = JSON.parse(response);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif($(\".pagination-container\").html(response.content)){\r\n\t\t\t\t\t\t\t$('.pagination-nav').html(response.navigation);\r\n\t\t\t\t\t\t\t$('.table-post-list th').each(function() {\r\n\t\t\t\t\t\t\t\t\/* Append the button indicator *\/\r\n\t\t\t\t\t\t\t\t$(this).find('span.glyphicon').remove();    \r\n\t\t\t\t\t\t\t\tif($(this).hasClass('active')){\r\n\t\t\t\t\t\t\t\t\tif(JSON.parse($('form.post-list input').val()).th_sort == 'DESC'){\r\n\t\t\t\t\t\t\t\t\t\t$(this).append(' <span class=\"glyphicon glyphicon-chevron-down pull-right\"><\/span>');\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t$(this).append(' <span class=\"glyphicon glyphicon-chevron-up pull-right\"><\/span>');\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\/**\r\n * When the document has been loaded...\r\n *\r\n *\/\r\njQuery(document).ready( function () {\r\n\t\r\n\tposts = new app.Posts(); \/* Instantiate the Posts Class *\/\r\n\tposts.init(); \/* Load Posts class methods *\/\r\n\t\r\n});\r\n[\/cc]\r\n\t\t\t\t\t<\/li>\r\n\t\t\t\t<\/ul>\r\n\t\t\t<\/li>\r\n\t\t<\/ul>\r\n\t<\/li>\r\n\t<li>I can't provide a demo link at the moment as I am only running my site in a shared hosting, but I do hope that you find this tutorial useful.<\/li>\r\n<\/ol>\r\n\r\n<h3>Challenge<\/h3>\r\nContinue working on the Edit and Delete buttons.\r\n","post_title":"MongoDB AJAX Pagination with Search and Sort using PHP","post_excerpt":"A simple tutorial which demonstrates how you can paginate your documents using AJAX and apply search and sort features.","post_status":"publish","comment_status":"open","ping_status":"open","post_password":"","post_name":"mongodb-ajax-pagination-with-search-and-sort-using-php","to_ping":"","pinged":"\nhttp:\/\/carlofontanos.com\/installing-mongodb-in-xampp-windows\/","post_modified":"2017-09-19 15:40:22","post_modified_gmt":"2017-09-19 07:40:22","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=1440","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":1477,"post_author":"1","post_date":"2016-08-30 18:25:39","post_date_gmt":"2016-08-30 10:25:39","post_content":"Recently, a client of mine wanted to have an authentication system for their existing Web Application. They are currently using MongoDB as their Database and just wanted to implement a simple Login, Register and Account page for their customers.\r\n\r\nI did not have much experience working with MongoDB before I accepted the project \u00a0so I struggled a little bit figuring out a way to make an authentication work with MongoDB, but soon after - I realized that the focus of the logic should be on PHP itself, not MongoDB. So then I started coding until I finally finished\u00a0a simple session based authentication.\r\n\r\nInstead of pasting the entire code in this page, I decided to put the project on <a href=\"https:\/\/github.com\/carlo-fontanos\/mongodb-authentication-using-php\" target=\"_blank\">Github<\/a>.\r\n\r\n<img class=\"alignnone size-full wp-image-1486\" src=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2016\/08\/mongodb-authentication-using-php-login-page-screenshot.jpg\" alt=\"mongodb-authentication-using-php-login-page-screenshot\" \/>\r\n<h3>Features<\/h3>\r\n<ul>\r\n \t<li>Registration page\r\n<ul>\r\n \t<li>Validations<\/li>\r\n \t<li>Easy to scale fields.<\/li>\r\n \t<li>Login and redirects on success<\/li>\r\n<\/ul>\r\n<\/li>\r\n \t<li>Login Page\r\n<ul>\r\n \t<li>Validations<\/li>\r\n \t<li>Redirects on succes<\/li>\r\n<\/ul>\r\n<\/li>\r\n \t<li>Account Page\r\n<ul>\r\n \t<li>It simply displays the information of the user.<\/li>\r\n<\/ul>\r\n<\/li>\r\n \t<li>Logout<\/li>\r\n<\/ul>\r\n<h3>Helpers<\/h3>\r\n<ul>\r\n \t<li>is_user_logged_in();\r\n<ul>\r\n \t<li>Returns true if the user is logged in, otherwise it returns false.<\/li>\r\n<\/ul>\r\n<\/li>\r\n \t<li>current_user();\r\n<ul>\r\n \t<li>Returns an object containing data of the currently logged in user.<\/li>\r\n<\/ul>\r\n<\/li>\r\n<\/ul>","post_title":"MongoDB Authentication Using PHP","post_excerpt":"","post_status":"publish","comment_status":"open","ping_status":"open","post_password":"","post_name":"mongodb-authentication-using-php","to_ping":"","pinged":"","post_modified":"2017-04-22 23:02:26","post_modified_gmt":"2017-04-22 15:02:26","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=1477","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":1360,"post_author":"1","post_date":"2016-07-26 00:47:57","post_date_gmt":"2016-07-25 16:47:57","post_content":"<ol>\r\n \t<li>Zip your laravel app files.\r\nLaravel default installation has over 6000 files, it's recommended that you zip your files\r\nthen unzip it in\u00a0your Cpanel Web Explorer.<\/li>\r\n \t<li>Export your app's database then set it up on your server.<\/li>\r\n \t<li>After you have uploaded your laravel app files, open the <strong>.env<\/strong> file found on the root\r\ndirectory of\u00a0your laravel app.\r\nUpdate the database credentials\u00a0and the APP_URL.<\/li>\r\n \t<li>Open your .htaccess file, then add the following line just bellow RewriteEngine On:\r\n<code>RewriteBase \/<\/code><\/li>\r\n \t<li>That's it!, now check your live site.<\/li>\r\n \t<li>If you are getting\u00a0403 Forbidden Access or 500 Internal Server message, try changing\r\nthe permissions of your <strong>storage<\/strong> folder found on the root directory of your laravel app.\r\nSet the permission to 0777.<\/li>\r\n \t<li>If you are still having issues, contact your hosting.<\/li>\r\n<\/ol>","post_title":"Moving Laravel 5.2 from local machine to live server","post_excerpt":"Shows how to properly transfer  your laravel app on a live server","post_status":"publish","comment_status":"open","ping_status":"open","post_password":"","post_name":"moving-laravel-5-2-from-local-machine-to-live-server","to_ping":"","pinged":"","post_modified":"2016-07-26 12:05:10","post_modified_gmt":"2016-07-26 04:05:10","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=1360","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":1510,"post_author":"1","post_date":"2016-09-12 18:12:40","post_date_gmt":"2016-09-12 10:12:40","post_content":"For this tutorial we will be using Jade Templating, you can use other templating modules but I'm afraid I wont be able to provide you further support. Jade templating is easy to learn, if you know HTML then it should only take you a few minutes to learn Jade. One rule you have to take note when using Jade is to be very careful with the spaces, this tutorial make use of tabs for indention. Another thing to note when using Jade is you can only choose one kind of indention - spaces or tabs, but you can't use both at the same time. \r\n\r\nThis tutorial make use of Express Module so you should have that setup before getting started. I would assume that you  already have basic knowledge working with MongoDB and that you already have it set up in your computer. \r\n\r\n<img class=\"alignnone size-full wp-image-1515\" src=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2016\/09\/nodejs-mongodb-ajax-pagination-search-sort-filter.png\" alt=\"nodejs-mongodb-ajax-pagination-search-sort-filter\" width=\"1161\" height=\"1247\" \/>\r\n\r\n<h3>Required Modules<\/h3>\r\n<ul>\r\n \t<li><a href=\"https:\/\/www.tutorialspoint.com\/nodejs\/nodejs_express_framework.htm\" target=\"_blank\">Express<\/a><\/li>\r\n \t<li><a href=\"https:\/\/github.com\/caolan\/async\" target=\"_blank\">Async<\/a><\/li>\r\n  \t<li><a href=\"https:\/\/github.com\/Automattic\/monk\" target=\"_blank\">Monk<\/a><\/li>\r\n  \t<li><a href=\"https:\/\/github.com\/mongodb\/node-mongodb-native\" target=\"_blank\">MongoDB<\/a><\/li>\r\n<\/ul>\r\n\r\n<h3>Let's Start Coding<\/h3>\r\nWe first create all the fields for our search, sort and filters as well as the container that we will be using for rendering the pagination. You can save the code bellow in a file named <strong>products.jade<\/strong> under your <strong>views<\/strong> folder\r\n[cc lang=\"html\"]\r\nextends layout\r\n\r\nblock content\r\n\t.container.products-view-all\r\n\t\tform.post-list\r\n\t\t\tinput(type='hidden', value='')\r\n\t\t.clearfix\r\n\t\t\tarticle.navbar-form.navbar-left.p-0.m-0.ml-b\r\n\t\t\t\t.form-group\r\n\t\t\t\t\tlabel Per Page: \r\n\t\t\t\t\tselect.form-control.post_max.m-b\r\n\t\t\t\t\t\toption(value='20') 20\r\n\t\t\t\t\t\toption(value='50') 50\r\n\t\t\t\t\t\toption(value='100') 100\r\n\t\t\t\tlabel Search Keyword: \r\n\t\t\t\t\tinput.form-control.post_search_text.m-b(type='text', placeholder='Enter a keyword')\r\n\t\t\t\t.form-group\r\n\t\t\t\t\tlabel Order By: \r\n\t\t\t\t\tselect.form-control.post_name.m-b\r\n\t\t\t\t\t\toption(value='name') Title\r\n\t\t\t\t\t\toption(value='price') Price\r\n\t\t\t\t\t\toption(value='quantity') Quantity\r\n\t\t\t\t\tselect.form-control.post_sort.m-b\r\n\t\t\t\t\t\toption(value='ASC') ASC\r\n\t\t\t\t\t\toption(value='DESC') DESC\r\n\t\t\t\tinput.btn.btn-primary.post_search_submit.m-b(type='submit', value='Filter')\r\n\t\thr\r\n\t\t\t\r\n\t\t.clearfix\r\n\t\t\t.pagination-container.clearfix\r\n\t\t\t.pagination-nav\r\n[\/cc]\r\n\r\nInclude MongoDB Connection in your <strong>app.js<\/strong>\r\n[cc lang=\"javascript\"]\r\n\/* MongoDB connection *\/\r\nvar mongo = require('mongodb');\r\nvar monk = require('monk');\r\nvar db = monk('localhost:27017\/nodetest1'); \/\/ 27017 is the default port for our MongoDB instance.\r\n                                                                                                                      [\/cc]\r\n                                                                                                                       To make our DB accessible to our router, add the following lines in your <strong>app.js<\/strong> (just above <strong>app.use('\/', routes);<\/strong>)\r\n[cc lang=\"javascript\"]                                                                                                 \r\napp.use(function(req, res, next){\r\n    req.db = db;\r\n    next();\r\n});                   \r\n[\/cc]\r\n\r\n<h3>Client Side<\/h3>\r\nThe script bellow is the handler of all user clicks coming from the front-end. You can save it in a file called <strong>MyPaginationClass.js<\/strong> under public\/javascripts. Make sure to include this script file in your <strong>layout.jade<\/strong>.\r\n[cc lang=\"javascript\"]\r\n\/**\r\n * App Class \r\n *\r\n * @author\t\tCarl Victor Fontanos\r\n * @author_url\twww.carlofontanos.com\r\n *\r\n *\/\r\n\r\nvar app = {\r\n\t\r\n\tPosts: function() {\r\n\t\t\r\n\t\t\/**\r\n\t\t * This method contains the list of functions that needs to be loaded\r\n\t\t * when the \"Posts\" object is instantiated.\r\n\t\t *\r\n\t\t *\/\r\n\t\tthis.init = function() {\r\n\t\t\tthis.get_all_items_pagination();\r\n\t\t}\r\n\t\t\r\n\t\t\/**\r\n\t\t * Load front-end items pagination.\r\n\t\t *\/\r\n\t\tthis.get_all_items_pagination = function() {\r\n\t\t\t\r\n\t\t\t_this = this;\r\n\t\t\t\r\n\t\t\t\/* Check if our hidden form input is not empty, meaning it's not the first time viewing the page. *\/\r\n\t\t\tif($('form.post-list input').val()){\r\n\t\t\t\t\/* Submit hidden form input value to load previous page number *\/\r\n\t\t\t\tdata = JSON.parse($('form.post-list input').val());\r\n\t\t\t\t_this.ajax_get_all_items_pagination(data.page, data.name, data.sort);\r\n\t\t\t} else {\r\n\t\t\t\t\/* Load first page *\/\r\n\t\t\t\t_this.ajax_get_all_items_pagination(1, $('.post_name').val(), $('.post_sort').val());\r\n\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\/* Search *\/\r\n\t\t\t$('body').on('click', '.post_search_submit', function(){\r\n\t\t\t\t_this.ajax_get_all_items_pagination(1, $('.post_name').val(), $('.post_sort').val());\r\n\t\t\t});\r\n\t\t\t\/* Search when Enter Key is triggered *\/\r\n\t\t\t$(\".post_search_text\").keyup(function (e) {\r\n\t\t\t\tif (e.keyCode == 13) {\r\n\t\t\t\t\t_this.ajax_get_all_items_pagination(1, $('.post_name').val(), $('.post_sort').val());\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\t\/* Pagination Clicks   *\/                  \r\n\t\t\t$('body').on('click', '.pagination-nav li.active', function(){\r\n\t\t\t\tvar page = $(this).attr('p');\r\n\t\t\t\t_this.ajax_get_all_items_pagination(page, $('.post_name').val(), $('.post_sort').val());                \r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\t\/**\r\n\t\t * AJAX front-end items pagination.\r\n\t\t *\/\r\n\t\tthis.ajax_get_all_items_pagination = function(page, order_by_name, order_by_sort){\r\n\t\t\t\r\n\t\t\tif($(\".pagination-container\").length > 0 && $('.products-view-all').length > 0 ){\r\n\t\t\t\t$(\".pagination-container\").html('<img src=\"images\/loading.gif\" class=\"ml-tb\" \/>');\r\n\t\t\t\t\r\n\t\t\t\tvar post_data = {\r\n\t\t\t\t\tpage: page,\r\n\t\t\t\t\tsearch: $('.post_search_text').val(),\r\n\t\t\t\t\tname: order_by_name,\r\n\t\t\t\t\tsort: order_by_sort,\r\n\t\t\t\t\tmax: $('.post_max').val(),\r\n\t\t\t\t};\r\n\t\t\t\t\r\n\t\t\t\t$('form.post-list input').val(JSON.stringify(post_data));\r\n\t\t\t\t\r\n\t\t\t\tvar data = {\r\n\t\t\t\t\taction: 'get-all-products',\r\n\t\t\t\t\tdata: JSON.parse($('form.post-list input').val())\r\n\t\t\t\t};\r\n\t\t\t\t\r\n\t\t\t\t$.ajax({\r\n\t\t\t\t\turl: 'products\/view-front',\r\n\t\t\t\t\ttype: 'POST',\r\n\t\t\t\t\tcontentType: 'application\/json',\r\n\t\t\t\t\tdata: JSON.stringify(data),\r\n\t\t\t\t\tsuccess: function (response) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif($(\".pagination-container\").html(response.content)){\r\n\t\t\t\t\t\t\t$('.pagination-nav').html(response.navigation);\r\n\t\t\t\t\t\t\t$('.table-post-list th').each(function() {\r\n\t\t\t\t\t\t\t\t\/* Append the button indicator *\/\r\n\t\t\t\t\t\t\t\t$(this).find('span.glyphicon').remove();    \r\n\t\t\t\t\t\t\t\tif($(this).hasClass('active')){\r\n\t\t\t\t\t\t\t\t\tif(JSON.parse($('form.post-list input').val()).th_sort == 'DESC'){\r\n\t\t\t\t\t\t\t\t\t\t$(this).append(' <span class=\"glyphicon glyphicon-chevron-down pull-right\"><\/span>');\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t$(this).append(' <span class=\"glyphicon glyphicon-chevron-up pull-right\"><\/span>');\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\/**\r\n * When the document has been loaded...\r\n *\r\n *\/\r\njQuery(document).ready( function () {\r\n\tposts = new app.Posts(); \/* Instantiate the Posts Class *\/\r\n\tposts.init(); \/* Load Posts class methods *\/\t\r\n});\r\n[\/cc]\r\n\r\n<h3>Routes<\/h3>\r\nRouting refers to determining how an application responds to a client request to a particular endpoint, which is a URI (or path) and a specific HTTP request method (GET, POST, and so on). When you install the Express module, it includes 2 routes: index.js and users.js. Open the file index.js and include the codes bellow:\r\n[cc lang = \"javascript\"]\r\nvar express = require('express');\r\nvar router = express.Router();\r\nvar async = require('async');\r\n\r\n\/* GET products page. *\/\r\nrouter.get('\/products', function(req, res, next) {\r\n\tres.render('front\/products', { title: 'Products' });\r\n});\r\n\r\n\/* Handles the pagination. *\/\r\nrouter.post('\/products\/view-front', function(req, res){\r\n\t\r\n\t\/* Set our internal DB variable *\/\r\n    var db = req.db;\r\n\t\r\n\t\t\/* Set our collection *\/\r\n\t\tproducts = db.get('products');\r\n\t\t\r\n\t\tpag_content = '';\r\n\t\tpag_navigation = '';\r\n\t\r\n\t\tpage = parseInt(req.body.data.page); \/* Page we are currently at *\/\r\n\t\tname = req.body.data.name; \/* Name of the column name we want to sort *\/\r\n\t\tsort = req.body.data.sort == 'ASC' ? 1 : -1; \/* Order of our sort (DESC or ASC) *\/\r\n\t\tmax = parseInt(req.body.data.max); \/* Number of items to display per page *\/\r\n\t\tsearch = req.body.data.search; \/* Keyword provided on our search box *\/\r\n\t\t\r\n\t\tcur_page = page;\r\n\t\tpage -= 1;\r\n\t\tper_page = max ? max : 20; \r\n\t\tprevious_btn = true;\r\n\t\tnext_btn = true;\r\n\t\tfirst_btn = true;\r\n\t\tlast_btn = true;\r\n\t\tstart = page * per_page;\r\n\t\r\n\t\twhere_search = {};\r\n\t\r\n\t\/* Check if there is a string inputted on the search box *\/\r\n\tif( search != '' ){\r\n\t\t\/* If a string is inputted, include an additional query logic to our main query to filter the results *\/\r\n\t\tvar filter = new RegExp(search, 'i');\r\n\t\twhere_search = {\r\n\t\t\t'$or' : [\r\n\t\t\t\t{'name' : filter},\r\n\t\t\t\t{'price' : filter},\r\n\t\t\t]\r\n\t\t}\r\n\t}\r\n\t\r\n\tvar all_items = '';\r\n\tvar count = '';\r\n\tvar sort_query = {};\r\n\t\r\n\t\/* We use async task to make sure we only return data when all queries completed successfully *\/\r\n\tasync.parallel([\r\n\t\tfunction(callback) {\r\n\t\t\t\/* Use name and sort variables as field names *\/\r\n\t\t\tsort_query[name] = sort;\r\n\t\t\t\r\n\t\t\t\/* Retrieve all the posts *\/\r\n\t\t\tproducts.find( where_search, {\r\n\t\t\t\tlimit: per_page,\r\n\t\t\t\tskip: start,\r\n\t\t\t\tsort: sort_query\r\n\t\t\t\t\r\n\t\t\t}, function(err, docs){\r\n\t\t\t\tif (err) throw err;\r\n\t\t\t\t\/\/ console.log(docs);\r\n\t\t\t\tall_items = docs;\r\n\t\t\t\tcallback();\r\n\t\t\t\t\r\n\t\t\t});\r\n\t\t},\r\n\t\tfunction(callback) {\r\n\t\t\tproducts.count(where_search, function(err, doc_count){\r\n\t\t\t\tif (err) throw err;\r\n\t\t\t\t\/\/ console.log(count);\r\n\t\t\t\tcount = doc_count;\r\n\t\t\t\tcallback();\r\n\t\t\t});\r\n\t\t}\r\n\t], function(err) { \/\/This is the final callback\r\n\t\t\/* Check if our query returns anything. *\/\r\n\t\tif( count ){\r\n\t\t\tfor (var key in all_items) {\r\n\t\t\t\tpag_content += '<div class=\"col-sm-3\">' + \r\n\t\t\t\t\t'<div class=\"panel panel-default\">' + \r\n\t\t\t\t\t\t'<div class=\"panel-heading\">' + \r\n\t\t\t\t\t\t\tall_items[key].name +\r\n\t\t\t\t\t\t'<\/div>' + \r\n\t\t\t\t\t\t'<div class=\"panel-body p-0 p-b\">' + \r\n\t\t\t\t\t\t\t'<a href=\"products-single.php?item=' + all_items[key]._id + '\"><img src=\"img\/uploads\/' + all_items[key].featured_image + '\" width=\"100%\" class=\"img-responsive\" \/><\/a>' + \r\n\t\t\t\t\t\t\t'<div class=\"list-group m-0\">' + \r\n\t\t\t\t\t\t\t\t'<div class=\"list-group-item b-0 b-t\">' + \r\n\t\t\t\t\t\t\t\t\t'<i class=\"fa fa-calendar-o fa-2x pull-left ml-r\"><\/i>' + \r\n\t\t\t\t\t\t\t\t\t'<p class=\"list-group-item-text\">Price<\/p>' + \r\n\t\t\t\t\t\t\t\t\t'<h4 class=\"list-group-item-heading\">$' + parseFloat(all_items[key].price).toFixed(2) + '<\/h4>' + \r\n\t\t\t\t\t\t\t\t'<\/div>' + \r\n\t\t\t\t\t\t\t\t'<div class=\"list-group-item b-0 b-t\">' + \r\n\t\t\t\t\t\t\t\t\t'<i class=\"fa fa-calendar fa-2x pull-left ml-r\"><\/i>' + \r\n\t\t\t\t\t\t\t\t\t'<p class=\"list-group-item-text\">Quantity<\/p>' + \r\n\t\t\t\t\t\t\t\t\t'<h4 class=\"list-group-item-heading\">' + all_items[key].quantity + '<\/h4>' + \r\n\t\t\t\t\t\t\t\t'<\/div>' + \r\n\t\t\t\t\t\t\t'<\/div>' + \r\n\t\t\t\t\t\t'<\/div>' + \r\n\t\t\t\t\t\t'<div class=\"panel-footer\">' + \r\n\t\t\t\t\t\t\t'<\/p><a href=\"products-single.php?item=' + all_items[key]._id + '\" class=\"btn btn-success btn-block\">View Item<\/a><\/p>' + \r\n\t\t\t\t\t\t '<\/div>' + \r\n\t\t\t\t\t'<\/div>' + \r\n\t\t\t\t'<\/div>';\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tpag_content = pag_content + \"<br class = 'clear' \/>\";\r\n\t\t\r\n\t\tno_of_paginations = Math.ceil(count \/ per_page);\r\n\r\n\t\tif (cur_page >= 7) {\r\n\t\t\tstart_loop = cur_page - 3;\r\n\t\t\tif (no_of_paginations > cur_page + 3)\r\n\t\t\t\tend_loop = cur_page + 3;\r\n\t\t\telse if (cur_page <= no_of_paginations && cur_page > no_of_paginations - 6) {\r\n\t\t\t\tstart_loop = no_of_paginations - 6;\r\n\t\t\t\tend_loop = no_of_paginations;\r\n\t\t\t} else {\r\n\t\t\t\tend_loop = no_of_paginations;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tstart_loop = 1;\r\n\t\t\tif (no_of_paginations > 7)\r\n\t\t\t\tend_loop = 7;\r\n\t\t\telse\r\n\t\t\t\tend_loop = no_of_paginations;\r\n\t\t}\r\n\t\t  \r\n\t\tpag_navigation += \"<ul>\";\r\n\r\n\t\tif (first_btn && cur_page > 1) {\r\n\t\t\tpag_navigation += \"<li p='1' class='active'>First<\/li>\";\r\n\t\t} else if (first_btn) {\r\n\t\t\tpag_navigation += \"<li p='1' class='inactive'>First<\/li>\";\r\n\t\t} \r\n\r\n\t\tif (previous_btn && cur_page > 1) {\r\n\t\t\tpre = cur_page - 1;\r\n\t\t\tpag_navigation += \"<li p='\" + pre + \"' class='active'>Previous<\/li>\";\r\n\t\t} else if (previous_btn) {\r\n\t\t\tpag_navigation += \"<li class='inactive'>Previous<\/li>\";\r\n\t\t}\r\n\t\tfor (i = start_loop; i <= end_loop; i++) {\r\n\r\n\t\t\tif (cur_page == i)\r\n\t\t\t\tpag_navigation += \"<li p='\" + i + \"' class = 'selected' >\" + i + \"<\/li>\";\r\n\t\t\telse\r\n\t\t\t\tpag_navigation += \"<li p='\" + i + \"' class='active'>\" + i + \"<\/li>\";\r\n\t\t}\r\n\t\t\r\n\t\tif (next_btn && cur_page < no_of_paginations) {\r\n\t\t\tnex = cur_page + 1;\r\n\t\t\tpag_navigation += \"<li p='\" + nex + \"' class='active'>Next<\/li>\";\r\n\t\t} else if (next_btn) {\r\n\t\t\tpag_navigation += \"<li class='inactive'>Next<\/li>\";\r\n\t\t}\r\n\r\n\t\tif (last_btn && cur_page < no_of_paginations) {\r\n\t\t\tpag_navigation += \"<li p='\" + no_of_paginations + \"' class='active'>Last<\/li>\";\r\n\t\t} else if (last_btn) {\r\n\t\t\tpag_navigation += \"<li p='\" + no_of_paginations + \"' class='inactive'>Last<\/li>\";\r\n\t\t}\r\n\r\n\t\tpag_navigation = pag_navigation + \"<\/ul>\";\r\n\t\t\r\n\t\tvar response = {\r\n\t\t\t'content': pag_content,\r\n\t\t\t'navigation' : pag_navigation\r\n\t\t};\r\n\t\t\r\n\t\tres.send(response);\r\n\t\t\r\n\t});\r\n\r\n});\r\n\r\nmodule.exports = router;\r\n[\/cc]\r\n                                                     \r\nWhat the code above does is it tells our server what to render(GET) and what to do(POST) when the page is accessed. We have defined two routes: \r\n<ul>\r\n<li><strong>\/products<\/strong> - When the user types in \/products on their URL bar, we serve them our products.jade template view. <\/li>\r\n<li><strong>\/products\/view-front<\/strong> - This route processes all user clicks coming from products page. When it receives a post request from our MyPaginationClass.js via AJAX, it will query for data that matches the query string(s) of our user input and then render it all back to our browser screen via the res.send() function. If you notice we are using Async Task - this is necessary so we can tell NodeJS to wait until all our MongoDB queries finished executing before processing the query results in our pagination. This may seem like we created a blocking script but the Async Module already helps prevent that kind of case.<\/li><\/ul>\r\n\r\n<h3>Style the Nagivation<\/h3>\r\nAdd this to your stylesheet:\r\n[cc lang=\"css\"]\r\n\/* Pagination Styles *\/\r\n.pagination-nav { margin: 30px 0 20px 0; }\r\n.pagination-nav ul {margin: 0; padding: 0;}\r\n.pagination-nav ul li {display: inline-block; margin: 3px; padding: 4px 8px; background: #FFF; color: black; }\r\n.pagination-nav ul li.active:hover {cursor: pointer; background: #367fa9; color: white; }\r\n.pagination-nav ul li.inactive {background: #CACACA;}\r\n.pagination-nav ul li.selected {background: #367fa9; color: white;}\r\n[\/cc]                                                                                                                          \r\n<h3>That's it, we're done!<\/h3>\r\nYou can now test the code by navigating to <a href=\"http:\/\/27.0.0.1:3000\/products\" target=\"_blank\">http:\/\/27.0.0.1:3000\/products<\/a>","post_title":"Node.js AJAX Pagination with MongoDB + Search + Sort + Filter","post_excerpt":"Create a simple pagination that loads the content dynamically from NodeJs server.","post_status":"publish","comment_status":"open","ping_status":"open","post_password":"","post_name":"nodejs-ajax-pagination-with-mongodb-search-sort-filter","to_ping":"","pinged":"","post_modified":"2016-09-15 11:04:59","post_modified_gmt":"2016-09-15 03:04:59","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=1510","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":1582,"post_author":"1","post_date":"2016-09-28 12:54:12","post_date_gmt":"2016-09-28 04:54:12","post_content":"A lot of sites add a members section, where users are authenticated by means of a username and password. Once the user is logged in successfully, he or she can then gain access to the restricted areas of the site.\u00a0You are probably here because you are seeking\u00a0for a simple user authentication using\u00a0Node.js, well you came to the right place.\r\n\r\nWhat I am offering on this tutorial is a complete script for Login, Registration and Account page. The project is available on github -\u00a0<strong><a href=\"https:\/\/github.com\/carlo-fontanos\/node.js-auth\">Download on Github<\/a><\/strong>. I kept everything well documented on my codes, but feel free to contact me or leave a comment bellow if you have any questions or if you found a bug.\r\n<h3>Modules used:<\/h3>\r\nFor the base of our application, we are going to use the\u00a0framework: <span style=\"color: #800000;\"><strong>Express<\/strong><\/span>.\u00a0Express is a minimal and flexible Node.js web application framework that provides a robust set of features to develop web and mobile applications. It facilitates the rapid development of Node based Web applications.\u00a0For the user authentication, we are going to use <span style=\"color: #800000;\"><strong>Passport.js<\/strong><\/span> local strategy.\u00a0Passport is an authentication middleware for Node.js. it is extremely flexible and modular, Passport can be unobtrusively dropped in to any Express-based web application.\u00a0For our database we are going to use <span style=\"color: #800000;\"><strong>MongoDB<\/strong><\/span>. MongoDB is an open-source document database, and leading NoSQL database. MongoDB obviates the need for an Object Relational Mapping (ORM) to facilitate development.\u00a0And lastly, for the password hashing algorithm we are going to utilize <span style=\"color: #800000;\"><strong>Crypto MD5<\/strong><\/span>.\r\n\r\nOther modules that I used on this project:\r\n<ul>\r\n \t<li><span style=\"color: #800000;\">async<\/span><\/li>\r\n \t<li><span style=\"color: #800000;\">connect-flash<\/span><\/li>\r\n \t<li><span style=\"color: #800000;\">jade<\/span><\/li>\r\n \t<li><span style=\"color: #800000;\">monk<\/span><\/li>\r\n<\/ul>\r\n<h3>Screenshots:<\/h3>\r\n<span style=\"color: #800000;\"><strong>Registration Page<\/strong><\/span>\r\n\r\n<img class=\"alignnone size-full wp-image-1587\" src=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2016\/09\/screencapture-127-0-0-1-3000-user-account-1475038825299.png\" alt=\"screencapture-127-0-0-1-3000-user-account-1475038825299\" width=\"1360\" height=\"1175\" \/>\r\n\r\n<strong><span style=\"color: #800000;\"> Login Page:<\/span><\/strong>\r\n\r\n<img class=\"alignnone size-full wp-image-1588\" src=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2016\/09\/screencapture-127-0-0-1-3000-user-login-1475038756650.png\" alt=\"screencapture-127-0-0-1-3000-user-login-1475038756650\" width=\"1360\" height=\"638\" \/>\r\n\r\n<strong><span style=\"color: #800000;\"> Account Page:<\/span><\/strong>\r\n\r\n<img class=\"alignnone size-full wp-image-1589\" src=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2016\/09\/screencapture-127-0-0-1-3000-user-register-1475038805973.png\" alt=\"screencapture-127-0-0-1-3000-user-register-1475038805973\" width=\"1360\" height=\"643\" \/>\r\n<h3>How do I get setup?<\/h3>\r\n<ol>\r\n \t<li>Create a folder called \"data\" in the root directory of our nodejs project. This is where MongoDB documents will be stored.<\/li>\r\n \t<li>Go to MongoDB installation directory and under the bin folder run this command: <em><span style=\"color: #008080;\">mongod --dbpath C:\\Users\\Carl\\Documents\\nodejs-auth\\data<\/span><\/em> This will start the MongoDB server. Leave this CLI instance open and start another CLI instance.<\/li>\r\n \t<li>In the new CLI, navigate to where you pulled this repository, ex. C:\\Users\\Carl\\Documents\\nodejs-auth, then type-in: <em><span style=\"color: #008080;\">npm install<\/span><\/em> then wait till it finishes installing all the modules required to run our Node.js Web Application.<\/li>\r\n \t<li>Once the installation is completed, type in the following command to run our Web Application: <em><span style=\"color: #008080;\">npm start<\/span><\/em> Make sure to keep the CLI opened.<\/li>\r\n \t<li>Now go to <a href=\"http:\/\/127.0.0.1:3100\/\">http:\/\/127.0.0.1:3000\/<\/a> using your favorite browser.<\/li>\r\n<\/ol>","post_title":"Node.js Authentication","post_excerpt":"A simple user authentication example using Express and Passport.js which includes pages for Login, Register, and Account. ","post_status":"publish","comment_status":"open","ping_status":"open","post_password":"","post_name":"node-js-authentication","to_ping":"","pinged":"","post_modified":"2017-04-22 23:01:39","post_modified_gmt":"2017-04-22 15:01:39","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=1582","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":989,"post_author":"1","post_date":"2014-11-27 09:59:38","post_date_gmt":"2014-11-27 09:59:38","post_content":"After several edits on site postings, there may be several dozen copies of revisions and many of them are days or weeks old. \r\n\r\nNow that we know that every one of these old versions is stored in the database we understand why it is growing exponentially in size making it all but impossible to manage, download, upload etc. While having all these copies is somewhat helpful during editing, once an article is published they are of little or no further use. Some or all need to be deleted for very practical reasons.\r\n\r\nBest way to stop WordPress from saving revisions on database is to simply define this code into your config.php:\r\n<code>define('WP_POST_REVISIONS', false );<\/code>\r\n\r\nAdditionally, you might also want to increase the autosave time interval:\r\n<code>define('AUTOSAVE_INTERVAL', 300 ); \/\/ seconds<\/code>\r\n\r\nTo delete all revisions that are stored in your database, simply execute this SQL query in your command line:\r\n<code>DELETE FROM wp_posts WHERE post_type = \"revision\"<\/code>\r\nMake sure to change the wp_ prefix with your database prefix.\r\n\r\n\r\n","post_title":"Optimize WordPress Database by Disabling and Removing Revisions","post_excerpt":"Disable the saving of revisions in your WordPress blog to optimize your Wordpress database.","post_status":"publish","comment_status":"open","ping_status":"closed","post_password":"","post_name":"optimize-wordpress-database-by-disabling-and-removing-revisions","to_ping":"","pinged":"","post_modified":"2015-05-11 02:12:42","post_modified_gmt":"2015-05-11 02:12:42","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=989","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":1757,"post_author":"1","post_date":"2017-01-12 15:57:31","post_date_gmt":"2017-01-12 07:57:31","post_content":"Do you have large amount of files sitting in just one directory? Have you ever thought about organizing them in Year-Month-Day path programatically? \r\n\r\nWhat the code bellow does is it loops through each file on the specified directory then takes the date the file was created and formats it into a path, ex. 2017\/January\/12, now that we know the path - we can use it for creating the directory heirarchy tree. If the path does not exist yet - we create it. After the path is created, we then move the file inside it. \r\n\r\n[cc lang=\"php\"]\r\n<?php\r\n$image_folder = 'images\/';\r\n$files = glob( $image_folder . '*.{jpg,png,gif}', GLOB_BRACE) ;\r\n\r\nforeach( $files as $file ) {\r\n\t$time_stamp = filemtime( $file ); \/* Get date create of the file *\/\r\n\t$path_date = date( 'Y\/F\/d', $time_stamp ); \/* Returns the format: [Year]\/[Month]\/[Day] *\/\r\n\t\r\n\t\/* Create path if not yet existing *\/\r\n\tif ( ! file_exists( $image_folder . $path_date ) ) {\r\n\t\tmkdir( $image_folder . $path_date, 0777, true );\r\n\t}\r\n\t\r\n\t\/* Use \"rename\" instead of \"copy\" if you want to MOVE the file *\/\r\n\tcopy( $file, $image_folder . $path_date . '\/' . explode( 'images\/', $file )[1] );\r\n\t\r\n\t\/* Do database update here if necessary *\/\t\r\n}\r\n[\/cc]","post_title":"Organize Diretory Files into Year-Month-Day Heirarchy using PHP","post_excerpt":"Do you have large amount of files sitting in just one directory? Have you ever thought about organizing them in Year-Month-Day path programatically?  Let's get started.","post_status":"publish","comment_status":"open","ping_status":"open","post_password":"","post_name":"organize-diretory-files-into-year-month-day-heirarchy-using-php","to_ping":"","pinged":"","post_modified":"2017-01-12 16:02:27","post_modified_gmt":"2017-01-12 08:02:27","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=1757","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":1097,"post_author":"1","post_date":"2015-02-18 10:18:36","post_date_gmt":"2015-02-18 10:18:36","post_content":"Recently I was working on a WooCommerce project and was having problems customizing the Products Page, I can't seem to override the archive-product.php. Later I found out that the problem is due to the function woocommerce_content() outputting the wrong page for archive content.\r\n\r\nTo get around it, replace <code><?php woocommerce_content() ?><\/code> in woocommerce.php with:\r\n[cc lang = \"php\"]\r\n<?php if ( is_singular( 'product' ) ): ?>\r\n\t<?php woocommerce_content(); ?> \r\n<?php else: ?>\r\n\t<?php woocommerce_get_template( 'archive-product.php' ); ?>\r\n<?php endif; ?>\r\n[\/cc]\r\n\r\n","post_title":"Overriding WooCommerce archive-product.php","post_excerpt":"Best way to customize your Products page in Woocommerce","post_status":"publish","comment_status":"open","ping_status":"open","post_password":"","post_name":"overriding-woocommerce-archive-product-php","to_ping":"","pinged":"","post_modified":"2015-02-18 10:24:34","post_modified_gmt":"2015-02-18 10:24:34","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=1097","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":1009,"post_author":"1","post_date":"2015-01-05 05:28:24","post_date_gmt":"2015-01-05 05:28:24","post_content":"Add the the block of code bellow into your functions.php\r\n\r\n[cc lang = \"php\"]\r\nadd_action('wp_enqueue_scripts', 'cvf_st_load_custom_css_before_main') );\r\n\r\nfunction cvf_st_load_custom_css_before_main() {\r\n\t\t  \r\n\tif (class_exists('woocommerce')){\r\n\t\twp_enqueue_style('my-woocommerce-style', get_template_directory_uri().'\/css\/woocommerce.css', array('woocommerce-general'));\r\n\t}\r\n\t\r\n}\r\n[\/cc]\r\n\r\nMake sure that you change \"get_template_directory_uri().'\/css\/woocommerce.css'\" to the path of your custom style sheet. \r\n\r\nIn essence, what we did is we changed the order that your styles load so that your theme's stylesheet is loaded after the WooCommerce stylesheet. i.e. it is enqueued at a higher priority.","post_title":"Overriding Woocommerce CSS","post_excerpt":"Loading a custom style sheet before Woocommerce style sheet","post_status":"publish","comment_status":"open","ping_status":"closed","post_password":"","post_name":"overriding-woocommerce-css","to_ping":"","pinged":"","post_modified":"2015-02-09 06:06:51","post_modified_gmt":"2015-02-09 06:06:51","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=1009","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":1144,"post_author":"1","post_date":"2015-07-10 17:38:19","post_date_gmt":"2015-07-10 17:38:19","post_content":"There will be times you will be tasked to enter all the data stored inside an excel file into the database. Why waste your time encoding all the data or hiring someone to do it for you if you can simply create a simple script that will read through the columns of your spreadsheet?\r\n\r\nIn this tutorial I am going to discuss how you can access the columns of your spreadsheet and insert it into your database.\r\n\r\n<h3>Setting up a CSV File<\/h3>\r\n\r\nFirst you will want to create a CSV file, create a new text file in your desktop or project folder, name it anything you want without spaces. For the extension you will have to enter \".csv\", now open the file you just created using your Excel Reader. You will notice that the interface looks similar to Excel. Now open the file containing your Excel table data and copy and paste it into the CSV file you created then save it.\r\n\r\n<h3>Parsing the CSV File<\/h3>\r\n\r\nThere is a cool function called \"fgetcsv()\" which we will be using in parsing the data from your CSV file:\r\n\r\nIn your project folder, create a file: index.php and add the following code then save it:\r\n\r\n[cc lang = \"php\"]\r\n$file = fopen('folder_name\/csv_file.csv', 'r');\r\nwhile ( ( $line = fgetcsv( $file ) ) !== FALSE) {\r\n\techo '<pre>';\r\n\tprint_r($line);\r\n\techo '<\/pre>';\r\n}\r\nfclose( $file );\r\n[\/cc]\r\n\r\nMake sure to change first parameter of the fopen to the destination of your CSV file. \r\n\r\nTo make sure everything is working perfectly without errors, try accessing your project folder from your browser. If successful, you should see several Arrays containing the data of each row of your CSV file. \r\n\r\n<h3>Accessing the Columns within the Loop<\/h3>\r\n\r\nTo access the column, simply use the reference key of the columns:\r\n\r\n<code>echo $line[0];<\/code>\r\n<code>$column1 = $line[1];<\/code>\r\n\r\n<h3>Inserting Data into the Database<\/h3>\r\n\r\nBellow is a simple example of inserting data into the database using MySQLi Object-oriented.\r\n\r\n[cc lang = \"php\"]\r\n<?php\r\n$servername = \"localhost\";\r\n$username = \"username\";\r\n$password = \"password\";\r\n$dbname = \"dbname\";\r\n\r\n\/\/ Create connection\r\n$conn = new mysqli($servername, $username, $password, $dbname);\r\n\r\n\/\/ Check connection\r\nif ($conn->connect_error) {\r\n    die(\"Connection failed: \" . $conn->connect_error);\r\n} \r\n\r\n$file = fopen('folder_name\/csv_file.csv', 'r');\r\nwhile ( ( $line = fgetcsv( $file ) ) !== FALSE) {\r\n\t$sql = \"INSERT INTO table_name (column1, column2, column3)\r\n\tVALUES ('\" . $file[0] . \"', '\" . $file[1] . \"', '\" . $file[2] . \"')\";\r\n}\r\nfclose( $file );\r\n\r\n$conn->close();\r\n?>\r\n[\/cc]","post_title":"Parsing a CSV File using PHP","post_excerpt":"Describes how you can access the columns of a CSV file and insert the items into the database","post_status":"publish","comment_status":"open","ping_status":"open","post_password":"","post_name":"parsing-a-csv-file-using-php","to_ping":"","pinged":"","post_modified":"2015-07-16 19:01:00","post_modified_gmt":"2015-07-16 19:01:00","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=1144","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":609,"post_author":"1","post_date":"2014-08-16 03:41:57","post_date_gmt":"2014-08-16 03:41:57","post_content":"[cc lang = \"php\"]\r\nfunction cvf_ps_generate_random_code($length=10) {\r\n \r\n   $string = '';\r\n   \/\/ You can define your own characters here.\r\n   $characters = \"23456789ABCDEFHJKLMNPRTVWXYZabcdefghijklmnopqrstuvwxyz\";\r\n \r\n   for ($p = 0; $p < $length; $p++) {\r\n       $string .= $characters[mt_rand(0, strlen($characters)-1)];\r\n   }\r\n \r\n   return $string;\r\n \r\n}\r\n[\/cc]","post_title":"PHP Function that Generates Random Characters","post_excerpt":"Simple PHP Function that allows you to generate random codes and define your own characters and length of code.","post_status":"publish","comment_status":"open","ping_status":"closed","post_password":"","post_name":"php-function-that-generates-random-characters","to_ping":"","pinged":"","post_modified":"2015-02-09 07:03:43","post_modified_gmt":"2015-02-09 07:03:43","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=609","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":613,"post_author":"1","post_date":"2014-08-16 03:57:56","post_date_gmt":"2014-08-16 03:57:56","post_content":"[cc lang = \"php\"]\r\nfunction cvf_ps_check_date_format($date) { \r\n\r\n\t\/\/ define your format here\r\n\t$format = \"m\/d\/Y\";\r\n\t$date_format= DateTime::createFromFormat($format, $date);\r\n\t\r\n\tif(!$date_format) {\r\n\t\treturn false;\r\n\t} else {\r\n\t\treturn true;\r\n\t}\r\n}\r\n[\/cc]","post_title":"PHP Function to Validate Date Format","post_excerpt":"Simple PHP Function that can be used to validate date format of user input","post_status":"publish","comment_status":"open","ping_status":"closed","post_password":"","post_name":"php-function-to-validate-date-format","to_ping":"","pinged":"","post_modified":"2015-02-09 07:00:36","post_modified_gmt":"2015-02-09 07:00:36","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=613","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":611,"post_author":"1","post_date":"2014-08-16 03:52:58","post_date_gmt":"2014-08-16 03:52:58","post_content":"[cc lang = \"php\"]\r\nfunction cvf_ps_check_user_age ($birthDate) {\r\n        \r\n    \/\/ Define the date separator then explode to get each value\r\n\t$birthDate = explode(\"\/\", $birthDate);\r\n\t  \r\n\t$age = (date(\"md\", date(\"U\", mktime(0, 0, 0, $birthDate[0], $birthDate[1], $birthDate[2]))) > date(\"md\")\r\n\t? ((date(\"Y\") - $birthDate[2]) - 1)\r\n\t: (date(\"Y\") - $birthDate[2]));\r\n\t\r\n    \/\/ Define the age restriction\r\n\tif ($age > 18) {\r\n\t\treturn true;\r\n\t} else {\r\n\t\treturn false;\t\r\n\t}\r\n}\r\n[\/cc]","post_title":"PHP Function to Validate User Age","post_excerpt":"Simple PHP Function that allows you to check \/ validate the age of your users to prevent them from accessing exclusive web contents","post_status":"publish","comment_status":"open","ping_status":"closed","post_password":"","post_name":"php-function-to-validate-user-age","to_ping":"","pinged":"","post_modified":"2015-02-09 07:02:05","post_modified_gmt":"2015-02-09 07:02:05","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=611","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":1125,"post_author":"1","post_date":"2015-05-04 08:42:05","post_date_gmt":"2015-05-04 08:42:05","post_content":"In general, \"<strong><em>Polymorphism is an object-oriented programming concept that refers to the ability of a variable, function or object to take on multiple forms.<\/em><\/strong>\"\r\n\r\nMost beginners would find the above description confusing, so let me give you real world example for you to better understand how it really works.\r\n\r\nLet's say we have a Dog, Cat and a Rabbit class. They're all different but they all fall under the same category as Animal. So, it would make sense to create an interface named Animal and have all these classes implement it. That is basically Polymorphism, it's a collection(interface) of classes that have many forms.\r\n\r\nAssuming that we define Animal as a class instead of an interface, then forget about the Dog, Cat and Rabbit classes. The Animal class is very broad because there is so many kinds of Animal. Every animal is different, but they\u2019re all categorized under Animal. Because of these you will have to create multiple conditional statements which makes a long and messy class that is not very efficient. \r\n\r\nInstead of creating a class for a broad subject, you can create an interface for a bunch of different classes that run differently.\r\n\r\n<h3>Example<\/h3>\r\nLet's use 'Shape' as our category:\r\n\r\n[cc lang = \"php\"]\r\n<?php\r\n\r\n\/\/ Shape is the base class\r\ninterface Shape {\r\n\t\/\/ Define method(s) that will be used by classes who will be implementing this interface.\r\n\tpublic function getArea();\r\n}\r\n\r\nclass Square implements Shape {\r\n\tprivate $width;\r\n\tprivate $height;\r\n\r\n\tpublic function __construct($width, $height) {\r\n\t\t$this->width = $width;\r\n\t\t$this->height = $height;\r\n\t}\r\n\r\n\tpublic function getArea(){\r\n\t\treturn $this->width * $this->height;\r\n\t}\r\n}\r\n\r\nclass Circle implements Shape {\r\n\tprivate $radius;\r\n\r\n\tpublic function __construct($radius) {\r\n\t\t$this->radius = $radius;\r\n\t}\r\n\r\n\tpublic function getArea(){\r\n\r\n\t\treturn $this->radius * $this->radius * 3.14;\r\n\t}\r\n}\r\n\r\nfunction calculateArea(Shape $shape) {\r\n\treturn $shape->getArea();\r\n}\r\n\r\necho calculateArea(new Square(5, 5)) . \"<br\/>\";\r\necho calculateArea(new Circle(7));\r\n[\/cc]\r\n\r\n<h3>Conclusion<\/h3>\r\nPolymorphism is used to make applications more modular and extensible. Instead of messy conditional statements describing different courses of action, you create interchangeable objects that you select based on your needs.\r\n","post_title":"Polymorphism - OOP PHP Tutorial","post_excerpt":"Understanding Polymorphism and its usage and advantages.","post_status":"publish","comment_status":"open","ping_status":"open","post_password":"","post_name":"polymorphism-oop-php-tutorial","to_ping":"","pinged":"","post_modified":"2015-05-04 08:49:57","post_modified_gmt":"2015-05-04 08:49:57","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=1125","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":1020,"post_author":"1","post_date":"2015-01-07 05:46:15","post_date_gmt":"2015-01-07 05:46:15","post_content":"<a href=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2015\/01\/post_banner_1.jpg\"><img src=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2015\/01\/post_banner_1.jpg\" alt=\"post_banner_1\" width=\"947\" height=\"497\" class=\"alignnone size-full wp-image-1021\" \/><\/a>\r\n\r\n<span id=\"page-has-downlodable-file\" file=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2015\/01\/post-banner.zip\"><\/span>\r\n\r\n<h3>Usage:<\/h3>\r\n\r\nWithin post editor, use:\r\n<code>[post-banner]<\/code>\r\n\r\nWithin WordPress loop, use:\r\n<code><?php echo do_shortcode( '[post-banner]' ); ?><\/code>\r\n\r\n<p>Plugin Code:<\/p>\r\n[cc lang = \"php\"]\r\n<?php\r\n\r\n\/*\r\n\tPlugin Name: Post Banner\r\n\tPlugin URI: http:\/\/carlofontanos.com\/post-banner-plugin\/\r\n\tDescription: Add a simple banner image to your posts and pages\r\n\tAuthor: Carl Victor Fontanos.\r\n\tVersion: 1.0\r\n\tAuthor URI: http:\/\/carlofontanos.com\/\r\n*\/\r\n\r\nadd_action('add_meta_boxes', array('CVF_Post_Banner', 'cvf_post_banner_image_meta') );\r\nadd_action('save_post', array('CVF_Post_Banner', 'cvf_post_banner_meta_save') );\r\nadd_action('admin_enqueue_scripts', array('CVF_Post_Banner', 'cvf_post_banner_image_enqueue') );\r\n\r\nadd_shortcode('post-banner', array('CVF_Post_Banner', 'cvf_post_banner_shortcode') );\r\n\r\nclass CVF_Post_Banner {\r\n\r\n\tpublic static function cvf_post_banner_image_meta() {\r\n\t\t\r\n\t\t$screens = array( 'post', 'page' );\r\n\r\n\t\tforeach ( $screens as $screen ) {\r\n\r\n\t\t\tadd_meta_box(\r\n\t\t\t\t'cvf_post_banner_meta',\r\n\t\t\t\t__( 'Banner Image', 'cvf-post-banner' ),\r\n\t\t\t\t'CVF_Post_Banner::cvf_post_banner_meta_callback',\r\n\t\t\t\t$screen, 'normal', 'core', ''\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic static function cvf_post_banner_meta_callback( $post ) {\r\n\t\t\r\n\t\twp_nonce_field( basename( __FILE__ ), 'cvf_post_banner_nonce' );\r\n\t\t\r\n\t\t$banner_image_url = get_post_meta( $post->ID, '_post_banner_image', true );\r\n\t\t\r\n\t\t$meta_box = ''; \r\n\t\t\r\n\t\t$meta_box .= '\r\n\t\t<p>\r\n\t\t\t<label for=\"banner-image\" class=\"cvf_post_banner-row-title\">Select Image<\/label>\r\n\t\t\t<input type=\"text\" name=\"banner-image\" id=\"banner-image\" value=\"';\r\n\t\t\t\r\n\t\t\tif (isset($banner_image_url)){ $meta_box .= $banner_image_url; }\r\n\t\t\t\r\n\t\t\t$meta_box .= '\"\/>\t\r\n\t\t\t<input type=\"button\" id=\"banner-image-button\" class=\"button\" value=\"Choose or Upload an Image\" \/>\r\n\t\t\t<div id = \"image-display\">';\r\n\t\t\t\r\n\t\t\tif($banner_image_url){\r\n\t\t\t\t$meta_box .= '<img src = \"' . $banner_image_url . '\" width = \"100%\" \/>';\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t$meta_box .= '\r\n\t\t\t<\/div>\r\n\t\t<\/p>';\r\n\t\t\r\n\t\techo $meta_box;\r\n\t\t\r\n\t}\r\n\r\n\tpublic static function cvf_post_banner_meta_save( $post_id ) {\r\n\t \r\n\t\t$is_autosave = wp_is_post_autosave( $post_id );\r\n\t\t$is_revision = wp_is_post_revision( $post_id );\r\n\t\t$is_valid_nonce = ( isset( $_POST[ 'cvf_post_banner_nonce' ] ) && wp_verify_nonce( $_POST[ 'cvf_post_banner_nonce' ], basename( __FILE__ ) ) ) ? 'true' : 'false';\r\n\t \r\n\t\tif ( $is_autosave || $is_revision || !$is_valid_nonce ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tif( isset( $_POST[ 'banner-image' ] ) ) {\r\n\t\t\tupdate_post_meta( $post_id, '_post_banner_image', $_POST[ 'banner-image' ] );\r\n\t\t}\r\n\r\n\t}\r\n\t\r\n\r\n\tpublic static function cvf_post_banner_image_enqueue() {\r\n\t\r\n\t\tglobal $typenow;\r\n\t\t\r\n\t\tif( $typenow == 'post' || $typenow == 'page' ) {\r\n\t\t\r\n\t\t\twp_enqueue_media();\r\n\t \r\n\t\t\twp_register_script( 'meta-box-image', plugin_dir_url( __FILE__ ) . 'js\/meta-box-image.js', array( 'jquery' ) );\r\n\t\t\twp_localize_script( 'meta-box-image', 'meta_image',\r\n\t\t\t\tarray(\r\n\t\t\t\t\t'title' => __( 'Choose or Upload an Image', 'cvf-post-banner' ),\r\n\t\t\t\t\t'button' => __( 'Use this image', 'cvf-post-banner' ),\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t\t\twp_enqueue_script( 'meta-box-image' );\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic static function cvf_post_banner_shortcode(){\r\n\t\t\r\n\t\tglobal $post;\r\n\t\t\r\n\t\t$banner_image = get_post_meta($post->ID, '_post_banner_image', true);\r\n\t\t\r\n\t\tif($banner_image){\r\n\t\t\treturn '<img src = \"' . $banner_image . '\" width = \"100%\" \/>';\r\n\t\t}\r\n\t\t\t\t\r\n\t}\r\n\t\t\r\n}\r\n[\/cc]\r\n\r\nJavascript:\r\n[cc lang = \"javascript\"]\r\n\/*\r\n * Attaches the image uploader to the input field\r\n *\/\r\njQuery(document).ready(function($){\r\n\r\n\t\/\/ Instantiates the variable that holds the media library frame.\r\n\tvar meta_image_frame;\r\n\r\n\t\/\/ Runs when the image button is clicked.\r\n\t$('#banner-image-button').click(function(e){\r\n\r\n\t\t\/\/ Prevents the default action from occuring.\r\n\t\te.preventDefault();\r\n\r\n\t\t\/\/ If the frame already exists, re-open it.\r\n\t\tif ( meta_image_frame ) {\r\n\t\t\tmeta_image_frame.open();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t\/\/ Sets up the media library frame\r\n\t\tmeta_image_frame = wp.media.frames.meta_image_frame = wp.media({\r\n\t\t\ttitle: meta_image.title,\r\n\t\t\tbutton: { text:  meta_image.button },\r\n\t\t\tlibrary: { type: 'image' }\r\n\t\t});\r\n\r\n\t\t\/\/ Runs when an image is selected.\r\n\t\tmeta_image_frame.on('select', function(){\r\n\r\n\t\t\t\/\/ Grabs the attachment selection and creates a JSON representation of the model.\r\n\t\t\tvar media_attachment = meta_image_frame.state().get('selection').first().toJSON();\r\n\r\n\t\t\t\/\/ Sends the attachment URL to our custom image input field.\r\n\t\t\t$('#banner-image').val(media_attachment.url);\r\n\t\t\t\r\n\t\t\t\/\/ Appends the image to our custom Div field.\r\n\t\t\t$('#image-display').html('<img src = \"' + media_attachment.url + '\" width = \"100%\" \/>');\r\n\t\t});\r\n\r\n\t\t\/\/ Opens the media library frame.\r\n\t\tmeta_image_frame.open();\r\n\t});\r\n});\r\n\r\n[\/cc]","post_title":"Post Banner [Plugin]","post_excerpt":"Add a simple banner image to your posts and pages","post_status":"publish","comment_status":"open","ping_status":"open","post_password":"","post_name":"post-banner-plugin","to_ping":"","pinged":"","post_modified":"2017-09-19 15:13:08","post_modified_gmt":"2017-09-19 07:13:08","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=1020","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":990,"post_author":"1","post_date":"2014-11-28 03:51:19","post_date_gmt":"2014-11-28 03:51:19","post_content":"Useful functions for building a resume database in WordPress\r\n\r\n[cc lang = \"php\"]\r\n<?php\r\n\/**\r\n * @ Author: Carl Victor Fontanos.\r\n * @ Class: NGP_Posts\r\n *\r\n *\/\r\n\r\n\r\nadd_action('wp_ajax_cvf_ngp_frontend_display_resumes', array('NGP_Posts', 'cvf_ngp_frontend_display_resumes') );\r\nadd_action('wp_ajax_nopriv_cvf_ngp_frontend_display_resumes', array('NGP_Posts', 'cvf_ngp_frontend_display_resumes') );\r\n\r\nadd_action('wp_ajax_cvf_ngp_create_new_resume', array('NGP_Posts', 'cvf_ngp_create_new_resume') );\r\nadd_action('wp_ajax_nopriv_cvf_ngp_create_new_resume', array('NGP_Posts', 'cvf_ngp_create_new_resume') );\r\n\r\nadd_action('wp_ajax_cvf_ngp_create_new_resume_form', array('NGP_Posts', 'cvf_ngp_create_new_resume_form') );\r\nadd_action('wp_ajax_nopriv_cvf_ngp_create_new_resume_form', array('NGP_Posts', 'cvf_ngp_create_new_resume_form') );\r\n\r\nadd_action('wp_ajax_cvf_ngp_pagination_load_resumes', array('NGP_Posts', 'cvf_ngp_pagination_load_resumes') );\r\nadd_action('wp_ajax_nopriv_cvf_ngp_pagination_load_resumes', array('NGP_Posts', 'cvf_ngp_pagination_load_resumes') );\r\n\r\nadd_action('wp_ajax_cvf_ngp_preveiw_resume', array('NGP_Posts', 'cvf_ngp_preveiw_resume') );\r\nadd_action('wp_ajax_nopriv_cvf_ngp_preveiw_resume', array('NGP_Posts', 'cvf_ngp_preveiw_resume') );\r\n\r\nadd_action('wp_ajax_cvf_ngp_edit_resume', array('NGP_Posts', 'cvf_ngp_edit_resume') );\r\nadd_action('wp_ajax_nopriv_cvf_ngp_edit_resume', array('NGP_Posts', 'cvf_ngp_edit_resume') );\r\n\r\nadd_action('wp_ajax_cvf_ngp_update_resume', array('NGP_Posts', 'cvf_ngp_update_resume') );\r\nadd_action('wp_ajax_nopriv_cvf_ngp_update_resume', array('NGP_Posts', 'cvf_ngp_update_resume') );\r\n\r\nadd_action('wp_ajax_cvf_ngp_delete_attachment', array('NGP_Posts', 'cvf_ngp_delete_attachment') );\r\nadd_action('wp_ajax_nopriv_cvf_ngp_delete_attachment', array('NGP_Posts', 'cvf_ngp_delete_attachment') );\r\n\r\nadd_action('wp_ajax_cvf_ngp_delete_resume', array('NGP_Posts', 'cvf_ngp_delete_resume') );\r\nadd_action('wp_ajax_nopriv_cvf_ngp_delete_resume', array('NGP_Posts', 'cvf_ngp_delete_resume') );\r\n\r\nadd_action('before_delete_post', array('NGP_Posts', 'cvf_ngp_delete_all_resume_attachments') );\r\n\r\nadd_action('init', array('NGP_Posts', 'cvf_ngp_register_resume_post_type') );\r\n\r\nadd_action('init', array('NGP_Posts', 'cvf_ngp_register_blog_post_type') );\r\nadd_action('init', array('NGP_Posts', 'cvf_ngp_create_blog_categories') );\r\n\r\nadd_action('generate_rewrite_rules', array('NGP_Posts', 'cvf_ngp_blog_datearchives_rewrite_rules') );\r\n\r\nadd_action( 'admin_menu', array('NGP_Posts', 'cvf_ngp_remove_menus') );\r\n\r\nadd_filter ('wp_mail_content_type', array('NGP_Posts', 'cvf_ngp_mail_content_type') );\r\n\r\n\r\n\r\nclass NGP_Posts {\r\n\r\n\tpublic function __construct() {}\r\n\r\n\tpublic static function cvf_ngp_get_category_posts($category_slug, $limit) {\r\n\r\n\t\tglobal $post;\r\n\r\n\t\t$args = array(\r\n\t\t\t'numberposts' => $limit,\r\n\t\t\t'category_name' => $category_slug,\r\n\t\t\t'order' => 'ASC',\r\n\t\t\t'post_status' => 'publish'\r\n\t\t);\r\n\r\n\t\t$posts = get_posts( $args );\r\n\r\n\t\treturn $posts;\r\n\r\n\t}\r\n\r\n\tpublic static function cvf_ngp_get_forums($limit, $type){\r\n\r\n\t\tif($type = 'category'){\r\n\t\t\t$post_parent = 'post_parent = 0';\r\n\t\t} else {\r\n\t\t\t$post_parent = 'post_parent > 0';\r\n\t\t}\r\n\t\tglobal $wpdb;\r\n\r\n\t\t$table = $wpdb->prefix . 'posts';\r\n\t\t$forums = $wpdb->get_results($wpdb->prepare(\"\r\n\t\t\tSELECT * FROM $table WHERE post_type = 'forum' AND $post_parent\r\n\t\t\tORDER BY post_title ASC LIMIT %d\r\n\t\t\t\", $limit ));\r\n\r\n\t\treturn $forums;\r\n\t}\r\n\r\n\tpublic static function cvf_ngp_register_resume_post_type() {\r\n\r\n\t\t$labels = array(\r\n\t\t\t'name' \t\t\t\t\t=> _x('NGP Resumes', 'post type general name'),\r\n\t\t\t'singular_name' \t\t=> _x('Resume', 'post type singular name'),\r\n\t\t\t'all_items'             => _x('All Resumes', 'post type name'),\r\n\t\t\t'add_new' \t\t\t\t=> _x('Create New Resume', 'new post'),\r\n\t\t\t'add_new_item' \t\t\t=> __('Create New Resume'),\r\n\t\t\t'edit_item' \t\t\t=> __('Edit Resume'),\r\n\t\t\t'new_item' \t\t\t\t=> __('New Resume'),\r\n\t\t\t'view_item' \t\t\t=> __('View Resume'),\r\n\t\t\t'search_items' \t\t\t=> __('Search Resumes'),\r\n\t\t\t'not_found' \t\t\t=> __('No resumes found'),\r\n\t\t\t'not_found_in_trash'\t=> __('No resumes found in the Trash'),\r\n\t\t\t'parent_item_colon' \t=> ''\r\n\t\t);\r\n\t\t$args = array(\r\n\t\t\t'labels' \t\t\t\t=> $labels,\r\n\t\t\t'public' \t\t\t\t=> true,\r\n\t\t\t'publicly_queryable' \t=> true,\r\n\t\t\t'show_ui' \t\t\t\t=> true,\r\n\t\t\t'query_var' \t\t\t=> true,\r\n\t\t\t'rewrite' \t\t\t\t=> true,\r\n\t\t\t'capability_type'\t\t=> 'post',\r\n\t\t\t'hierarchical' \t\t\t=> false,\r\n\t\t\t'menu_position' \t\t=> 8,\r\n\t\t\t'supports' \t\t\t\t=> array('title','editor','thumbnail')\r\n\t\t);\r\n\r\n\t\tregister_post_type( 'resume' , $args );\r\n\t}\r\n\t\r\n\tpublic static function cvf_ngp_register_blog_post_type() {\r\n\r\n\t\t$labels = array(\r\n\t\t\t'name' \t\t\t\t\t=> _x('NGP Blogs', 'post type general name'),\r\n\t\t\t'singular_name' \t\t=> _x('Blog', 'post type singular name'),\r\n\t\t\t'all_items'             => _x('All Blogs', 'post type name'),\r\n\t\t\t'add_new' \t\t\t\t=> _x('Create New Blog', 'new post'),\r\n\t\t\t'add_new_item' \t\t\t=> __('Create New Blog'),\r\n\t\t\t'edit_item' \t\t\t=> __('Edit Blog'),\r\n\t\t\t'new_item' \t\t\t\t=> __('New Blog'),\r\n\t\t\t'view_item' \t\t\t=> __('View Blog'),\r\n\t\t\t'search_items' \t\t\t=> __('Search Blogs'),\r\n\t\t\t'not_found' \t\t\t=> __('No blogs found'),\r\n\t\t\t'not_found_in_trash'\t=> __('No blogs found in the Trash'),\r\n\t\t\t'parent_item_colon' \t=> ''\r\n\t\t);\r\n\t\t$args = array(\r\n\t\t\t'labels' \t\t\t\t=> $labels,\r\n\t\t\t'public' \t\t\t\t=> true,\r\n\t\t\t'publicly_queryable' \t=> true,\r\n\t\t\t'show_ui' \t\t\t\t=> true,\r\n\t\t\t'query_var' \t\t\t=> true,\r\n\t\t\t'rewrite' \t\t\t\t=> true,\r\n\t\t\t'capability_type'\t\t=> 'post',\r\n\t\t\t'hierarchical' \t\t\t=> false,\r\n\t\t\t'menu_position' \t\t=> 8,\r\n\t\t\t'has_archive' \t\t\t=> true,\r\n\t\t\t'supports' \t\t\t\t=> array('title','editor','thumbnail')\r\n\t\t);\r\n\r\n\t\tregister_post_type( 'blog' , $args );\r\n\t}\r\n\t\r\n\tpublic static function cvf_ngp_create_blog_categories() {\r\n\t\t$labels = array(\r\n\t\t\t'name'              => _x( 'Blog Categories', 'taxonomy general name' ),\r\n\t\t\t'singular_name'     => _x( 'Blog Category', 'taxonomy singular name' ),\r\n\t\t\t'search_items'      => __( 'Search Blog Categories' ),\r\n\t\t\t'all_items'         => __( 'All Blog Categories' ),\r\n\t\t\t'parent_item'       => __( 'Parent Blog Category' ),\r\n\t\t\t'parent_item_colon' => __( 'Parent Blog Category:' ),\r\n\t\t\t'edit_item'         => __( 'Edit Blog Category' ),\r\n\t\t\t'update_item'       => __( 'Update Blog Category' ),\r\n\t\t\t'add_new_item'      => __( 'Create New Blog Category' ),\r\n\t\t\t'new_item_name'     => __( 'New Blog Category Name' ),\r\n\t\t\t'menu_name'         => __( 'Categories' ),\r\n\t\t);\r\n\r\n\t\t$args = array(\r\n\t\t\t'hierarchical'      => true,\r\n\t\t\t'labels'            => $labels,\r\n\t\t\t'show_ui'           => true,\r\n\t\t\t'show_admin_column' => true,\r\n\t\t\t'query_var'         => true,\r\n\t\t\t'rewrite'           => array( 'slug' => 'blog-category' ),\r\n\t\t);\r\n\r\n\t\tregister_taxonomy( 'blog_categories', array( 'blog' ), $args );\r\n\t}\r\n\r\n\tpublic static function cvf_ngp_frontend_display_resumes() {\r\n\r\n\t\tglobal $wpdb, $current_user;\r\n\t\t$msg = '';\r\n\r\n\t\tif(isset($_POST['page'])){\r\n\t\t\t$page = sanitize_text_field($_POST['page']);\r\n\t\t\t$cur_page = $page;\r\n\t\t\t$page -= 1;\r\n\t\t\t$per_page = 10;\r\n\t\t\t$previous_btn = true;\r\n\t\t\t$next_btn = true;\r\n\t\t\t$first_btn = true;\r\n\t\t\t$last_btn = true;\r\n\t\t\t$start = $page * $per_page;\r\n\r\n\t\t\t$posts = $wpdb->prefix . \"posts\";\r\n\t\t\t$postmeta = $wpdb->prefix . \"postmeta\";\r\n\r\n\t\t\t$where_name = ''; $where_experience = ''; $where_education = ''; $where_country = ''; $where_industry = '';\r\n\r\n\t\t\tif(!empty($_POST['ngp_name'])){\r\n\t\t\t\t$where_name = ' AND (p.post_title LIKE \"%%' . $_POST['ngp_name'] . '%%\") ';\r\n\t\t\t}\r\n\t\t\tif(!empty($_POST['ngp_industry'])){\r\n\t\t\t\t$where_industry = ' AND (m1.meta_value LIKE \"%%' . $_POST['ngp_industry'] . '%%\") ';\r\n\t\t\t}\r\n\t\t\tif(!empty($_POST['ngp_experience'])){\r\n\t\t\t\t$where_experience = ' AND (m2.meta_value LIKE \"%%' . $_POST['ngp_experience'] . '%%\") ';\r\n\t\t\t}\r\n\t\t\tif(!empty($_POST['ngp_country'])){\r\n\t\t\t\t$where_country = ' AND (m3.meta_value LIKE \"%%' . $_POST['ngp_country'] . '%%\") ';\r\n\t\t\t}\r\n\t\t\tif(!empty($_POST['ngp_education'])){\r\n\t\t\t\t$where_education = ' AND (m4.meta_value LIKE \"%%' . $_POST['ngp_education'] . '%%\") ';\r\n\t\t\t}\r\n\r\n\t\t\t$joins = '\r\n\t\t\t\tLEFT JOIN ' . $postmeta . ' m1 ON p.ID = m1.post_id AND m1.meta_key = \"ngp_industry\"\r\n\t\t\t\tLEFT JOIN ' . $postmeta . ' m2 ON p.ID = m2.post_id AND m2.meta_key = \"ngp_experience\"\r\n\t\t\t\tLEFT JOIN ' . $postmeta . ' m3 ON p.ID = m3.post_id AND m3.meta_key = \"ngp_country\"\r\n\t\t\t\tLEFT JOIN ' . $postmeta . ' m4 ON p.ID = m4.post_id AND m4.meta_key = \"ngp_education\" ';\r\n\r\n\t\t\t$all_user_resumes = $wpdb->get_results($wpdb->prepare(\"\r\n\t\t\t\tSELECT p.ID, p.post_title, m1.meta_value as 'ngp_industry', m2.meta_value as 'ngp_experience', m3.meta_value as 'ngp_country', m4.meta_value as 'ngp_education'\r\n\t\t\t\tFROM \" . $posts . ' p ' . $joins . \"\r\n\t\t\t\tWHERE p.post_type = 'resume' AND p.post_status = 'publish' \" . $where_name . $where_industry . $where_experience . $where_country . $where_education . \"\r\n\t\t\t\tORDER BY p.post_date DESC LIMIT %d, %d\", $start, $per_page ) );\r\n\r\n\r\n\t\t\t$count = $wpdb->get_var($wpdb->prepare(\"\r\n\t\t\t\tSELECT COUNT(p.ID)\r\n\t\t\t\tFROM \" . $posts . ' p ' . $joins . \"\r\n\t\t\t\tWHERE p.post_type = 'resume' AND post_status = 'publish' \" . $where_name . $where_industry . $where_experience . $where_country . $where_education, array() ) );\r\n\r\n\t\t\t$msg .= '\r\n\t\t\t<br class = \"clear\" \/>\r\n\r\n\t\t\t<table class=\"table table-striped table-hover table-responsive table-resume\">\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<th>Name<\/th>\r\n\t\t\t\t\t<th>Industry<\/th>\r\n\t\t\t\t\t<th>Experience<\/th>\r\n\t\t\t\t\t<th>Education<\/th>\t\t\t\t\r\n\t\t\t\t\t<th>Country<\/th>\r\n\t\t\t\t<\/tr>';\r\n\r\n\t\t\tif($all_user_resumes):\r\n\t\t\t\tforeach($all_user_resumes as $key => $resume):\r\n\t\t\t\t\t$msg .= '\r\n\t\t\t\t\t<tr class = \"resume_' . $resume->ID . '\">\r\n\t\t\t\t\t\t<td><a href=\"'.get_permalink($resume->ID).'\" id = \"resume-'.$resume->ID.'\" class = \"resume_title\">' . $resume->post_title . '<\/a><\/td>\r\n\t\t\t\t\t\t<td>' . $resume->ngp_industry .'<\/td>\r\n\t\t\t\t\t\t<td>' . $resume->ngp_experience .'<\/td>\r\n\t\t\t\t\t\t<td>' . $resume->ngp_education .'<\/td>\t\t\t\t\t\r\n\t\t\t\t\t\t<td>' . $resume->ngp_country .'<\/td>\r\n\t\t\t\t\t<\/tr>';\r\n\t\t\t\tendforeach;\r\n\t\t\telse:\r\n\t\t\t\t$msg .= '<tr><td colspan=\"5\">No results found.<\/td><\/tr>';\r\n\t\t\tendif;\r\n\r\n\t\t\t$msg .= '<\/table>';\r\n\r\n\t\t\t$msg = \"<div class='cvf-universal-content'>\" . $msg . \"<\/div><br class = 'clear' \/>\";\r\n\r\n\t\t\t$no_of_paginations = ceil($count \/ $per_page);\r\n\r\n\t\t\tif ($cur_page >= 7) {\r\n\t\t\t\t$start_loop = $cur_page - 3;\r\n\t\t\t\tif ($no_of_paginations > $cur_page + 3)\r\n\t\t\t\t\t$end_loop = $cur_page + 3;\r\n\t\t\t\telse if ($cur_page <= $no_of_paginations && $cur_page > $no_of_paginations - 6) {\r\n\t\t\t\t\t$start_loop = $no_of_paginations - 6;\r\n\t\t\t\t\t$end_loop = $no_of_paginations;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$end_loop = $no_of_paginations;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t$start_loop = 1;\r\n\t\t\t\tif ($no_of_paginations > 7)\r\n\t\t\t\t\t$end_loop = 7;\r\n\t\t\t\telse\r\n\t\t\t\t\t$end_loop = $no_of_paginations;\r\n\t\t\t}\r\n\r\n\t\t\t$pag_container .= \"\r\n\t\t\t<div class='cvf-universal-pagination'>\r\n\t\t\t\t<ul>\";\r\n\r\n\t\t\tif ($first_btn && $cur_page > 1) {\r\n\t\t\t\t$pag_container .= \"<li p='1' class='active'>First<\/li>\";\r\n\t\t\t} else if ($first_btn) {\r\n\t\t\t\t$pag_container .= \"<li p='1' class='inactive'>First<\/li>\";\r\n\t\t\t}\r\n\r\n\t\t\tif ($previous_btn && $cur_page > 1) {\r\n\t\t\t\t$pre = $cur_page - 1;\r\n\t\t\t\t$pag_container .= \"<li p='$pre' class='active'>Previous<\/li>\";\r\n\t\t\t} else if ($previous_btn) {\r\n\t\t\t\t$pag_container .= \"<li class='inactive'>Previous<\/li>\";\r\n\t\t\t}\r\n\t\t\tfor ($i = $start_loop; $i <= $end_loop; $i++) {\r\n\r\n\t\t\t\tif ($cur_page == $i)\r\n\t\t\t\t\t$pag_container .= \"<li p='$i' class = 'selected' >{$i}<\/li>\";\r\n\t\t\t\telse\r\n\t\t\t\t\t$pag_container .= \"<li p='$i' class='active'>{$i}<\/li>\";\r\n\t\t\t}\r\n\r\n\t\t\tif ($next_btn && $cur_page < $no_of_paginations) {\r\n\t\t\t\t$nex = $cur_page + 1;\r\n\t\t\t\t$pag_container .= \"<li p='$nex' class='active'>Next<\/li>\";\r\n\t\t\t} else if ($next_btn) {\r\n\t\t\t\t$pag_container .= \"<li class='inactive'>Next<\/li>\";\r\n\t\t\t}\r\n\r\n\t\t\tif ($last_btn && $cur_page < $no_of_paginations) {\r\n\t\t\t\t$pag_container .= \"<li p='$no_of_paginations' class='active'>Last<\/li>\";\r\n\t\t\t} else if ($last_btn) {\r\n\t\t\t\t$pag_container .= \"<li p='$no_of_paginations' class='inactive'>Last<\/li>\";\r\n\t\t\t}\r\n\r\n\t\t\t$pag_container = $pag_container . \"\r\n\t\t\t\t<\/ul>\r\n\t\t\t<\/div>\";\r\n\r\n\t\t\techo\r\n\t\t\t'<div class = \"cvf-pagination-content\">' . $msg . '<\/div>' .\r\n\t\t\t'<div class = \"cvf-pagination-nav\">' . $pag_container . '<\/div>';\r\n\r\n\t\t}\r\n\t\texit();\r\n\t}\r\n\r\n\tpublic static function cvf_ngp_create_new_resume() {\r\n\r\n\t\tglobal $current_user, $wpdb;\r\n\r\n\t\tif(isset($_POST['cvf_action']) && $_POST['cvf_action'] == 'create_new_resume') {\r\n\r\n\t\t\tforeach($_POST as $k => $value) {\r\n\t\t\t\t$_POST[$k] = sanitize_text_field($value);\r\n\t\t\t}\r\n\r\n\t\t\t$ngp_resume = array(\r\n\t\t\t\t'post_title'    => wp_strip_all_tags( $_POST['ngp_name'] ),\r\n\t\t\t\t'post_status'   => 'publish',\r\n\t\t\t\t'post_type'     => 'resume',\r\n\t\t\t\t'post_author'   => $current_user->ID,\r\n\t\t\t);\r\n\r\n\t\t\t$post_id = wp_insert_post( $ngp_resume );\r\n\r\n\t\t\tupdate_post_meta($post_id, 'ngp_phone', $_POST['ngp_phone']);\r\n\t\t\tupdate_post_meta($post_id, 'ngp_industry', $_POST['ngp_industry']);\r\n\t\t\tupdate_post_meta($post_id, 'ngp_headline', $_POST['ngp_headline']);\r\n\t\t\tupdate_post_meta($post_id, 'ngp_experience', $_POST['ngp_experience']);\r\n\t\t\tupdate_post_meta($post_id, 'ngp_education', $_POST['ngp_education']);\r\n\t\t\tupdate_post_meta($post_id, 'ngp_country', $_POST['ngp_country']);\r\n\t\t\tupdate_post_meta($post_id, 'ngp_zipcode', $_POST['ngp_zipcode']);\r\n\t\t\t\r\n\t\t\techo $post_id;\r\n\t\t\t\r\n\t\t\t$subsribed_users = $wpdb->get_results($wpdb->prepare(\"\r\n\t\t\tSELECT * FROM wp_users u\r\n\t\t\tLEFT JOIN wp_usermeta um ON u.ID = um.user_id\r\n\t\t\tWHERE um.meta_key = 'ngp_subscribe_joblistings' \r\n\t\t\tAND um.meta_value = 1\", array() )); \r\n\t\t\t\r\n\t\t\tforeach($subsribed_users as $key => $user) {\r\n\t\t\t\t\r\n\t\t\t\t$from = get_option('admin_email');\r\n\t\t\t\t$headers = 'From: NGPPortfolioCo <\"' . $from . '\">';\r\n\t\t\t\t$subject = \"New Job Application Submitted \". $_POST['ngp_headline'] . \" (\" . $_POST['ngp_industry'] .\") - \" . $_POST['ngp_name'];\r\n\t\t\t\t\r\n\t\t\t\tob_start();\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\techo '\r\n\t\t\t\t<p>Dear ' . $user->display_name . ', <br \/>\r\n\t\t\t\tA new job was posted on NGPPortfolioCo, and the details can be found bellow:\r\n\t\t\t\t<\/p><br \/>\r\n\t\t\t\t\r\n\t\t\t\t<table style=\"width:100%; color: #333; font-family: Arial, Helvetica, sans-serif;\" border = \"1\" >\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th colspan = \"2\" style = \"font-size: 30px; padding: 10px 0; background: #5C0F26; color: #fff; \">NGPPortfolioCO<\/th>\r\n\t\t\t\t\t<\/tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th style = \"padding: 10px; margin: 10px;\">Country<\/th>\r\n\t\t\t\t\t\t<td style = \"padding: 10px;\">' . get_post_meta($post_id, 'ngp_country', true) . '<\/td>\r\n\t\t\t\t\t<\/tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th style = \"padding: 10px; margin: 10px;\">Country<\/th>\r\n\t\t\t\t\t\t<td style = \"padding: 10px;\">' . get_post_meta($post_id, 'ngp_country', true) . '<\/td>\r\n\t\t\t\t\t<\/tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th style = \"padding: 10px; margin: 10px;\">Zip Code<\/th>\r\n\t\t\t\t\t\t<td style = \"padding: 10px;\">' . get_post_meta($post_id, 'ngp_zipcode', true) . '<\/td>\r\n\t\t\t\t\t<\/tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th style = \"padding: 10px; margin: 10px;\">Education<\/th>\r\n\t\t\t\t\t\t<td style = \"padding: 10px;\">' . get_post_meta($post_id, 'ngp_education', true) . '<\/td>\r\n\t\t\t\t\t<\/tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th style = \"padding: 10px; margin: 10px;\">Experience<\/th>\r\n\t\t\t\t\t\t<td style = \"padding: 10px;\">' . get_post_meta($post_id, 'ngp_experience', true) . '<\/td>\r\n\t\t\t\t\t<\/tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th style = \"padding: 10px; margin: 10px;\">Phone<\/th>\r\n\t\t\t\t\t\t<td style = \"padding: 10px;\">' . get_post_meta($post_id, 'ngp_phone', true) . '<\/td>\r\n\t\t\t\t\t<\/tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th style = \"padding: 10px; margin: 10px;\">Industry<\/th>\r\n\t\t\t\t\t\t<td style = \"padding: 10px;\">' . get_post_meta($post_id, 'ngp_industry', true) . '<\/td>\r\n\t\t\t\t\t<\/tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th style = \"padding: 10px; margin: 10px;\">Job Title \/ Headline<\/th>\r\n\t\t\t\t\t\t<td style = \"padding: 10px;\">' . get_post_meta($post_id, 'ngp_headline', true) . '<\/td>\r\n\t\t\t\t\t<\/tr>\r\n\t\t\t\t\t<\/tr>\r\n\t\t\t\t\t\t<th style = \"padding: 10px; margin: 10px;\">Resume<\/th>\r\n\t\t\t\t\t\t<td style = \"padding: 10px;\">Go to our <a href = \"' . home_url() . '\">website<\/a> to view the attached resume<\/td>\r\n\t\t\t\t\t<\/tr>\r\n\t\t\t\t<\/table>\r\n\t\t\t\t<br \/>\r\n\t\t\t\t<p>As a member of NGPPortfolioCo, we will send you new job listings. To view other joba, search our list of current openings:' . home_url('\/resume-database\/') . '<\/p>\t\t\t\r\n\t\t\t\t<br \/>\r\n\t\t\t\t<p>Thank you,<br \/>\r\n\t\t\t\tNGPPortfolioCo Team<\/p>\t\t\t\t\t\r\n\t\t\t\t';\r\n\t\t\t\t\t\r\n\t\t\t\t$message = ob_get_contents();\r\n\t\t\t\t\r\n\t\t\t\tob_end_clean();\r\n\r\n\t\t\t\twp_mail($user->user_email, $subject, $message, $headers);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\texit();\r\n\t}\r\n\t\r\n\tpublic static function cvf_ngp_mail_content_type() {\r\n\t\treturn 'text\/html';\r\n\t}\r\n\r\n\r\n\r\n\tpublic static function cvf_ngp_create_new_resume_form() {\r\n\r\n\t\tif(isset($_POST['cvf_action']) && $_POST['cvf_action'] == 'create_new_resume_form') {\r\n\r\n\t\t\t$ngp_field = self::cvf_ngp_get_all_pre_resume_fields(166);\r\n\r\n\t\t\t$new_resume_form .= '\r\n\t\t\t<h1>Step 1<\/h1>\r\n\t\t\t<hr \/><br \/>\r\n\r\n\t\t\t<div class = \"col-sm-12 pads\">\r\n\t\t\t\t<div class = \"create-new-resume-response\"><\/div>\r\n\t\t\t<\/div>\r\n\r\n\t\t\t<div class = \"ngp-create-new-resume-form\">\r\n\t\t\t\t<div class = \"col-sm-6 pads\">\r\n\t\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t\t<label for=\"ngp_name\">Full Name<\/label><br \/>\r\n\t\t\t\t\t\t<input type=\"text\" name=\"ngp_name\" class=\"form-control ngp_name\" \/>\r\n\t\t\t\t\t<\/div>';\r\n\r\n\t\t\t\t\tforeach( array_slice($ngp_field, 0, 5) as $field ):\r\n\t\t\t\t\t\t$ngp_val = get_post_meta(166, $field->meta_key, false);\r\n\r\n\t\t\t\t\t\tif ($ngp_val[0]['type'] == 'text' || $ngp_val[0]['type'] == 'number'):\r\n\t\t\t\t\t\t\t$new_resume_form .= '\r\n\t\t\t\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t\t\t\t<label for=\"' . $ngp_val[0]['name'] . '\">' . $ngp_val[0]['label'] . ':<\/label><br \/>\r\n\t\t\t\t\t\t\t\t<input type=\"text\" name=\"' . $ngp_val[0]['name'] . '\" class=\"form-control ' . $ngp_val[0]['name'] . '\" \/>\r\n\t\t\t\t\t\t\t<\/div>';\r\n\r\n\t\t\t\t\t\telseif ($ngp_val[0]['type'] == 'select'):\r\n\t\t\t\t\t\t\t$new_resume_form .= '\r\n\t\t\t\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t\t\t\t<label for=\"' . $ngp_val[0]['name'] . '\">' . $ngp_val[0]['label'] . ':<\/label><br \/>\r\n\r\n\t\t\t\t\t\t\t\t<select id = \"' . $ngp_val[0]['name'] . '\" name=\"' . $ngp_val[0]['name'] . '\" class=\"ngp-select form-control ' . $ngp_val[0]['name'] . '\">\r\n\t\t\t\t\t\t\t\t\t<option value=\"\">- Select ' . $ngp_val[0]['label'] . ' -<\/option>';\r\n\t\t\t\t\t\t\t\t\tforeach ($ngp_val[0]['choices'] as $val):\r\n\t\t\t\t\t\t\t\t\t\t$new_resume_form .= '<option value=\"' . $val . '\">' . $val . '<\/option>';\r\n\t\t\t\t\t\t\t\t\tendforeach;\r\n\t\t\t\t\t\t\t\t$new_resume_form .= '\r\n\t\t\t\t\t\t\t\t<\/select>\r\n\t\t\t\t\t\t\t<\/div>';\r\n\r\n\t\t\t\t\t\tendif;\r\n\r\n\t\t\t\t\tendforeach;\r\n\r\n\t\t\t\t$new_resume_form .= '\r\n\t\t\t\t<\/div>\r\n\r\n\t\t\t\t<div class = \"col-sm-6 pads\">';\r\n\t\t\t\t\tforeach( array_slice($ngp_field, 5, 12) as $field ):\r\n\t\t\t\t\t\t$ngp_val = get_post_meta(166, $field->meta_key, false);\r\n\r\n\t\t\t\t\t\tif ($ngp_val[0]['type'] == 'text' || $ngp_val[0]['type'] == 'number'):\r\n\t\t\t\t\t\t\t$new_resume_form .= '\r\n\t\t\t\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t\t\t\t<label for=\"' . $ngp_val[0]['name'] . '\">' . $ngp_val[0]['label'] . ':<\/label><br \/>\r\n\t\t\t\t\t\t\t\t<input type=\"text\" name=\"' . $ngp_val[0]['name'] . '\" class=\"form-control ' . $ngp_val[0]['name'] . '\" \/>\r\n\t\t\t\t\t\t\t<\/div>';\r\n\r\n\t\t\t\t\t\telseif ($ngp_val[0]['type'] == 'select'):\r\n\t\t\t\t\t\t\t$new_resume_form .= '\r\n\t\t\t\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t\t\t\t<label for=\"' . $ngp_val[0]['name'] . '\">' . $ngp_val[0]['label'] . ':<\/label><br \/>\r\n\r\n\t\t\t\t\t\t\t\t<select id = \"' . $ngp_val[0]['name'] . '\" name=\"' . $ngp_val[0]['name'] . '\" class=\"ngp-select form-control ' . $ngp_val[0]['name'] . '\">\r\n\t\t\t\t\t\t\t\t\t<option value=\"\">- Select ' . $ngp_val[0]['label'] . ' -<\/option>';\r\n\t\t\t\t\t\t\t\t\tforeach ($ngp_val[0]['choices'] as $val):\r\n\t\t\t\t\t\t\t\t\t\t$new_resume_form .= '<option value=\"' . $val . '\">' . $val . '<\/option>';\r\n\t\t\t\t\t\t\t\t\tendforeach;\r\n\t\t\t\t\t\t\t\t$new_resume_form .= '\r\n\t\t\t\t\t\t\t\t<\/select>\r\n\t\t\t\t\t\t\t<\/div>';\r\n\t\t\t\t\t\tendif;\r\n\t\t\t\t\tendforeach;\r\n\r\n\t\t\t\t\t$new_resume_form .= '\r\n\t\t\t\t\t<input type = \"submit\" value = \"Submit Resume\" class = \"btn btn-primary create-new-resume\" \/>\r\n\t\t\t\t<\/div>\r\n\t\t\t<\/div>\r\n\r\n\t\t\t<br class = \"clear\" \/><br \/>\r\n\t\t\t';\r\n\r\n\t\t\techo $new_resume_form;\r\n\r\n\t\t}\r\n\r\n\t\texit();\r\n\t}\r\n\r\n\tpublic static function cvf_ngp_get_all_pre_resume_fields($post_id) {\r\n\r\n\t\tglobal $wpdb;\r\n\r\n\t\t$table = $wpdb->prefix . 'postmeta';\r\n\t\t$pre_resume_fields = $wpdb->get_results($wpdb->prepare(\"\r\n\t\t\tSELECT * FROM $table WHERE post_id = %d AND meta_key LIKE '%%field_%%'\", $post_id ));\r\n\r\n\t\treturn $pre_resume_fields;\r\n\r\n\t}\r\n\r\n\tpublic static function cvf_ngp_get_all_user_resumes() {\r\n\r\n\t\tglobal $wpdb, $current_user;\r\n\r\n\t\t$table = $wpdb->prefix . 'posts';\r\n\t\t$user_resumes = $wpdb->get_results($wpdb->prepare(\"\r\n\t\t\tSELECT * FROM $table WHERE post_author = %d\r\n\t\t\tAND post_type = 'resume' AND post_status = 'publish'\", $current_user->ID ));\r\n\r\n\t\treturn $user_resumes;\r\n\r\n\t}\r\n\r\n\tpublic static function cvf_ngp_pagination_load_resumes() {\r\n\r\n\t\tglobal $wpdb, $current_user;\r\n\t\t$msg = '';\r\n\r\n\t\tif(isset($_POST['page'])){\r\n\t\t\t$page = sanitize_text_field($_POST['page']);\r\n\t\t\t$cur_page = $page;\r\n\t\t\t$page -= 1;\r\n\t\t\t$per_page = 5;\r\n\t\t\t$previous_btn = true;\r\n\t\t\t$next_btn = true;\r\n\t\t\t$first_btn = true;\r\n\t\t\t$last_btn = true;\r\n\t\t\t$start = $page * $per_page;\r\n\r\n\t\t\t$posts = $wpdb->prefix . \"posts\";\r\n\t\t\t$postmeta = $wpdb->prefix . \"postmeta\";\r\n\r\n\t\t\t$where_name = ''; $where_experience = ''; $where_education = ''; $where_country = ''; $where_industry = '';\r\n\r\n\t\t\tif(!empty($_POST['ngp_name'])){\r\n\t\t\t\t$where_name = ' AND (p.post_title LIKE \"%%' . $_POST['ngp_name'] . '%%\") ';\r\n\t\t\t}\r\n\t\t\tif(!empty($_POST['ngp_industry'])){\r\n\t\t\t\t$where_industry = ' AND (m1.meta_value LIKE \"%%' . $_POST['ngp_industry'] . '%%\") ';\r\n\t\t\t}\r\n\t\t\tif(!empty($_POST['ngp_experience'])){\r\n\t\t\t\t$where_experience = ' AND (m2.meta_value LIKE \"%%' . $_POST['ngp_experience'] . '%%\") ';\r\n\t\t\t}\r\n\t\t\tif(!empty($_POST['ngp_country'])){\r\n\t\t\t\t$where_country = ' AND (m3.meta_value LIKE \"%%' . $_POST['ngp_country'] . '%%\") ';\r\n\t\t\t}\r\n\t\t\tif(!empty($_POST['ngp_education'])){\r\n\t\t\t\t$where_education = ' AND (m4.meta_value LIKE \"%%' . $_POST['ngp_education'] . '%%\") ';\r\n\t\t\t}\r\n\r\n\t\t\t$joins = '\r\n\t\t\t\tLEFT JOIN ' . $postmeta . ' m1 ON p.ID = m1.post_id AND m1.meta_key = \"ngp_industry\"\r\n\t\t\t\tLEFT JOIN ' . $postmeta . ' m2 ON p.ID = m2.post_id AND m2.meta_key = \"ngp_experience\"\r\n\t\t\t\tLEFT JOIN ' . $postmeta . ' m3 ON p.ID = m3.post_id AND m3.meta_key = \"ngp_country\"\r\n\t\t\t\tLEFT JOIN ' . $postmeta . ' m4 ON p.ID = m4.post_id AND m4.meta_key = \"ngp_education\" ';\r\n\r\n\t\t\t$all_user_resumes = $wpdb->get_results($wpdb->prepare(\"\r\n\t\t\t\tSELECT p.ID, p.post_title, m1.meta_value as 'ngp_industry', m2.meta_value as 'ngp_experience', m3.meta_value as 'ngp_country', m4.meta_value as 'ngp_education'\r\n\t\t\t\tFROM \" . $posts . ' p ' . $joins . \"\r\n\t\t\t\tWHERE p.post_type = 'resume' AND p.post_status = 'publish' AND p.post_author = %d \" . $where_name . $where_industry . $where_experience . $where_country . $where_education . \"\r\n\t\t\t\tORDER BY p.post_date DESC LIMIT %d, %d\", $current_user->ID, $start, $per_page ) );\r\n\r\n\r\n\t\t\t$count = $wpdb->get_var($wpdb->prepare(\"\r\n\t\t\t\tSELECT COUNT(p.ID)\r\n\t\t\t\tFROM \" . $posts . ' p ' . $joins . \"\r\n\t\t\t\tWHERE p.post_type = 'resume' AND post_status = 'publish' AND post_author = %d \" . $where_name . $where_industry . $where_experience . $where_country . $where_education, $current_user->ID ) );\r\n\r\n\t\t\t$msg .= '\r\n\t\t\t<br class = \"clear\" \/>\r\n\r\n\t\t\t<table class=\"table table-striped table-hover table-responsive table-resume\">\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<th>Name<\/th>\r\n\t\t\t\t\t<th>Experience<\/th>\r\n\t\t\t\t\t<th>Education<\/th>\r\n\t\t\t\t\t<th>Country<\/th>\r\n\t\t\t\t\t<th>Action<\/th>\r\n\t\t\t\t<\/tr>';\r\n\r\n\t\t\tif($all_user_resumes):\r\n\t\t\t\tforeach($all_user_resumes as $key => $resume):\r\n\t\t\t\t\t$msg .= '\r\n\t\t\t\t\t<tr class = \"resume_' . $resume->ID . '\">\r\n\t\t\t\t\t\t<td><a href=\"#\" id = \"resume-'.$resume->ID.'\" class = \"resume_title\">' . $resume->post_title . '<\/a><\/td>\r\n\t\t\t\t\t\t<td>' . $resume->ngp_experience .'<\/td>\r\n\t\t\t\t\t\t<td>' . $resume->ngp_education .'<\/td>\r\n\t\t\t\t\t\t<td>' . $resume->ngp_country .'<\/td>\r\n\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t<a href = \"#\" title = \"Edit\" class = \"edit_resume\" id = \"edit-' . $resume->ID . '\"><span class = \"glyphicon glyphicon-pencil\"><\/span><\/a>&nbsp;\r\n\t\t\t\t\t\t\t<a href = \"#\" title = \"Delete\" class = \"delete_resume\" id = \"del-' . $resume->ID . '\"><span class = \"glyphicon glyphicon-trash\"><\/span><\/a>\r\n\t\t\t\t\t\t<\/td>\r\n\t\t\t\t\t<\/tr>';\r\n\t\t\t\tendforeach;\r\n\t\t\telse:\r\n\t\t\t\t$msg .= '<tr><td colspan=\"5\">No results found.<\/td><\/tr>';\r\n\t\t\tendif;\r\n\r\n\t\t\t$msg .= '<\/table>';\r\n\r\n\t\t\t$msg = \"<div class='cvf-universal-content'>\" . $msg . \"<\/div><br class = 'clear' \/>\";\r\n\r\n\t\t\t$no_of_paginations = ceil($count \/ $per_page);\r\n\r\n\t\t\tif ($cur_page >= 7) {\r\n\t\t\t\t$start_loop = $cur_page - 3;\r\n\t\t\t\tif ($no_of_paginations > $cur_page + 3)\r\n\t\t\t\t\t$end_loop = $cur_page + 3;\r\n\t\t\t\telse if ($cur_page <= $no_of_paginations && $cur_page > $no_of_paginations - 6) {\r\n\t\t\t\t\t$start_loop = $no_of_paginations - 6;\r\n\t\t\t\t\t$end_loop = $no_of_paginations;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$end_loop = $no_of_paginations;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t$start_loop = 1;\r\n\t\t\t\tif ($no_of_paginations > 7)\r\n\t\t\t\t\t$end_loop = 7;\r\n\t\t\t\telse\r\n\t\t\t\t\t$end_loop = $no_of_paginations;\r\n\t\t\t}\r\n\r\n\t\t\t$pag_container .= \"\r\n\t\t\t<div class='cvf-universal-pagination'>\r\n\t\t\t\t<ul>\";\r\n\r\n\t\t\tif ($first_btn && $cur_page > 1) {\r\n\t\t\t\t$pag_container .= \"<li p='1' class='active'>First<\/li>\";\r\n\t\t\t} else if ($first_btn) {\r\n\t\t\t\t$pag_container .= \"<li p='1' class='inactive'>First<\/li>\";\r\n\t\t\t}\r\n\r\n\t\t\tif ($previous_btn && $cur_page > 1) {\r\n\t\t\t\t$pre = $cur_page - 1;\r\n\t\t\t\t$pag_container .= \"<li p='$pre' class='active'>Previous<\/li>\";\r\n\t\t\t} else if ($previous_btn) {\r\n\t\t\t\t$pag_container .= \"<li class='inactive'>Previous<\/li>\";\r\n\t\t\t}\r\n\t\t\tfor ($i = $start_loop; $i <= $end_loop; $i++) {\r\n\r\n\t\t\t\tif ($cur_page == $i)\r\n\t\t\t\t\t$pag_container .= \"<li p='$i' class = 'selected' >{$i}<\/li>\";\r\n\t\t\t\telse\r\n\t\t\t\t\t$pag_container .= \"<li p='$i' class='active'>{$i}<\/li>\";\r\n\t\t\t}\r\n\r\n\t\t\tif ($next_btn && $cur_page < $no_of_paginations) {\r\n\t\t\t\t$nex = $cur_page + 1;\r\n\t\t\t\t$pag_container .= \"<li p='$nex' class='active'>Next<\/li>\";\r\n\t\t\t} else if ($next_btn) {\r\n\t\t\t\t$pag_container .= \"<li class='inactive'>Next<\/li>\";\r\n\t\t\t}\r\n\r\n\t\t\tif ($last_btn && $cur_page < $no_of_paginations) {\r\n\t\t\t\t$pag_container .= \"<li p='$no_of_paginations' class='active'>Last<\/li>\";\r\n\t\t\t} else if ($last_btn) {\r\n\t\t\t\t$pag_container .= \"<li p='$no_of_paginations' class='inactive'>Last<\/li>\";\r\n\t\t\t}\r\n\r\n\t\t\t$pag_container = $pag_container . \"\r\n\t\t\t\t<\/ul>\r\n\t\t\t<\/div>\";\r\n\r\n\t\t\techo\r\n\t\t\t'<div class = \"cvf-pagination-content\">' . $msg . '<\/div>' .\r\n\t\t\t'<div class = \"cvf-pagination-nav\">' . $pag_container . '<\/div>';\r\n\r\n\t\t}\r\n\t\texit();\r\n\t}\r\n\r\n\tpublic static function cvf_ngp_preveiw_resume() {\r\n\r\n\t\tif(isset($_POST['cvf_action']) && $_POST['cvf_action'] == 'preveiw_resume') {\r\n\r\n\t\t\t$resume_id = $_POST['resume_id'];\r\n\t\t\t$resume = get_post($resume_id);\r\n\t\t\t\r\n\t\t\t$avatar_id = get_post_meta($resume_id, 'ngp_avatar', true);\r\n\t\t\t$avatar_url = wp_get_attachment_image_src($avatar_id);\r\n\t\t\t\r\n\t\t\tif($avatar_url[0]) {\r\n\t\t\t\t$avatar = '<img src = \"' . $avatar_url[0] . '\" class = \"img-thumbnail\" width = \"135\" \/>';\r\n\t\t\t} else {\r\n\t\t\t\t$avatar = '<img src = \"' . get_template_directory_uri() . '\/images\/default_avatar.jpg\" class = \"img-thumbnail\">';\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t$preview_resume .= '\r\n\t\t\t\t<div class = \"preview_resume_display\">\r\n\t\t\t\t\t<a href = \"#\" class = \"cvf_goback\">Go Back<\/a>\r\n\r\n\t\t\t\t\t<div class = \"col-md-12\">\r\n\t\t\t\t\t\t<div class = \"preview_resume_messages\"><\/div>\r\n\t\t\t\t\t\t<br \/>\r\n\t\t\t\t\t\t<div class = \"col-sm-2 pads\">' . $avatar . '<\/div>\t\t\t\r\n\t\t\t\t\t\t<div class = \"col-sm-10 pads\">\r\n\t\t\t\t\t\t\t<h1>' . $resume->post_title .'<\/h1>\r\n\t\t\t\t\t\t\t<hr \/>\r\n\t\t\t\t\t\t<\/div>\t\t\t\t\r\n\t\t\t\t\t<\/div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<br class = \"clear\" \/><br \/>\r\n\r\n\t\t\t\t\t<div class = \"col-md-12\">\r\n\t\t\t\t\t\t<table class = \"table table-striped\">\r\n\t\t\t\t\t\t\t<tr class=\"success\">\r\n\t\t\t\t\t\t\t\t<th >Country<\/th>\r\n\t\t\t\t\t\t\t\t<td>' . get_post_meta($resume_id, 'ngp_country', true) . '<\/td>\r\n\t\t\t\t\t\t\t<\/tr>\r\n\t\t\t\t\t\t\t<tr class=\"success\">\r\n\t\t\t\t\t\t\t\t<th>Zip Code<\/th>\r\n\t\t\t\t\t\t\t\t<td>' . get_post_meta($resume_id, 'ngp_zipcode', true) . '<\/td>\r\n\t\t\t\t\t\t\t<\/tr>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<th>Education<\/th>\r\n\t\t\t\t\t\t\t\t<td>' . get_post_meta($resume_id, 'ngp_education', true) . '<\/td>\r\n\t\t\t\t\t\t\t<\/tr>\r\n\t\t\t\t\t\t\t<tr class=\"info\">\r\n\t\t\t\t\t\t\t\t<th>Experience<\/th>\r\n\t\t\t\t\t\t\t\t<td>' . get_post_meta($resume_id, 'ngp_experience', true) . '<\/td>\r\n\t\t\t\t\t\t\t<\/tr>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<th>Phone<\/th>\r\n\t\t\t\t\t\t\t\t<td>' . get_post_meta($resume_id, 'ngp_phone', true) . '<\/td>\r\n\t\t\t\t\t\t\t<\/tr>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<th>Industry<\/th>\r\n\t\t\t\t\t\t\t\t<td>' . get_post_meta($resume_id, 'ngp_industry', true) . '<\/td>\r\n\t\t\t\t\t\t\t<\/tr>\r\n\t\t\t\t\t\t\t<tr class=\"warning\">\r\n\t\t\t\t\t\t\t\t<th>Job Title \/ Headline<\/th>\r\n\t\t\t\t\t\t\t\t<td>' . get_post_meta($resume_id, 'ngp_headline', true) . '<\/td>\r\n\t\t\t\t\t\t\t<\/tr>\r\n\t\t\t\t\t\t\t<\/tr>\r\n\t\t\t\t\t\t\t\t<th>Resume<\/th>';\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t$attahcment_id = get_post_meta($resume_id, 'ngp_resume', true);\r\n\t\t\t\t\t\t\t\t$attachment = wp_get_attachment_url($attahcment_id);\r\n\t\t\t\r\n\t\t\t\t\t\t\t\tif ( $attachment != false ) {\r\n\t\t\t\t\t\t\t\t\t$preview_resume .= '<td><a href = \"' . $attachment . '\" class = \"btn btn-primary\">Download Resume<\/td>';\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t$preview_resume .= '<td>N\/A<\/td>';\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t$preview_resume .= '\r\n\t\t\t\t\t\t\t<\/tr>\r\n\t\t\t\t\t\t<\/table>\r\n\t\t\t\t\t<\/div>\r\n\t\t\t\t<\/div>';\r\n\r\n\t\t\techo $preview_resume;\r\n\r\n\t\t}\r\n\t\texit();\r\n\r\n\t}\r\n\r\n\r\n\tpublic static function cvf_ngp_edit_resume() {\r\n\r\n\t\tif(isset($_POST['cvf_action']) && $_POST['cvf_action'] == 'edit_resume') {\r\n\r\n\t\t\t$resume_id = $_POST['resume_id'];\r\n\t\t\t$resume = get_post($resume_id);\r\n\r\n\t\t\t$ngp_education = get_post_meta(166, 'field_54602724d1943', false);\r\n\t\t\t$ngp_experience = get_post_meta(166, 'field_546026eb1d61f', false);\r\n\t\t\t$ngp_industry = get_post_meta(166, 'field_5460268eaf31f', false);\r\n\t\t\t$ngp_country = get_post_meta(166, 'field_546027490c53b', false);\r\n\t\t\t$ngp_phone = get_post_meta($resume_id, 'ngp_phone', false);\r\n\t\t\t$ngp_headline = get_post_meta($resume_id, 'ngp_headline', false);\r\n\t\t\t$ngp_zipcode = get_post_meta($resume_id, 'ngp_zipcode', false);\r\n\t\t\t$ngp_resume = get_post_meta($resume_id, 'ngp_resume', false);\r\n\t\t\t$ngp_avatar = get_post_meta($resume_id, 'ngp_avatar', false);\r\n\r\n\t\t\t$edit_resume .= '\r\n\r\n\t\t\t\t<a href = \"#\" class = \"cvf_goback\">Go Back<\/a>\r\n\r\n\t\t\t\t<div class = \"ngp_edit_resume_response\"><\/div>\r\n\r\n\t\t\t\t<br clsss = \"clear\" \/>\r\n\r\n\t\t\t\t<div class = \"ngp_edit_resume\">\r\n\t\t\t\t\t<div class = \"col-md-6 pads\">\r\n\t\t\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t\t\t<label>Full Name:<\/label><br \/>\r\n\t\t\t\t\t\t\t<input type = \"text\" value = \"'. $resume->post_title .'\" class = \"form-control ngp_name\" \/>\r\n\t\t\t\t\t\t<\/div>\r\n\r\n\t\t\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t\t\t<label>Phone:<\/label><br \/>\r\n\t\t\t\t\t\t\t<input type = \"text\" value = \"'. $ngp_phone[0] .'\" class = \"form-control ngp_phone\" \/>\r\n\t\t\t\t\t\t<\/div>\r\n\r\n\t\t\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t\t\t<label>Industry:<\/label><br \/>\r\n\t\t\t\t\t\t\t<select class = \"ngp-select form-control ngp_industry\">';\r\n\t\t\t\t\t\t\t\tforeach ($ngp_industry[0]['choices'] as $val):\r\n\t\t\t\t\t\t\t\t\tif($val == get_post_meta($resume->ID, 'ngp_industry', true)):\r\n\t\t\t\t\t\t\t\t\t\t$edit_resume .= '<option value=\"' . $val . '\" selected = \"selected\">' . $val . '<\/option>';\r\n\t\t\t\t\t\t\t\t\telse:\r\n\t\t\t\t\t\t\t\t\t\t$edit_resume .= '<option value=\"' . $val . '\">' . $val . '<\/option>';\r\n\t\t\t\t\t\t\t\t\tendif;\r\n\t\t\t\t\t\t\t\tendforeach;\r\n\t\t\t\t\t\t\t$edit_resume .= '\r\n\t\t\t\t\t\t\t<\/select>\r\n\t\t\t\t\t\t<\/div>\r\n\r\n\t\t\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t\t\t<label>Headline or Job Title:<\/label><br \/>\r\n\t\t\t\t\t\t\t<input type = \"text\" value = \"'. $ngp_headline[0] .'\" class = \"form-control ngp_headline\" \/>\r\n\t\t\t\t\t\t<\/div>\r\n\r\n\t\t\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t\t\t<label>Experience:<\/label><br \/>\r\n\t\t\t\t\t\t\t<select class = \"ngp-select form-control ngp_experience\">';\r\n\t\t\t\t\t\t\t\tforeach ($ngp_experience[0]['choices'] as $val):\r\n\t\t\t\t\t\t\t\t\tif($val == get_post_meta($resume->ID, 'ngp_experience', true)):\r\n\t\t\t\t\t\t\t\t\t\t$edit_resume .= '<option value=\"' . $val . '\" selected = \"selected\">' . $val . '<\/option>';\r\n\t\t\t\t\t\t\t\t\telse:\r\n\t\t\t\t\t\t\t\t\t\t$edit_resume .= '<option value=\"' . $val . '\">' . $val . '<\/option>';\r\n\t\t\t\t\t\t\t\t\tendif;\r\n\t\t\t\t\t\t\t\tendforeach;\r\n\t\t\t\t\t\t\t$edit_resume .= '\r\n\t\t\t\t\t\t\t<\/select>\r\n\t\t\t\t\t\t<\/div>\r\n\r\n\t\t\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t\t\t<label>Education:<\/label><br \/>\r\n\t\t\t\t\t\t\t<select class = \"ngp-select form-control ngp_education\">';\r\n\t\t\t\t\t\t\t\tforeach ($ngp_education[0]['choices'] as $val):\r\n\t\t\t\t\t\t\t\t\tif($val == get_post_meta($resume->ID, 'ngp_education', true)):\r\n\t\t\t\t\t\t\t\t\t\t$edit_resume .= '<option value=\"' . $val . '\" selected = \"selected\">' . $val . '<\/option>';\r\n\t\t\t\t\t\t\t\t\telse:\r\n\t\t\t\t\t\t\t\t\t\t$edit_resume .= '<option value=\"' . $val . '\">' . $val . '<\/option>';\r\n\t\t\t\t\t\t\t\t\tendif;\r\n\t\t\t\t\t\t\t\tendforeach;\r\n\t\t\t\t\t\t\t$edit_resume .= '\r\n\t\t\t\t\t\t\t<\/select>\r\n\t\t\t\t\t\t<\/div>\r\n\t\t\t\t\t<\/div>\r\n\r\n\t\t\t\t\t<div class = \"col-md-6 pads\">\r\n\t\t\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t\t\t<label>Country:<\/label><br \/>\r\n\t\t\t\t\t\t\t<select class = \"ngp-select form-control ngp_country\">';\r\n\t\t\t\t\t\t\t\tforeach ($ngp_country[0]['choices'] as $val):\r\n\t\t\t\t\t\t\t\t\tif($val == get_post_meta($resume->ID, 'ngp_country', true)):\r\n\t\t\t\t\t\t\t\t\t\t$edit_resume .= '<option value=\"' . $val . '\" selected = \"selected\">' . $val . '<\/option>';\r\n\t\t\t\t\t\t\t\t\telse:\r\n\t\t\t\t\t\t\t\t\t\t$edit_resume .= '<option value=\"' . $val . '\">' . $val . '<\/option>';\r\n\t\t\t\t\t\t\t\t\tendif;\r\n\t\t\t\t\t\t\t\tendforeach;\r\n\t\t\t\t\t\t\t$edit_resume .= '\r\n\t\t\t\t\t\t\t<\/select>\r\n\t\t\t\t\t\t<\/div>\r\n\r\n\t\t\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t\t\t<label>Zip Code:<\/label><br \/>\r\n\t\t\t\t\t\t\t<input type = \"text\" value = \"'. $ngp_zipcode[0] .'\" class = \"form-control ngp_zipcode\" \/>\r\n\t\t\t\t\t\t<\/div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div class = \"attachment_resume_holder form-group col-md-6\">';\r\n\r\n\t\t\t\t\t\t\t$attachment = get_post($ngp_resume[0]);\r\n\r\n\t\t\t\t\t\t\tif ( $attachment->ID ) {\r\n\t\t\t\t\t\t\t\t$edit_resume .= '\r\n\t\t\t\t\t\t\t\t<ul class = \"resume-attachment no-margin\">\r\n\t\t\t\t\t\t\t\t\t<li><img src = \"'.get_template_directory_uri().'\/images\/document.png\" \/><\/li>\r\n\t\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t\t<p><a href = \"'.$attachment->guid.'\" target = \"_blank\">'.substr($attachment->post_title, 0, 20).'<\/a><\/p>\r\n\t\t\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t\t\t<a href = \"#\" class = \"delete_attachment\" id = \"del-'.$attachment->ID.'\">Delete<\/a> |\r\n\t\t\t\t\t\t\t\t\t\t\t<a href = \"#\" class = \"change_attachment\" id = \"change-'.$attachment->ID.'\" data-toggle=\"modal\" data-target=\"#upload_file\">Change<\/a>\r\n\t\t\t\t\t\t\t\t\t\t<\/p>\r\n\t\t\t\t\t\t\t\t\t<\/li>\r\n\t\t\t\t\t\t\t\t<\/ul>\r\n\t\t\t\t\t\t\t\t<br class = \"clear\" \/>\r\n\t\t\t\t\t\t\t\t';\r\n\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t$edit_resume .= '\r\n\t\t\t\t\t\t\t\t<a href = \"#\" data-toggle=\"modal\" data-target=\"#upload_file\" class = \"btn btn-success\"><span class = \"glyphicon glyphicon-plus\"><\/span> Add Resume<\/a><br class = \"clear\" \/><br \/>';\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t$edit_resume .= '\r\n\t\t\t\t\t\t<\/div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div class = \"avatar_resume_holder form-group col-md-6\">';\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t$avatar = get_post($ngp_avatar[0]);\r\n\r\n\t\t\t\t\t\t\tif ( $avatar->ID ) {\r\n\t\t\t\t\t\t\t\t$edit_resume .= '\r\n\t\t\t\t\t\t\t\t<ul class = \"resume-attachment no-margin\">\r\n\t\t\t\t\t\t\t\t\t<li>'.wp_get_attachment_image($avatar->ID, array(60,60), 0, array('class' => \"img-thumbnail\")) .'<\/li>\r\n\t\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t\t<p><a href = \"'.$avatar->guid.'\" target = \"_blank\">'.$avatar->post_title.'<\/a><\/p>\r\n\t\t\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t\t\t<a href = \"#\" class = \"delete_avatar\" id = \"del-'.$avatar->ID.'\">Delete<\/a> |\r\n\t\t\t\t\t\t\t\t\t\t\t<a href = \"#\" class = \"change_attachment\" id = \"change-'.$avatar->ID.'\" data-toggle=\"modal\" data-target=\"#upload_avatar\">Change<\/a>\r\n\t\t\t\t\t\t\t\t\t\t<\/p>\r\n\t\t\t\t\t\t\t\t\t<\/li>\r\n\t\t\t\t\t\t\t\t<\/ul>\r\n\t\t\t\t\t\t\t\t<br class = \"clear\" \/>\r\n\t\t\t\t\t\t\t\t';\r\n\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t$edit_resume .= '\r\n\t\t\t\t\t\t\t\t<a href = \"#\" data-toggle=\"modal\" data-target=\"#upload_avatar\" class = \"btn btn-success\"><span class = \"glyphicon glyphicon-upload\"><\/span> Upload Avatar<\/a><br class = \"clear\" \/><br \/>';\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t$edit_resume .= '\r\n\t\t\t\t\t\t<\/div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<br class = \"clear\" \/>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<input type = \"hidden\" value = \"' . $resume->ID . '\" class = \"resume_id\" >\r\n\t\t\t\t\t\t<input type = \"submit\" value = \"Save Resume\" class = \"btn btn-primary save_edited_resume\" >\r\n\r\n\t\t\t\t\t<\/div>\r\n\t\t\t\t<\/div>\r\n\r\n\t\t\t';\r\n\r\n\t\t\techo $edit_resume;\r\n\r\n\t\t}\r\n\r\n\t\texit();\r\n\t}\r\n\r\n\tpublic static function cvf_ngp_update_resume() {\r\n\r\n\t\tif(isset($_POST['cvf_action']) && $_POST['cvf_action'] == 'update_resume') {\r\n\r\n\t\t\tforeach($_POST as $k => $value) {\r\n\t\t\t\t$_POST[$k] = sanitize_text_field($value);\r\n\t\t\t}\r\n\r\n\t\t\t$resume_data = array(\r\n\t\t\t  'ID'           => $_POST['resume_id'],\r\n\t\t\t  'post_title'\t => $_POST['ngp_name'],\r\n\t\t\t  'post_name'\t => $_POST['ngp_name']\r\n\t\t\t);\r\n\r\n\t\t\t$update_status = wp_update_post( $resume_data );\r\n\r\n\t\t\tupdate_post_meta($_POST['resume_id'], 'ngp_phone', $_POST['ngp_phone']);\r\n\t\t\tupdate_post_meta($_POST['resume_id'], 'ngp_industry', $_POST['ngp_industry']);\r\n\t\t\tupdate_post_meta($_POST['resume_id'], 'ngp_headline', $_POST['ngp_headline']);\r\n\t\t\tupdate_post_meta($_POST['resume_id'], 'ngp_experience', $_POST['ngp_experience']);\r\n\t\t\tupdate_post_meta($_POST['resume_id'], 'ngp_education', $_POST['ngp_education']);\r\n\t\t\tupdate_post_meta($_POST['resume_id'], 'ngp_country', $_POST['ngp_country']);\r\n\t\t\tupdate_post_meta($_POST['resume_id'], 'ngp_zipcode', $_POST['ngp_zipcode']);\r\n\r\n\t\t\tif($update_status > 0) {\r\n\t\t\t\techo '<br \/><p class = \"bg-success no-margin\"><span class = \"glyphicon glyphicon-ok\"><\/span>&nbsp; Resume updated successfully.<\/p>';\r\n\t\t\t} else {\r\n\t\t\t\techo '<br \/><p class = \"bg-danger no-margin\">An internal error occured<\/p>';\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\texit();\r\n\t}\r\n\r\n\tpublic static function cvf_ngp_delete_attachment(){\r\n\r\n\t\tif(isset($_POST['cvf_action']) && $_POST['cvf_action'] == 'delete_attachment'){\r\n\r\n\t\t\t$attachemnt_id = sanitize_text_field($_POST['attachment_id']);\r\n\t\t\t$type = sanitize_text_field($_POST['type']);\r\n\t\t\t$post_id = sanitize_text_field($_COOKIE['ngp_edit_resume']);\r\n\t\r\n\t\t\tif(false === wp_delete_attachment($attachemnt_id, true)) {}\r\n\r\n\t\t\techo 'success';\r\n\r\n\t\t}\r\n\r\n\t\texit();\r\n\t}\r\n\r\n\tpublic static function cvf_ngp_delete_resume() {\r\n\r\n\t\tif(isset($_POST['cvf_action']) && $_POST['cvf_action'] == 'delete_resume'){\r\n\r\n\t\t\t$resume_id = sanitize_text_field($_POST['resume_id']);\r\n\t\t\twp_delete_post($resume_id, 1);\r\n\r\n\t\t\techo 'success';\r\n\r\n\t\t}\r\n\r\n\t\texit();\r\n\t}\r\n\r\n\tpublic static function cvf_ngp_delete_all_resume_attachments($post_id) {\r\n\r\n\t\t$attachments = get_posts( array(\r\n\t\t\t'post_type'      => 'attachment',\r\n\t\t\t'posts_per_page' => -1,\r\n\t\t\t'post_status'    => 'any',\r\n\t\t\t'post_parent'    => $post_id\r\n\t\t) );\r\n\r\n\t\tforeach ( $attachments as $attachment ) {\r\n\t\t\tif ( false === wp_delete_attachment( $attachment->ID, 1 ) ) { \/* Log failure to delete attachements *\/ }\r\n\t\t}\r\n\r\n\t}\r\n\t\r\n\tpublic static function cvf_ngp_upload_resume_data() {\r\n\t\t\t\t\r\n\t\t$user_resumes = self::cvf_ngp_get_all_user_resumes();\r\n\t\t$wp_upload_dir = wp_upload_dir();\r\n\t\t$path = $wp_upload_dir['path'] . '\/';\r\n\r\n\t\t$count = 0;\r\n\r\n\t\tif(isset($_POST['upload_resume_file']) and $_SERVER['REQUEST_METHOD'] == \"POST\"){\r\n\t\t\t\r\n\t\t\tif(!$_FILES['files']['name']) {\r\n\t\t\t\techo \"<p class='bg-danger'>Please select a file.<\/p>\";\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tforeach ($_FILES['files']['name'] as $f => $name) {\r\n\t\t\t\r\n\t\t\t\tif(isset($_POST['resume_avatar'])) {\r\n\t\t\t\t\t$valid_formats = array(\"jpg\", \"jpeg\", \"gif\", \"png\");\r\n\t\t\t\t\t$max_file_size = 1024 * 500; # in kb\r\n\t\t\t\t\t$file_title = 'avatar-'.$_COOKIE['ngp_edit_resume'];\r\n\t\t\t\t} else if (isset($_POST['resume_file'])) {\r\n\t\t\t\t\t$valid_formats = array(\"doc\", \"docx\", \"pdf\", \"txt\");\r\n\t\t\t\t\t$max_file_size = 1024 * 2000; # in kb\r\n\t\t\t\t\t$file_title = $name;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t$extension = pathinfo($name, PATHINFO_EXTENSION);\r\n\t\t\t\t$new_filename = cvf_ngp_generate_random_code(20)  . '.' . $extension;\r\n\t\t\t\t\r\n\t\t\t\tif ($_FILES['files']['error'][$f] == 4) {}\r\n\t\t\t\t\r\n\t\t\t\tif ($_FILES['files']['error'][$f] == 0) {\r\n\t\t\t\t\r\n\t\t\t\t\tif ($_FILES['files']['size'][$f] > $max_file_size) {\r\n\t\t\t\t\t\techo \"<p class='bg-danger'>$name is too large!.<\/p>\";\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t} elseif( ! in_array($extension, $valid_formats) ){\r\n\t\t\t\t\t\techo \"<p class='bg-danger'>$name is not a valid format<\/p>\";\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t} else{ \r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif(move_uploaded_file($_FILES[\"files\"][\"tmp_name\"][$f], $path.$new_filename)) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t$count++; \r\n\r\n\t\t\t\t\t\t\t$filename = $path.$new_filename;\r\n\t\t\t\t\t\t\t$parent_post_id = $_COOKIE['ngp_edit_resume'];\r\n\t\t\t\t\t\t\t$filetype = wp_check_filetype( basename( $filename ), null );\r\n\t\t\t\t\t\t\t$wp_upload_dir = wp_upload_dir();\r\n\t\t\t\t\t\t\t$attachment = array(\r\n\t\t\t\t\t\t\t\t'guid'           => $wp_upload_dir['url'] . '\/' . basename( $filename ), \r\n\t\t\t\t\t\t\t\t'post_mime_type' => $filetype['type'],\r\n\t\t\t\t\t\t\t\t'post_title'     => preg_replace( '\/\\.[^.]+$\/', '', basename( $file_title ) ),\r\n\t\t\t\t\t\t\t\t'post_content'   => '',\r\n\t\t\t\t\t\t\t\t'post_status'    => 'inherit'\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\t$attach_id = wp_insert_attachment( $attachment, $filename, $parent_post_id );\r\n\r\n\t\t\t\t\t\t\trequire_once( ABSPATH . 'wp-admin\/includes\/image.php' );\r\n\r\n\t\t\t\t\t\t\t$attach_data = wp_generate_attachment_metadata( $attach_id, $filename );\r\n\t\t\t\t\t\t\twp_update_attachment_metadata( $attach_id, $attach_data );\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif(isset($_POST['resume_file'])) {\r\n\t\t\t\t\t\t\t\tupdate_post_meta($_COOKIE['ngp_edit_resume'], 'ngp_resume', $attach_id);\r\n\t\t\t\t\t\t\t} elseif(isset($_POST['resume_avatar'])) {\r\n\t\t\t\t\t\t\t\tupdate_post_meta($_COOKIE['ngp_edit_resume'], 'ngp_avatar', $attach_id);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\techo 'success';\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\texit();\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\tpublic static function cvf_ngp_archive_dates() {\r\n\t\r\n\t\tglobal $wpdb;\r\n\t\t\r\n\t\t$table = $wpdb->prefix . 'posts';\r\n\t\t$archive_dates = $wpdb->get_results($wpdb->prepare(\"\r\n\t\t\tSELECT YEAR(post_date) AS `year`, MONTH(post_date) AS `month`, count(ID) as posts \r\n\t\t\tFROM $table  WHERE post_type = 'blog' AND post_status = 'publish' \r\n\t\t\tGROUP BY YEAR(post_date), MONTH(post_date) \r\n\t\t\tORDER BY post_date DESC\", array()\r\n\t\t) );\r\n\t\t\r\n\t\treturn $archive_dates;\r\n\t\t\r\n\t}\r\n\t\r\n\tpublic static function cvf_ngp_blog_datearchives_rewrite_rules($wp_rewrite) {\r\n\r\n\t\t$rules = self::cvf_ngp_generate_blog_date_archives('blog', $wp_rewrite);\r\n\t\t$wp_rewrite->rules = $rules + $wp_rewrite->rules;\r\n\t\treturn $wp_rewrite;\r\n\t\t\r\n\t}\r\n\r\n\tpublic static function cvf_ngp_generate_blog_date_archives($cpt, $wp_rewrite) {\r\n\r\n\t\t$rules = array();\r\n\r\n\t\t$post_type = get_post_type_object($cpt);\r\n\t\t$slug_archive = $post_type->has_archive;\r\n\t\tif ($slug_archive === false) return $rules;\r\n\t\tif ($slug_archive === true) {\r\n\t\t\t$slug_archive = $post_type->name;\r\n\t\t}\r\n\r\n\t\t$dates = array(\r\n\t\t\tarray(\r\n\t\t\t\t'rule' => \"([0-9]{4})\/([0-9]{1,2})\/([0-9]{1,2})\",\r\n\t\t\t\t'vars' => array('year', 'monthnum', 'day')),\r\n\t\t\tarray(\r\n\t\t\t\t'rule' => \"([0-9]{4})\/([0-9]{1,2})\",\r\n\t\t\t\t'vars' => array('year', 'monthnum')),\r\n\t\t\tarray(\r\n\t\t\t\t'rule' => \"([0-9]{4})\",\r\n\t\t\t\t'vars' => array('year'))\r\n\t\t);\r\n\r\n\t\tforeach ($dates as $data) {\r\n\t\t\t$query = 'index.php?post_type='.$cpt;\r\n\t\t\t$rule = $slug_archive.'\/'.$data['rule'];\r\n\r\n\t\t\t$i = 1;\r\n\t\t\tforeach ($data['vars'] as $var) {\r\n\t\t\t\t$query.= '&'.$var.'='.$wp_rewrite->preg_index($i);\r\n\t\t\t\t$i++;\r\n\t\t\t}\r\n\r\n\t\t\t$rules[$rule.\"\/?$\"] = $query;\r\n\t\t\t$rules[$rule.\"\/feed\/(feed|rdf|rss|rss2|atom)\/?$\"] = $query.\"&feed=\".$wp_rewrite->preg_index($i);\r\n\t\t\t$rules[$rule.\"\/(feed|rdf|rss|rss2|atom)\/?$\"] = $query.\"&feed=\".$wp_rewrite->preg_index($i);\r\n\t\t\t$rules[$rule.\"\/page\/([0-9]{1,})\/?$\"] = $query.\"&paged=\".$wp_rewrite->preg_index($i);\r\n\t\t}\r\n\r\n\t\treturn $rules;\r\n\t\t\r\n\t}\r\n\r\n\tpublic static function cvf_ngp_remove_menus(){\r\n\t\r\n\t\tremove_menu_page('edit.php?post_type=resume');\r\n\t\t#remove_menu_page('edit.php?post_type=blog');\r\n\t}\r\n\r\n}\r\n[\/cc]","post_title":"Post Class for Resume Database","post_excerpt":"Functions from my most recent Resume Database project","post_status":"publish","comment_status":"open","ping_status":"closed","post_password":"","post_name":"post-class-for-resume-database","to_ping":"","pinged":"","post_modified":"2015-02-09 06:02:17","post_modified_gmt":"2015-02-09 06:02:17","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=990","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":1831,"post_author":"1","post_date":"2017-03-14 15:34:53","post_date_gmt":"2017-03-14 07:34:53","post_content":"<img src=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2017\/03\/python-django-ajax-pagination-with-search-and-sort.jpg\" alt=\"\" width=\"100%\" \/>\r\n\r\nIn this tutorial, we are going to build a simple AJAX Pagination with search and sort using Python with Django framework. This tutorial assumes that you already have an existing Module built using the latest Django framework. What you see in the above picture is exactly what we are going to build out. So let\u2019s get started.\r\n\r\nCreate the base template <strong>mymodule\/templates\/mymodule\/base.html<\/strong>:\r\n<pre class=\"lang:default decode:true \">\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n    <title>MyDjangoApp<\/title>\r\n    \r\n    <meta charset=\"utf-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n    \r\n    <link rel=\"stylesheet\" href=\"\/\/maxcdn.bootstrapcdn.com\/bootstrap\/3.3.7\/css\/bootstrap.min.css\">\r\n  \t<link rel=\"stylesheet\" href=\"{% static 'ecommerce\/css\/styles.css' %}\" \/>\r\n<\/head>\r\n<body class=\"override\">\r\n    <nav class=\"navbar navbar-inverse\" role=\"navigation\">\r\n        <div class=\"container\">\r\n            <div class=\"navbar-header\">\r\n                <button type=\"button\" class=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#navbar\" aria-expanded=\"false\">\r\n                    <span class=\"sr-only\">Toggle navigation<\/span>\r\n                    <span class=\"icon-bar\"><\/span>\r\n                    <span class=\"icon-bar\"><\/span>\r\n                    <span class=\"icon-bar\"><\/span>\r\n                <\/button>\r\n                <a class=\"navbar-brand\" href=\"\/mymodule\/\">Django Pagination<\/a>\r\n            <\/div>\r\n        <\/div>\r\n    <\/nav>\r\n    \r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            {% block content %}{% endblock %}\r\n        <\/div>\r\n    <\/div>\r\n    \r\n    <footer>\r\n        <div class=\"container\">\r\n            <div class=\"row well ml-t\">\r\n                <div class=\"col-lg-8 col-md-8\">     \r\n                    <h4>Developed by: <a href=\"http:\/\/carlofontanos.com\" target=\"_blank\">Carl Victor C. Fontanos<\/a><\/h4>\r\n                <\/div>\r\n                <div class=\"col-lg-4 col-md-4\">\r\n                    <p class=\"m-t\">Copyright &copy; <a href=\"http:\/\/carlofontanos.com\" target=\"_blank\">www.carlofontanos.com<\/a> 2017<\/p>\r\n                    <p>All Rights Reserved.<\/p>\r\n                <\/div>\r\n            <\/div>\r\n        <\/div>\r\n    <\/footer>\r\n  \t<script src=\"{% static 'mymodule\/js\/app.js' %}\"><\/script>\r\n<\/body>\r\n<\/html>\r\n<\/pre>\r\n\r\nThen create the products template: <strong>mymodule\/templates\/mymodule\/products.html<\/strong> and include the code bellow:\r\n<pre class=\"lang:default decode:true \">\r\n{% extends \"mymodule\/base.html\" %}\r\n\r\n{% block content %}\r\n\t<div class=\"container products-view-user\">\r\n\t\t{% csrf_token %}\r\n\t\t<form class = \"post-list\">\r\n\t\t\t<input type = \"hidden\" value = \"\" \/>\r\n\t\t<\/form>\r\n\t\t\r\n\t\t<article class=\"navbar-form navbar-left p-0 m-0 ml-b\">\r\n\t\t\t<div class=\"form-group\">\r\n\t\t\t\t<label>Per Page: <\/label>\r\n\t\t\t\t<select class=\"form-control post_max\">\r\n\t\t\t\t\t<option value=\"1\">1<\/option>\r\n\t\t\t\t\t<option value=\"2\">2<\/option>\r\n\t\t\t\t\t<option value=\"3\">3<\/option>\r\n\t\t\t\t<\/select>\r\n\t\t\t\t<label>Search Keyword: <\/label>\r\n\t\t\t\t<input type=\"text\" class=\"form-control post_search_text\" placeholder=\"Enter a keyword\">\r\n\t\t\t<\/div>\r\n\t\t\t<input type = \"submit\" value = \"Filter\" class = \"btn btn-primary post_search_submit\" \/>\r\n\t\t<\/article>\r\n\t\t\r\n\t\t<a href=\"user-products-add.php\" class=\"btn btn-success pull-right\">Add New<\/a>\r\n\t\t\r\n\t\t<br class = \"clear\" \/>\r\n\t\t\r\n\t\t<div class = \"wave-box-wrapper\">\r\n\t\t\t<div class = \"wave-box\"><\/div>\r\n\t\t\t<table class = \"table table-striped table-post-list no-margin\">\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th>Image<\/th>\r\n\t\t\t\t\t\t<th id = \"name\" class = \"active\"><a href = \"#\">Name<\/a><\/th>\r\n\t\t\t\t\t\t<th id = \"price\"><a href = \"#\">Price<\/a><\/th>\r\n\t\t\t\t\t\t<th id = \"status\"><a href = \"#\">Status<\/a><\/th>\r\n\t\t\t\t\t\t<th id = \"date\"><a href = \"#\">Date<\/a><\/th>\r\n\t\t\t\t\t\t<th id = \"quantity\"><a href = \"#\">Quantity<\/a><\/th>\r\n\t\t\t\t\t\t<th>Action<\/th>\r\n\t\t\t\t\t<\/tr>\r\n\t\t\t\t<\/thead>\r\n\t\t\t\t<tbody class = \"pagination-container\"><\/tbody>\r\n\t\t\t<\/table>\r\n\t\t\t\r\n\t\t\t<div class = \"pagination-nav\"><\/div>\r\n\t\t<\/div>\r\n\t<\/div>\r\n{% endblock %}\r\n<\/pre>\r\n\r\nCreate the controller that will handle both GET and POST methods to the products page. The code bellow goes to your <strong>mymodule\/views.py<\/strong>\r\n\r\nOf course you need to update the models used bellow to match your requirements. If you need to see how the \"Product\" model implementation looks like, you can find it at the end of this tutorial.\r\n<pre class=\"lang:default decode:true \">\r\nfrom django.http import JsonResponse\r\nfrom django.db.models import Q\r\nfrom .models import Product\r\n\r\nimport math\r\n\r\ndef products(request):\r\n\tif request.method == 'POST':\r\n\t\tpagination_content = \"\"\r\n\t\tpage_number = request.POST['data[page]'] if request.POST['data[page]'] else 1\r\n\t\tpage = int(page_number)\r\n\t\tname = request.POST['data[th_name]']\r\n\t\tsort = '-' if request.POST['data[th_sort]'] == 'DESC' else ''\r\n\t\tsearch = request.POST['data[search]']\r\n\t\tmax = int(request.POST['data[max]'])\r\n\t\t\r\n\t\tcur_page = page\r\n\t\tpage -= 1\r\n\t\tper_page = max # Set the number of results to display\r\n\t\tstart = page * per_page\r\n\t\t\r\n\t\t# If search keyword is not empty, we include a query for searching \r\n\t\t# the \"content\" or \"name\" fields in the database for any matched strings.\r\n\t\tif search:\t\t \r\n\t\t\tall_posts = Product.objects.filter(Q(content__contains = search) | Q(name__contains = search)).order_by(sort + name)[start:per_page]\r\n\t\t\tcount = Product.objects.filter(Q(content__contains = search) | Q(name__contains = search)).count()\r\n\t\t\t\r\n\t\telse:\r\n\t\t\tall_posts = Product.objects.order_by(sort + name)[start:cur_page * max]\r\n\t\t\tcount = Product.objects.count()\r\n\t\t\r\n\t\tif all_posts:\r\n\t\t\tfor post in all_posts:\r\n\t\t\t\tpagination_content += '''\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td><img src='%s' width='100' \/><\/td>\r\n\t\t\t\t\t\t<td>%s<\/td>\r\n\t\t\t\t\t\t<td>$%s<\/td>\r\n\t\t\t\t\t\t<td>%s<\/td>\r\n\t\t\t\t\t\t<td>%s<\/td>\r\n\t\t\t\t\t\t<td>%s<\/td>\r\n\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t<a href='#' class='text-success'>  \r\n\t\t\t\t\t\t\t\t<span class='glyphicon glyphicon-pencil' title='Edit'><\/span>\r\n\t\t\t\t\t\t\t<\/a> &nbsp; &nbsp;\r\n\t\t\t\t\t\t\t<a href='#' class='text-danger delete-product' item_id='%s'>\r\n\t\t\t\t\t\t\t\t<span class='glyphicon glyphicon-remove' title='Delete'><\/span>\r\n\t\t\t\t\t\t\t<\/a>\r\n\t\t\t\t\t\t<\/td>\r\n\t\t\t\t\t<\/tr>\r\n\t\t\t\t''' %(post.featured_image, post.name, post.price, post.status, post.date, post.quantity, post.id)\r\n\t\telse:\r\n\t\t\tpagination_content += \"<tr><td colspan='7' class='bg-danger p-d'>No results<\/td><\/tr>\"\r\n\t\t\r\n\t\treturn JsonResponse({\r\n\t\t\t'content': pagination_content, \r\n\t\t\t'navigation': nagivation_list(count, per_page, cur_page)\r\n\t\t})\r\n\telse:\t\r\n\t\treturn render(request, 'mymodule\/product\/products.html')\r\n\t\t\r\ndef nagivation_list(count, per_page, cur_page):\r\n\tpagination_nav = \"\"\r\n\tprevious_btn = True\r\n\tnext_btn = True\r\n\tfirst_btn = True\r\n\tlast_btn = True\r\n\t\t\r\n\tno_of_paginations = int(math.ceil(count \/ per_page))\r\n\t\r\n\tif cur_page >= 7:\r\n\t\tstart_loop = cur_page - 3\r\n\t\tif no_of_paginations > cur_page + 3:\r\n\t\t\tend_loop = cur_page + 3\r\n\t\telif cur_page <= no_of_paginations and cur_page > no_of_paginations - 6:\r\n\t\t\tstart_loop = no_of_paginations - 6\r\n\t\t\tend_loop = no_of_paginations\r\n\t\telse:\r\n\t\t\tend_loop = no_of_paginations\r\n\telse:\r\n\t\tstart_loop = 1\r\n\t\tif no_of_paginations > 7:\r\n\t\t\tend_loop = 7\r\n\t\telse:\r\n\t\t\tend_loop = no_of_paginations\r\n\r\n\t# Pagination Buttons logic     \r\n\tpagination_nav += \"<div class='pagination-container'><ul>\"\r\n\r\n\tif first_btn and cur_page > 1:\r\n\t\tpagination_nav += \"<li p='1' class='active'>First<\/li>\"\r\n\telif first_btn:\r\n\t\tpagination_nav += \"<li p='1' class='inactive'>First<\/li>\"\r\n\r\n\tif previous_btn and cur_page > 1:\r\n\t\tpre = cur_page - 1\r\n\t\tpagination_nav += \"<li p='\" + str(pre) + \"' class='active'>Previous<\/li>\"\r\n\telif previous_btn:\r\n\t\tpagination_nav += \"<li class='inactive'>Previous<\/li>\"\r\n\t\r\n\tfor i in range(start_loop, end_loop + 1):\r\n\t\tif cur_page == i:\r\n\t\t\tpagination_nav += \"<li p='\" + str(i) + \"' class = 'selected'>\" + str(i) + \"<\/li>\"\r\n\t\telse:\r\n\t\t\tpagination_nav += \"<li p='\" + str(i) + \"' class='active'>\" + str(i) + \"<\/li>\"\r\n\r\n\tif next_btn and cur_page < no_of_paginations:\r\n\t\tnex = cur_page + 1\r\n\t\tpagination_nav += \"<li p='\" + str(nex) + \"' class='active'>Next<\/li>\"\r\n\telif next_btn:\r\n\t\tpagination_nav += \"<li class='inactive'>Next<\/li>\"\r\n\r\n\tif last_btn and cur_page < no_of_paginations:\r\n\t\tpagination_nav += \"<li p='\" + str(no_of_paginations) + \"' class='active'>Last<\/li>\"\r\n\telif last_btn:\r\n\t\tpagination_nav += \"<li p='\" + str(no_of_paginations) + \"' class='inactive'>Last<\/li>\"\r\n\r\n\tpagination_nav = pagination_nav + \"<\/ul><\/div>\"\r\n\t\r\n\treturn pagination_nav\r\n<\/pre>\r\n                                                                                  \r\nRegister the view in our <strong>mymodule\/urls.py<\/strong>:   \r\n<pre class=\"lang:default decode:true \">\r\nfrom django.conf.urls import url\r\nfrom . import views\r\n\r\napp_name = 'mymodule' # So we can use it like: {% url 'mymodule:products' %} on our template. \r\nurlpatterns = [\r\n    url(r'^login\/$', views.products, name='products')\r\n]                                                                                  \r\n<\/pre>\r\n                                                                                  \r\nCreate a javascript file \"app.js\" under <strong>mymodule\\static\\mymodule\\js<\/strong> then add the following:\r\n<pre class=\"lang:default decode:true \">\r\n\/**\r\n * App Class \r\n *\r\n * @author\t\tCarl Victor Fontanos\r\n * @author_url\twww.carlofontanos.com\r\n *\r\n *\/\r\n\r\n\/**\r\n * Setup a App namespace to prevent JS conflicts.\r\n *\/\r\nvar app = {\r\n\t\t\r\n    \r\n\tPosts: function() {\r\n\t\t\r\n\t\t\/**\r\n\t\t * This method contains the list of functions that needs to be loaded\r\n\t\t * when the \"Posts\" object is instantiated.\r\n\t\t *\r\n\t\t *\/\r\n\t\tthis.init = function() {\r\n\t\t\tthis.get_items_pagination();\r\n\t\t}\r\n\t\t\r\n\t\t\/**\r\n\t\t * Load user items pagination.\r\n\t\t *\/\r\n\t\tthis.get_items_pagination = function() {\r\n\t\t\t\r\n\t\t\t_this = this;\r\n\t\t\t\r\n\t\t\t\/* Check if our hidden form input is not empty, meaning it's not the first time viewing the page. *\/\r\n\t\t\tif($('form.post-list input').val()){\r\n\t\t\t\t\/* Submit hidden form input value to load previous page number *\/\r\n\t\t\t\tdata = JSON.parse($('form.post-list input').val());\r\n\t\t\t\t_this.ajax_get_items_pagination(data.page, data.th_name, data.th_sort);\r\n\t\t\t} else {\r\n\t\t\t\t\/* Load first page *\/\r\n\t\t\t\t_this.ajax_get_items_pagination(1, 'name', 'ASC');\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar th_active = $('.table-post-list th.active');\r\n\t\t\tvar th_name = $(th_active).attr('id');\r\n\t\t\tvar th_sort = $(th_active).hasClass('DESC') ? 'DESC': 'ASC';\r\n\t\t\t\t\t\t\r\n\t\t\t\/* Search *\/\r\n\t\t\t$('body').on('click', '.post_search_submit', function(){\r\n\t\t\t\t_this.ajax_get_items_pagination(1, th_name, th_sort);\r\n\t\t\t});\r\n\t\t\t\/* Search when Enter Key is triggered *\/\r\n\t\t\t$(\".post_search_text\").keyup(function (e) {\r\n\t\t\t\tif (e.keyCode == 13) {\r\n\t\t\t\t\t_this.ajax_get_items_pagination(1, th_name, th_sort);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\t\/* Pagination Clicks   *\/                  \r\n\t\t\t$('body').on('click', '.pagination-nav li.active', function(){\r\n\t\t\t\tvar page = $(this).attr('p');\r\n\t\t\t\tvar current_sort = $(th_active).hasClass('DESC') ? 'DESC': 'ASC';\r\n\t\t\t\t_this.ajax_get_items_pagination(page, th_name, current_sort);                \r\n\t\t\t}); \r\n\r\n\t\t\t\/* Sorting Clicks *\/\r\n\t\t\t$('body').on('click', '.table-post-list th', function(e) {\r\n\t\t\t\te.preventDefault();                             \r\n\t\t\t\tvar th_name = $(this).attr('id');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\tif(th_name){\r\n\t\t\t\t\t\/* Remove all TH tags with an \"active\" class *\/\r\n\t\t\t\t\tif($('.table-post-list th').removeClass('active')) {\r\n\t\t\t\t\t\t\/* Set \"active\" class to the clicked TH tag *\/\r\n\t\t\t\t\t\t$(this).addClass('active');\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(!$(this).hasClass('DESC')){\r\n\t\t\t\t\t\t_this.ajax_get_items_pagination(1, th_name, 'DESC');\r\n\t\t\t\t\t\t$(this).addClass('DESC');\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t_this.ajax_get_items_pagination(1, th_name, 'ASC');\r\n\t\t\t\t\t\t$(this).removeClass('DESC');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\t\/**\r\n\t\t * AJAX user items pagination.\r\n\t\t *\/\r\n\t\tthis.ajax_get_items_pagination = function(page, th_name, th_sort){\r\n\t\t\t\r\n\t\t\tif($(\".pagination-container\").length > 0 && $(\".products-view-user\").length > 0){\r\n\t\t\t\t$(\".pagination-container\").html('<img src=\"img\/loading.gif\" class=\"ml-tb\" \/>');\r\n\t\t\t\t\r\n\t\t\t\tvar post_data = {\r\n\t\t\t\t\tpage: page,\r\n\t\t\t\t\tsearch: $('.post_search_text').val(),\r\n\t\t\t\t\tth_name: th_name,\r\n\t\t\t\t\tth_sort: th_sort,\r\n\t\t\t\t\tmax: $('.post_max').val(),\r\n\t\t\t\t};\r\n\t\t\t\t\r\n\t\t\t\t$('form.post-list input').val(JSON.stringify(post_data));\r\n\t\t\t\t\r\n\t\t\t\tvar data = {\r\n\t\t\t\t\taction: \"demo_load_my_posts\",\r\n\t\t\t\t\tcsrfmiddlewaretoken: $(\"input[name=csrfmiddlewaretoken]\").val(),\r\n\t\t\t\t\tdata: JSON.parse($('form.post-list input').val())\r\n\t\t\t\t};\r\n\t\t\t\t\r\n\t\t\t\t$.ajax({\r\n\t\t\t\t\turl: '\/mymodule\/products\/',\r\n\t\t\t\t\ttype: 'POST',\r\n\t\t\t\t\tdata: data,\r\n\t\t\t\t\tsuccess: function (response) {\r\n\t\t\t\t\t\tif($(\".pagination-container\").html(response.content)){\r\n\t\t\t\t\t\t\t$('.pagination-nav').html(response.navigation);\r\n\t\t\t\t\t\t\t$('.table-post-list th').each(function() {\r\n\t\t\t\t\t\t\t\t\/* Append the button indicator *\/\r\n\t\t\t\t\t\t\t\t$(this).find('span.glyphicon').remove();    \r\n\t\t\t\t\t\t\t\tif($(this).hasClass('active')){\r\n\t\t\t\t\t\t\t\t\tif(JSON.parse($('form.post-list input').val()).th_sort == 'DESC'){\r\n\t\t\t\t\t\t\t\t\t\t$(this).append(' <span class=\"glyphicon glyphicon-chevron-down pull-right\"><\/span>');\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t$(this).append(' <span class=\"glyphicon glyphicon-chevron-up pull-right\"><\/span>');\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\/**\r\n * When the document has been loaded...\r\n *\r\n *\/\r\njQuery(document).ready( function () {\r\n\tposts = new app.Posts(); \/* Instantiate the Posts Class *\/\r\n\tposts.init(); \/* Load Posts class methods *\/\r\n});\r\n<\/pre>\r\n\r\nFinally, let's add css styling to our pagination. Create a css file \"styles.css\" under <strong>mymodule\\static\\mymodule\\css<\/strong> then add the following:\r\n<pre class=\"lang:default decode:true \">\r\n\/* Pagination Styles *\/\r\n.pagination-nav { margin: 30px 0 20px 0; }\r\n.pagination-nav ul {margin: 0; padding: 0;}\r\n.pagination-nav ul li {display: inline-block; margin: 3px; padding: 4px 8px; background: #FFF; color: black; }\r\n.pagination-nav ul li.active:hover {cursor: pointer; background: #367fa9; color: white; }\r\n.pagination-nav ul li.inactive {background: #CACACA;}\r\n.pagination-nav ul li.selected {background: #367fa9; color: white;}\r\n<\/pre>\r\n                                                                                  \r\nThat's it, we're done! Go ahead and test it!\r\n                                                                                  \r\nHere is how my Product model implementation looks like:\r\n<pre class=\"lang:default decode:true \">\r\nfrom django.db import models\r\n                                                                                  \r\nclass Product(models.Model):\r\n    name = models.CharField(max_length=200)\r\n    content = models.TextField()\r\n    excerpt = models.TextField()\r\n    price = models.DecimalField(max_digits=6, decimal_places=2)\r\n    status = models.IntegerField(default=0)\r\n    date = models.DateTimeField(auto_now_add=True)\r\n    quantity = models.PositiveIntegerField()\r\n    author = models.PositiveIntegerField()\r\n    featured_image = models.CharField(max_length=300)\r\n<\/pre>\r\n","post_title":"Python - Django AJAX Pagination with Search and Sort","post_excerpt":"A simple AJAX pagination that includes a search filter and sorting functionality","post_status":"publish","comment_status":"open","ping_status":"open","post_password":"","post_name":"python-django-ajax-pagination-with-search-and-sort","to_ping":"","pinged":"","post_modified":"2017-04-24 18:11:07","post_modified_gmt":"2017-04-24 10:11:07","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=1831","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":695,"post_author":"1","post_date":"2014-09-02 07:12:20","post_date_gmt":"2014-09-02 07:12:20","post_content":"For example you want to get the value of 'firstname' on this URL: http:\/\/carlofontanos.com\/?firstname=carlo&lastname=fontanos\r\n\r\nIn PHP, we can simply access the value by using the $_GET[], since Javascript does not have any built-in function like this, we need to create our own.\r\n[cc lang = \"javascript\"]\r\n<script type=\"text\/javascript\">\r\njQuery(document).ready(function($){\t\r\n\t\r\n\tfunction cvf_get_url_value(variable) {\r\n\t\t   var query = window.location.search.substring(1);\r\n\t\t   var vars = query.split(\"&\");\r\n\t\t   for (var i=0;i<vars.length;i++) {\r\n\t\t\t\t   var pair = vars[i].split(\"=\");\r\n\t\t\t\t   if(pair[0] == variable){return pair[1];}\r\n\t\t   }\r\n\t\t   return(false);\r\n\t}\r\n});\r\n<\/script>\r\n[\/cc]\r\n\r\nGet the value of 'firstname':\r\n<code>cvf_get_url_value('firstname');<\/code>\r\n\r\n\r\n","post_title":"Reading URL variables in Javascript","post_excerpt":"A Simple Function that you can use to read URL variables.","post_status":"publish","comment_status":"open","ping_status":"closed","post_password":"","post_name":"reading-url-variables-in-javascript","to_ping":"","pinged":"","post_modified":"2015-02-09 06:46:00","post_modified_gmt":"2015-02-09 06:46:00","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=695","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":1039,"post_author":"1","post_date":"2015-01-13 10:06:11","post_date_gmt":"2015-01-13 10:06:11","post_content":"Contents and files are the main assets of your website\/business. In some case you may want to show your content only for website members who are logged in. Assume you are an artist, and you make and sell songs for living. When a user registers and buys your album, you do not want your album download links to be exposed to the public where they can all consume and share. So lets fix that.\r\n\r\n<a href=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2015\/01\/access-denied.jpg\"><img src=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2015\/01\/access-denied.jpg\" alt=\"access-denied\" width=\"300\" height=\"300\" class=\"alignnone size-full wp-image-1042\" \/><\/a> \r\n\r\nOpen up your .htaccess found on the root folder of your website then place the block of code bellow:\r\n<code>\r\nRewriteCond %{REQUEST_FILENAME} -s\r\nRewriteRule ^wp-content\/uploads\/(.*)$ dl-file.php?file=$1 [QSA,L]\r\n<\/code>\r\n\r\nWhat the code above does is it detects if a file is being accessed directly under wp-content\/uploads\/ folder, we then redirect the user to dl-file.php to validate if the user has any privilege to view the file. \r\n\r\nNow, create the file dl-file.php in your root directory then place the block of code bellow:\r\n[cc lang = \"php\"]\r\n \/*\r\n * dl-file.php\r\n *\r\n * Protect uploaded files with login.\r\n * \r\n * @link http:\/\/wordpress.stackexchange.com\/questions\/37144\/protect-wordpress-uploads-if-user-is-not-logged-in\r\n * \r\n * @author hakre <http:\/\/hakre.wordpress.com\/>\r\n * @license GPL-3.0+\r\n * @registry SPDX\r\n *\/\r\n \r\nrequire_once('wp-load.php');\r\n\r\nis_user_logged_in() ||  auth_redirect();\r\n\r\nlist($basedir) = array_values(array_intersect_key(wp_upload_dir(), array('basedir' => 1)))+array(NULL);\r\n\r\n$file =  rtrim($basedir,'\/').'\/'.str_replace('..', '', isset($_GET[ 'file' ])?$_GET[ 'file' ]:'');\r\nif (!$basedir || !is_file($file)) {\r\n\tstatus_header(404);\r\n\tdie('404 &#8212; File not found.');\r\n}\r\n\r\n$mime = wp_check_filetype($file);\r\nif( false === $mime[ 'type' ] && function_exists( 'mime_content_type' ) )\r\n\t$mime[ 'type' ] = mime_content_type( $file );\r\n\r\nif( $mime[ 'type' ] )\r\n\t$mimetype = $mime[ 'type' ];\r\nelse\r\n\t$mimetype = 'image\/' . substr( $file, strrpos( $file, '.' ) + 1 );\r\n\r\nheader( 'Content-Type: ' . $mimetype ); \/\/ always send this\r\nif ( false === strpos( $_SERVER['SERVER_SOFTWARE'], 'Microsoft-IIS' ) )\r\n\theader( 'Content-Length: ' . filesize( $file ) );\r\n\r\n$last_modified = gmdate( 'D, d M Y H:i:s', filemtime( $file ) );\r\n$etag = '\"' . md5( $last_modified ) . '\"';\r\nheader( \"Last-Modified: $last_modified GMT\" );\r\nheader( 'ETag: ' . $etag );\r\nheader( 'Expires: ' . gmdate( 'D, d M Y H:i:s', time() + 100000000 ) . ' GMT' );\r\n\r\n\/\/ Support for Conditional GET\r\n$client_etag = isset( $_SERVER['HTTP_IF_NONE_MATCH'] ) ? stripslashes( $_SERVER['HTTP_IF_NONE_MATCH'] ) : false;\r\n\r\nif( ! isset( $_SERVER['HTTP_IF_MODIFIED_SINCE'] ) )\r\n\t$_SERVER['HTTP_IF_MODIFIED_SINCE'] = false;\r\n\r\n$client_last_modified = trim( $_SERVER['HTTP_IF_MODIFIED_SINCE'] );\r\n\/\/ If string is empty, return 0. If not, attempt to parse into a timestamp\r\n$client_modified_timestamp = $client_last_modified ? strtotime( $client_last_modified ) : 0;\r\n\r\n\/\/ Make a timestamp for our most recent modification...\r\n$modified_timestamp = strtotime($last_modified);\r\n\r\nif ( ( $client_last_modified && $client_etag )\r\n\t? ( ( $client_modified_timestamp >= $modified_timestamp) && ( $client_etag == $etag ) )\r\n\t: ( ( $client_modified_timestamp >= $modified_timestamp) || ( $client_etag == $etag ) )\r\n\t) {\r\n\tstatus_header( 304 );\r\n\texit;\r\n}\r\n\r\n\/\/ If we made it this far, just serve the file\r\nreadfile( $file );\r\n[\/cc]\r\n\r\nTo prevent direct access to directory listings, simply add the additional code bellow:\r\n<code>\r\nOptions All -Indexes\r\n<\/code>\r\n\r\nRedirect to login page instead of showing Error Message 403 (Forbidden)\r\n<code>\r\nErrorDocument 403 \/login.php\r\n<\/code>","post_title":"Restrict Access to wp-content\/uploads when User is not Logged In","post_excerpt":"Prevent non-logged in users from accessing files and listing directory contents on your WordPress blog.","post_status":"publish","comment_status":"open","ping_status":"open","post_password":"","post_name":"restrict-access-to-wp-contentuploads-when-user-is-not-logged-in","to_ping":"","pinged":"","post_modified":"2015-02-09 05:39:10","post_modified_gmt":"2015-02-09 05:39:10","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=1039","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":1597,"post_author":"1","post_date":"2016-10-07 15:26:23","post_date_gmt":"2016-10-07 07:26:23","post_content":"I recently started coding with Ruby on Rails, one of the things that I wanted to create is a simple blog. Displaying the blog posts was simple enough, but later on the page\u00a0started getting too long, so I figured I need to implement a simple pagination. In this tutorial I am going to show you how I did it, let's get started.\r\n\r\nWe are going to query the data using <a href=\"http:\/\/guides.rubyonrails.org\/active_record_querying.html\" target=\"_blank\">Rails' Active Record Query Interface<\/a> then manupulate the result to show how many items should be displayed to the screen as well as the logic of the navigation that your users are going to use to to browse through the your posts. Assuming you have a \"article\" table already setup with a controller that looks like the following:\r\n[cc lang = \"php\"]\r\nclass ArticlesController < ApplicationController\r\n\tdef index\r\n\tend\r\n\t\r\n\tdef show\r\n\tend\r\n\t...\r\nend\r\n[\/cc]\t\r\n\r\nLet's add some logic to the index method:\r\n[cc lang = \"php\"]\r\nclass ArticlesController < ApplicationController\r\n\t\r\n\tinclude ActionView::Helpers::TextHelper\r\n\t\r\n\tdef index\r\n\t\t@pagination_content = \"\"\r\n\t\t@page_number = params[\"pageno\"] ? params[\"pageno\"].to_i : 1\r\n\t\t  \r\n\t\t@page = @page_number\r\n\t\t@cur_page = @page\r\n\t\t@page -= 1\r\n\t\t# Set the number of results to display\r\n\t\t@per_page = 3 \r\n\t\t@previous_btn = true\r\n\t\t@next_btn = true\r\n\t\t@first_btn = true\r\n\t\t@last_btn = true\r\n\t\t@start = @page * @per_page\r\n\t\t\r\n\t\t@pagination_content = \"\"\r\n\t\t@pagination_nav = \"\"\r\n\t\t\r\n\t\t@all_blog_posts = Article.limit(@per_page).offset(@start).order('title ASC')\r\n\t\t@count = Article.all.length\r\n\t\t\r\n\t\tif @all_blog_posts.present?\r\n\t\t\t@all_blog_posts.each do |post, value|\r\n\t\t\t\t@pagination_content += \"\r\n\t\t\t\t\t<h4>#{post.title}<\/h4>\r\n\t\t\t\t\t#{truncate(strip_tags(post.text), :length => 500)}\r\n\t\t\t\t\"\r\n\t\t\tend\r\n\t\telse\r\n\t\t\t@pagination_content += \"<p class='bg-danger p-d'>No results<\/p>\"\r\n\t\tend\r\n\t\t\r\n\t\t# Optional, wrap the output into a container\r\n\t\t@pagination_content = \"<div class='cvf-universal-content'>#{@pagination_content}<\/div><br class = 'clear' \/>\";\r\n\r\n\t\t@no_of_paginations = (@count.fdiv(@per_page)).ceil\r\n\t\t\r\n\t\tif @cur_page >= 7 \r\n\t\t\t@start_loop = @cur_page - 3\r\n\t\t\tif @no_of_paginations > @cur_page + 3\r\n\t\t\t\t@end_loop = @cur_page + 3\r\n\t\t\telsif @cur_page <= @no_of_paginations && @cur_page > @no_of_paginations - 6\r\n\t\t\t\t@start_loop = @no_of_paginations - 6\r\n\t\t\t\t@end_loop = @no_of_paginations\r\n\t\t\telse\r\n\t\t\t\t@end_loop = @no_of_paginations\r\n\t\t\tend\r\n\t\telse\r\n\t\t\t@start_loop = 1\r\n\t\t\tif @no_of_paginations > 7\r\n\t\t\t\t@end_loop = 7\r\n\t\t\telse\r\n\t\t\t\t@end_loop = @no_of_paginations\r\n\t\t\tend\r\n\t\tend\r\n\r\n\t\t# Pagination Buttons logic     \r\n\t\t@pagination_nav += \"\r\n\t\t\t<div class='pagination-container'>\r\n\t\t\t\t<ul>\"\r\n\r\n\t\tif @first_btn && @cur_page > 1\r\n\t\t\t@pagination_nav += \"<li class='active'><a href = '#{@current_page_url}?pageno=1'>First<\/a><\/li>\"\r\n\t\telsif @first_btn\r\n\t\t\t@pagination_nav += \"<li class='inactive'>First<\/li>\"\r\n\t\tend\r\n\r\n\t\tif @previous_btn && @cur_page > 1\r\n\t\t\t@pre = @cur_page - 1\r\n\t\t\t@pagination_nav += \"<li class='active'><a href = '#{@current_page_url}?pageno=#{@pre}'>Previous<\/a><\/li>\"\r\n\t\telsif @previous_btn\r\n\t\t\t@pagination_nav += \"<li class='inactive'>Previous<\/li>\"\r\n\t\tend\r\n\t\t\r\n\t\tfor @i in @start_loop..@end_loop do\r\n\t\t\tif @cur_page == @i\r\n\t\t\t\t@pagination_nav += \"<li class = 'selected'>#{@i}<\/li>\"\r\n\t\t\telse\r\n\t\t\t\t@pagination_nav += \"<li class='active'><a href = '#{@current_page_url}?pageno=#{@i}'>#{@i}<\/a><\/li>\"\r\n\t\t\tend\r\n\t\tend\r\n\r\n\t\tif @next_btn && @cur_page < @no_of_paginations\r\n\t\t\t@nex = @cur_page + 1\r\n\t\t\t@pagination_nav += \"<li class='active'><a href = '#{@current_page_url}?pageno=#{@nex}'>Next<\/a><\/li>\"\r\n\t\telsif @next_btn\r\n\t\t\t@pagination_nav += \"<li class='inactive'>Next<\/li>\"\r\n\t\tend\r\n\r\n\t\tif @last_btn && @cur_page < @no_of_paginations\r\n\t\t\t@pagination_nav += \"<li class='active'><a href = '#{@current_page_url}?pageno=#{@no_of_paginations}'>Last<\/a><\/li>\"\r\n\t\telsif @last_btn\r\n\t\t\t@pagination_nav += \"<li class='inactive'>Last<\/li>\"\r\n\t\tend\r\n\r\n\t\t@pagination_nav = \"#{@pagination_nav}\r\n\t\t\t\t<\/ul>\r\n\t\t\t<\/div>\"\r\n\t\t\r\n\t\t@output = \"\r\n\t\t\t<div>#{@pagination_content}<\/div>\r\n\t\t\t<div>#{@pagination_nav}<\/div>\r\n\t\t\"\r\n\tend                           \r\nend                           \r\n[\/cc]\r\n\r\nOn your view\/articles\/<strong>index.html.erb<\/strong> file, we simply output the pagination by calling the @output variable:\r\n[cc lang = \"html\"]\r\n<%= raw(@output) %>\r\n[\/cc]\r\n\r\nHere's a neat CSS code that you can use to style your navigation:\r\n                                                \r\n[cc lang=\"css\"]\r\n.pagination-container  { margin-top: 15px; }\r\n.pagination-container ul { margin: 0; padding: 0; }\r\n.pagination-container ul li { display: inline; background: #FFF; color: black; }\r\n.pagination-container ul li.active a:hover { background: #1E8CBE; color: white; text-decoration: none; }\r\n.pagination-container ul li.inactive { background: #d0d0d0; }\r\n.pagination-container ul li.selected { background: #1E8CBE; color: white; }\r\n.pagination-container ul li a { color: #1e8cbe; }\r\n.pagination-container ul li a, .pagination-container ul li.inactive, .pagination-container ul li.selected { margin: 3px; padding: 4px 8px; }\r\n\r\n[\/cc]\r\n&nbsp;\r\n<h3>The output<\/h3>\r\n\r\nHere's how it will look like when you refresh your page:\r\n&nbsp;\r\n<img class=\"alignnone size-full wp-image-1598 z-depth-2\" src=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2016\/10\/ruby-on-rails-pagination.jpg\" alt=\"ruby-on-rails-pagination\" \/>","post_title":"Ruby on Rails Pagination","post_excerpt":"Creating a simple paginated list of posts on Ruby on Rails","post_status":"publish","comment_status":"open","ping_status":"open","post_password":"","post_name":"ruby-on-rails-pagination","to_ping":"","pinged":"","post_modified":"2016-10-07 16:02:37","post_modified_gmt":"2016-10-07 08:02:37","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=1597","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":835,"post_author":"1","post_date":"2014-11-13 09:35:56","post_date_gmt":"2014-11-13 09:35:56","post_content":"<strong>Turn a simple Select box:<\/strong>\r\n\r\n<a href=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2014\/11\/ugly-select.jpg\"><img class=\"alignnone size-full wp-image-836\" src=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2014\/11\/ugly-select.jpg\" alt=\"ugly-select\" width=\"519\" height=\"165\" \/><\/a>\r\n\r\n<strong>Into this:<\/strong>\r\n\r\n<a href=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2014\/11\/nice-select.jpg\"><img class=\"alignnone size-full wp-image-837\" src=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2014\/11\/nice-select.jpg\" alt=\"nice-select\" width=\"519\" height=\"253\" \/><\/a>\r\n\r\nSupported in: \r\n<ul>\r\n\t<li>IE 8+<\/li>\r\n\t<li>Chrome 8+<\/li>\r\n\t<li>Firefox 10+<\/li>\r\n\t<li>Safari 3+<\/li>\r\n\t<li>Opera 10.6+<\/li>\r\n<\/ul>\r\n\r\n\r\n\r\n\r\nDownload the latest plugin here: <a href = \"https:\/\/github.com\/ivaynberg\/select2\/tags\" target = \"_blank\" class = \"btn btn-primary\">Download<\/a>\r\n\r\n<strong>The idea<\/strong>\r\nSelect2 hides the old select box(inlined \"display: none;\") and replicates it with a new custom select box structure. It ads a \"s2id_\" before the name of your select box ID. All options within the old select box are inherited by the new select box.\r\n\r\nSample usage:\r\n[cc lang = \"html\"]\r\n<head>\r\n    <link href=\"select2.css\" rel=\"stylesheet\"\/>\r\n    <script src=\"select2.js\"><\/script>\r\n    <script>\r\n        $(document).ready(function() { $(\"#education\").select2(); });\r\n    <\/script>\r\n<\/head>\r\n<body>\r\n    <select id=\"education\">\r\n        <option value=\"AD\">Associates Degree<\/option>\r\n        ...\r\n        <option value=\"BD\">Bachelors Degree<\/option>\r\n    <\/select>\r\n<\/body>\r\n[\/cc]\r\n\r\nCommonly used parameters:\r\n<table class = \"table-bordered\" width=\"100%\">\r\n<tr>\r\n<td><em><strong>placeholder<\/strong><\/em><\/td>\r\n<td><em>[string]<\/em> Placeholder for the select element<\/td>\r\n<\/tr>\r\n<tr>\r\n<td><em><strong>allowClear<\/strong><\/em><\/td>\r\n<td><em>[boolean]<\/em> true or false. Default is false<\/td>\r\n<\/tr>\r\n<tr>\r\n<td><strong><em>minimumInputLength<\/em><\/strong><\/td>\r\n<td><em>[int]<\/em> Filters 2 string values<\/td>\r\n<\/tr>\r\n<\/table>\r\n\r\nUsage:\r\n<code>\r\n$(\"#education\").select2({\r\n    placeholder: \"Select an option\",\r\n    allowClear: true,\r\n    minimumInputLength: 5\r\n});\r\n<\/code>\r\n\r\nReference Site: http:\/\/ivaynberg.github.io\/select2\/select2-latest.html","post_title":"Select Box with Search Filter","post_excerpt":"Integrating a custom select box with search filter using Select2 plugin.","post_status":"publish","comment_status":"open","ping_status":"closed","post_password":"","post_name":"select-box-with-search-filter","to_ping":"","pinged":"","post_modified":"2015-02-09 06:31:59","post_modified_gmt":"2015-02-09 06:31:59","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=835","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":645,"post_author":"1","post_date":"2014-09-02 02:04:17","post_date_gmt":"2014-09-02 02:04:17","post_content":"First things first, in order to use PHP's cURL functions you need to install the \u00bb libcurl package. PHP requires that you use libcurl 7.0.2-beta or higher. In PHP 4.2.3, you will need libcurl version 7.9.0 or higher. From PHP 4.3.0, you will need a libcurl version that's 7.9.8 or higher. PHP 5.0.0 requires a libcurl version 7.10.5 or greater.\r\n\r\ncURL is a way you can hit a URL from your code to get a html response from it. cURL means client URL which allows you to connect with other URLs and use their responses in your code.\r\n\r\n<strong>Basic Usage:<\/strong>\r\n[cc lang = \"php\"]\r\n$url = 'http:\/\/somewhere.com\/link-to-your-api\/';\r\n\/\/ Define all the required fields needed for your API\r\n$params = array(\r\n\t'action' \t=> 'get_all_user_data',\r\n\t'key' \t\t=> '456F9DS',\r\n\t'user_id' \t=> '16845',\r\n\t'user_email' \t=> 'data405@gmail.com'\r\n);\r\n\r\n$ch = curl_init($url);\r\ncurl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);\r\ncurl_setopt($ch, CURLOPT_POST, 1);\r\ncurl_setopt($ch, CURLOPT_POSTFIELDS, http_build_query($params));\r\ncurl_setopt($ch, CURLOPT_FOLLOWLOCATION, 1);\r\ncurl_setopt($ch, CURLOPT_HEADER, 0);\r\ncurl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\r\n$response = curl_exec($ch);\r\ncurl_close($ch);\r\n\r\n\/\/ Decode the response\r\n$data = json_decode($response);\r\nprint_r($data);\r\n[\/cc]\r\n\r\nThe above code will send an HTTP Request to the given URL and will decode the response then print it to the screen of the requesting client.\r\n\r\nIf you are dealing with too many HTTP Requests, it would be best to put cURL in a function.\r\n\r\n[cc lang = \"php\"]\r\nfunction cvf_curl_with_response($url, $params ) {\r\n\r\n\t$ch = curl_init($url);\r\n\tcurl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);\r\n\tcurl_setopt($ch, CURLOPT_POST, 1);\r\n\tcurl_setopt($ch, CURLOPT_POSTFIELDS, http_build_query($params));\r\n\tcurl_setopt($ch, CURLOPT_FOLLOWLOCATION, 1);\r\n\tcurl_setopt($ch, CURLOPT_HEADER, 0);\r\n\tcurl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\r\n\t$ps_response = curl_exec($ch);\r\n\tcurl_close($ch);\r\n\t\r\n\treturn json_decode($ps_response);\r\n\t\r\n}\r\n[\/cc]\r\n\r\nThen use the function like this:\r\n[cc lang = \"php\"]\r\n$params = array(\r\n\t'action' \t=> 'get_all_user_data',\r\n\t'key' \t\t=> '456F9DS',\r\n\t'user_id' \t=> '16845',\r\n\t'user_email' \t=> 'data405@gmail.com'\r\n);\r\necho cvf_curl_with_response('http:\/\/somewhere.com\/link-to-your-api\/', $params );\r\n[\/cc]","post_title":"Sending HTTP requests using cURL in PHP","post_excerpt":"A simplified way of Sending HTTP requests using client URL","post_status":"publish","comment_status":"open","ping_status":"closed","post_password":"","post_name":"sending-http-requests-using-curl-in-php","to_ping":"","pinged":"","post_modified":"2015-02-09 06:55:05","post_modified_gmt":"2015-02-09 06:55:05","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=645","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":313,"post_author":"1","post_date":"2014-05-28 07:39:19","post_date_gmt":"2014-05-28 07:39:19","post_content":"Simply add the following code to your functions.php\r\n\r\n[cc lang = \"php\"]\r\nfunction wpse55748_filter_post_thumbnail_html( $html ) {\r\n    \/\/ If there is no post thumbnail,\r\n    \/\/ Return a default image\r\n    if ( '' == $html ) {\r\n        return '<img src=\"' . get_template_directory_uri() . '\/images\/default-thumbnail.png\" width=\"150px\" height=\"100px\" class=\"image-size-name\" \/>';\r\n    }\r\n    \/\/ Else, return the post thumbnail\r\n    return $html;\r\n}\r\nadd_filter( 'post_thumbnail_html', 'wpse55748_filter_post_thumbnail_html' );\r\n[\/cc]\r\n\r\nBe sure to replace the default-thumbnail.png with your desired default post thumbnail and adjust the width and height.","post_title":"Set a Default Featured Image for your Posts in Wordpress","post_excerpt":"Add a default image for posts that do not have a featured image.","post_status":"publish","comment_status":"open","ping_status":"open","post_password":"","post_name":"set-a-default-featured-image-for-your-posts-in-wordpress","to_ping":"","pinged":"\nhttp:\/\/carlofontanos.com\/wordpress-list\/","post_modified":"2015-02-09 07:26:14","post_modified_gmt":"2015-02-09 07:26:14","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=313","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":830,"post_author":"1","post_date":"2014-11-12 09:03:35","post_date_gmt":"2014-11-12 09:03:35","post_content":"Sessions are a simple way to store data for individual users against a unique session ID. This can be used to persist state information between page requests. Session IDs are normally sent to the browser via session cookies and the ID is used to retrieve existing session data.\r\n\r\n<strong>Session:<\/strong>\r\n1. IDU is stored on server (i.e. server-side)\r\n2. Safer (because of 1)\r\n3. Expiration can not be set, session variables will be expired when users close the browser. (nowadays it is stored for 24 minutes as default in php)\r\n\r\n<strong>Cookies:<\/strong>\r\n1. IDU is stored on web-browser (i.e. client-side)\r\n2. Not very safe, since hackers can reach and get your information (because of 1)\r\n3. Expiration can be set (see setcookies() for more information)\r\n\r\nSession is preferred when you need to store short-term information\/values, such as variables for calculating, measuring, querying etc.\r\n\r\nCookies is preferred when you need to store long-term information\/values, such as user's account (so that even when they shutdown the computer for 2 days, their account will still be logged in). I can't think of many examples for cookies since it isn't adopted in most of the situations.\r\n\r\n1. A PHP session is started with the session_start () function. This function has to be written above the html tag in your program:\r\n<code>\r\n<?php session_start(); ?>\r\n<html>\r\n<\/html>\r\n<\/code>\r\n2. Sessions can be accessed using <code>$_SESSION[$variable_name]<\/code>\r\n3. Storing single session variable: <code>$_SESSION['item_id'] = $post_id;<\/code>\r\n4. PHP Session Array:\r\nExample A:\r\n<code>\r\n$userinfo = array();\r\n$userinfo['username'] = 'currentusername';\r\n$userinfo['isloggedin'] = false;\r\n$userinfo['UID'] = 1;\r\n$_SESSION['userinfo'] = $userinfo;\r\n<\/code>\r\n\r\nExample B:\r\n$_SESSION['userinfo']['username']  = 'currentusername';\r\n$_SESSION['userinfo']['isloggedin']  = false;\r\n$_SESSION['userinfo']['UID']   = 1;\r\n\r\n5. Sessions are closed using: <code><?php session_destroy(); ?><\/code>\r\n","post_title":"Setting \/ Getting Sessions Values in PHP","post_excerpt":"Learn how to set and get Sessions values in PHP","post_status":"publish","comment_status":"open","ping_status":"closed","post_password":"","post_name":"setting-getting-sessions-values-in-php","to_ping":"","pinged":"","post_modified":"2015-02-09 06:34:04","post_modified_gmt":"2015-02-09 06:34:04","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=830","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":678,"post_author":"1","post_date":"2014-09-02 06:17:51","post_date_gmt":"2014-09-02 06:17:51","post_content":"<h3>Basic usage:<\/h3>\r\n\r\nSet a cookie\r\n<code>document.cookie=\"username=John Doe\";<\/code>\r\n\r\nGet a cookie\r\n<code>var x = document.cookie;<\/code>\r\n\r\n<h3>Function Based:<\/h3><br \/>\r\n\r\n[cc lang = \"javascript\"]\r\n<script type=\"text\/javascript\">\r\n\/**\r\n* Set Cookie\r\n*\r\n* @param string cname the name of the cookie\r\n* @param string cvalue value to be set\r\n* @param string cdays number of days before it expires \r\n* \r\n*\/\r\nfunction setCookie(cname, cvalue, cdays) {\r\n\tvar d = new Date();\r\n\td.setTime(d.getTime() + (cdays*24*60*60*1000));\r\n\tvar expires = \"expires=\"+d.toUTCString();\r\n\tdocument.cookie = cname + \"=\" + cvalue + \"; \" + expires;\r\n}\r\n\r\n\/**\r\n* Set Cookie by path\r\n*\r\n* @param string cname the name of the cookie\r\n* @param string cvalue value to be set\r\n* @param string cdays number of days before it expires \r\n* @param string cpath directory path, ex. \"\/\" to apply to the entire domain \r\n* \r\n*\/\r\nfunction setCookieByPath(cname, cvalue, cdays, cpath) {\r\n\tvar d = new Date();\r\n\td.setTime(d.getTime() + (cdays*24*60*60*1000));\r\n\tvar expires = \"expires=\"+d.toUTCString();\r\n\tdocument.cookie = cname + \"=\" + cvalue + \"; \" + expires + \"; path=\" + cpath;\r\n}\r\n\/**\r\n* Get Cookie\r\n*\r\n* @param string cname the name of the cookie to retrieve\r\n* \r\n*\/\r\nfunction getCookie(cname) {\r\n\tvar value = \"; \" + document.cookie;\r\n\tvar parts = value.split(\"; \" + cname + \"=\");\r\n\tif (parts.length == 2) return parts.pop().split(\";\").shift();\r\n}\r\n<\/script>\r\n[\/cc]","post_title":"Setting and Getting Cookies in Javascript","post_excerpt":"Basic usage of cookies (GET and SET)","post_status":"publish","comment_status":"open","ping_status":"closed","post_password":"","post_name":"setting-and-getting-cookies-in-javascript","to_ping":"","pinged":"","post_modified":"2015-02-09 06:48:54","post_modified_gmt":"2015-02-09 06:48:54","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=678","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":688,"post_author":"1","post_date":"2014-09-02 06:57:43","post_date_gmt":"2014-09-02 06:57:43","post_content":"In this tutorial, we are going to use a jQuery library called jquery.cookie.min.js so that we can access cookies like this: $.cookie('name')\r\n\r\nSet a cookie:\r\n[cc lang = \"javascript\"]\r\n<script type=\"text\/javascript\" src=\"http:\/\/ajax.googleapis.com\/ajax\/libs\/jquery\/1.4.2\/jquery.min.js\"><\/script> \r\n<script type=\"text\/javascript\" src=\"\/\/cdnjs.cloudflare.com\/ajax\/libs\/jquery-cookie\/1.4.1\/jquery.cookie.min.js\"><\/script>\r\n<script type=\"text\/javascript\">\r\n\tjQuery(document).ready(function($){\t\r\n\t\t$.cookie('cname', 'cvalue', { path: '\/', expires: 1 });\t\r\n\t});\r\n<\/script>\r\n[\/cc]\r\n\r\nRetrieve the cookie:\r\n<code>$.cookie(\"cname\")<\/code>\r\n","post_title":"Setting and Getting Cookies in jQuery","post_excerpt":"Utilizing the jQuery cookie library in our website","post_status":"publish","comment_status":"open","ping_status":"closed","post_password":"","post_name":"setting-and-getting-cookies-in-jquery","to_ping":"","pinged":"","post_modified":"2015-02-09 06:47:11","post_modified_gmt":"2015-02-09 06:47:11","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=688","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":1621,"post_author":"1","post_date":"2016-10-11 11:03:51","post_date_gmt":"2016-10-11 03:03:51","post_content":"You probably end up here because you are looking for a way to install bcrypt in your Windows machine. I needed bcrypt for authentication in my Rails application, I struggled a little bit trying to get it working on rails latest version. You might have a similar error on your console like the one bellow:\r\n\r\n<em><span style=\"color: #800000;\">C:\/Ruby23-x64\/lib\/ruby\/gems\/2.3.0\/gems\/activesupport-4.0.0\/lib\/active_support\/depen dencies.rb:228:in require: 126: The specified module could not be found. - C :\/Ruby23-x64\/lib\/ruby\/gems\/2.3.0\/gems\/bcrypt-ruby-3.1.11-x64-mingw32\/lib\/bcrypt_ext.so (LoadError)<\/span><\/em>\r\n\r\nLet's fix that.\r\n\r\n<strong>Note<\/strong>: This tutorials\u00a0is using gems 2.3.0 at the time it was created, which might be different from the current version that you are using. You can simply change ALL \"2.3.0\" on the commands I used for this tutorial to the version you are currently using.\r\n<ol>\r\n \t<li>Make sure you have the latest version of Ruby installed on your computer. You can download Ruby for Windows from this link:\u00a0<a href=\"http:\/\/rubyinstaller.org\/downloads\/\">http:\/\/rubyinstaller.org\/downloads\/<\/a><\/li>\r\n \t<li>Next is you need to navigate to your rails application then open up your Gemfile and uncomment \u00a0<strong>gem 'bcrypt'<\/strong><\/li>\r\n \t<li>Then run <strong>bundle install<\/strong> from your terminal to install the bcrypt dependecy.<\/li>\r\n \t<li>If you are currently utilizing bcrypt in your application, when you run using <strong>rails server\u00a0<\/strong>you will get an error similar to the error code bellow:\r\n<ul>\r\n \t<li><span style=\"color: #800000;\"><em>C:\/Ruby23-x64\/lib\/ruby\/gems\/2.3.0\/gems\/activesupport-4.0.0\/lib\/active_support\/depen dencies.rb:228:in `require': 126: The specified module could not be found. - C :\/Ruby23-x64\/lib\/ruby\/gems\/2.3.0\/gems\/bcrypt-ruby-3.1.11-x64-mingw32\/lib\/bcrypt_ext.so (LoadError)<\/em><\/span><\/li>\r\n<\/ul>\r\n<\/li>\r\n \t<li>CD to your gem directory: \u00a0C:\\Ruby23-x64\\lib\\ruby\\gems\\2.3.0\\gems\\bcrypt-3.1.11-x64-mingw32\\ext\\mri<\/li>\r\n \t<li>Run\u00a0<strong>ruby extconf.rb<\/strong><\/li>\r\n \t<li>Run <strong>make<\/strong><\/li>\r\n \t<li>Run <strong>make install\u00a0<\/strong>\r\n<ul>\r\n \t<li>This command will generate\u00a0<strong>bcrypt_ext.so<\/strong><\/li>\r\n<\/ul>\r\n<\/li>\r\n \t<li>Copy the generated file \"bcrypt_ext.so\" to C:\\Ruby23-x64\\lib\\ruby\\gems\\2.3.0\\gems\\bcrypt-3.1.11-x64-mingw32\\lib\\2.3\r\n<ul>\r\n \t<li>If the folder \"2.3\" (or whatever version you are using) \u00a0is not present, simply create it then paste the file \"bcrypt_ext.so\" in it.<\/li>\r\n<\/ul>\r\n<\/li>\r\n \t<li>Restart rails, you will see that the <strong>bcrypt_ext.so (LoadError)<\/strong> message\u00a0is gone.<\/li>\r\n \t<li>Congratulations, you just have configured bcrypt in your Windows machine.<\/li>\r\n<\/ol>\r\nIf you are experiencing problems with the command: <strong>make<\/strong> being unrecognized in your terminal - \u00a0it means you do not have DevKit\u00a0installed in your Windows machine. You can follow the tutorial bellow to install DevKit and associate it with your Ruby installation.\r\n<ol>\r\n \t<li>Download DevKit from here: <a href=\"http:\/\/rubyinstaller.org\/downloads\/\">http:\/\/rubyinstaller.org\/downloads\/<\/a><\/li>\r\n \t<li>Extract the contents of DevKit, preferably under\u00a0\"C:\/RubyDevKit\"<\/li>\r\n \t<li>cd C:\\RubyDevKit<\/li>\r\n \t<li>ruby dk.rb init<\/li>\r\n \t<li>ruby dk.rb install<\/li>\r\n \t<li>devkitvars.bat\r\n<ul>\r\n \t<li>This command will register all DeKit variables to your Windows environment variables path.<\/li>\r\n \t<li>Try using make command in your CMD, if still not recognized, try adding the DevKit path to your environment variables manually by following the best answer from this link:\u00a0<a href=\"https:\/\/stackoverflow.com\/questions\/19417715\/adding-devkit-to-environmental-path\">https:\/\/stackoverflow.com\/questions\/19417715\/adding-devkit-to-environmental-path<\/a><\/li>\r\n<\/ul>\r\n<\/li>\r\n<\/ol>\r\n<p style=\"padding-left: 30px;\"><\/p>","post_title":"Setting up Bcrypt for Rails on Windows","post_excerpt":"Demonstrates how to properly setup bcrypt on Windows and to solve the error bcrypt_ext.so (LoadError) message in your terminal","post_status":"publish","comment_status":"open","ping_status":"open","post_password":"","post_name":"setting-up-bcrypt-for-rails-on-windows","to_ping":"","pinged":"","post_modified":"2017-06-09 18:49:27","post_modified_gmt":"2017-06-09 10:49:27","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=1621","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":1765,"post_author":"1","post_date":"2017-01-30 18:45:51","post_date_gmt":"2017-01-30 10:45:51","post_content":"Bellow is what I used to succesfully deploy my Web Application via AWS Code Deploy. This came from my notes, thought I'd share it. I hope it will help you guys get started faster with your deployement. \r\n\r\n<ol>\r\n \t<li>Create a bucket in AWS Console under S3 -&gt; \"Create Bucket\" blue buttton.\r\n<ol>\r\n \t<li>Enter a unique name for your S3 bucket: carlofontanos-cd<\/li>\r\n \t<li>Region: \"US Standard\"<\/li>\r\n \t<li>Click \"Create\"<\/li>\r\n<\/ol>\r\n<\/li>\r\n \t<li>Create a new Role. Go to IAM -&gt; Roles -&gt; \"Create New Role\" button.\r\n<ol>\r\n \t<li>Set role name for EC2: carlofontanos-ec2-role then clck \"Next step\"<\/li>\r\n \t<li>On the next screen \"Select Role Type\" = select \"Amazon EC2\"<\/li>\r\n \t<li>On the next screen \"Attach Policy\" just click \"Next Step\" button without touching anything.<\/li>\r\n \t<li>On the next screen \"Review\" click \"Create Role\" button<\/li>\r\n<\/ol>\r\n<\/li>\r\n \t<li>On the list of roles, click on the newly created role \"carlofontanos-ec2-role\".\r\n<ol>\r\n \t<li>Under \"Permissions\" tab, expand \"inline policy\" then click on the \"click here\" link<\/li>\r\n \t<li>On the next screen expand \"Custom Policy\" then click on \"Select\" button<\/li>\r\n \t<li>Fill up the boxes using the following:\r\n<ul>\r\n \t<li>Policy Name: carlofontanos-policy-ec2-s3<\/li>\r\n \t<li>Policy Document (make sure to change the line \"carlofontanos-cd\" under \"Resource\" in the code bellow):\r\n  [cc lang=\"javascript\"]\r\n{\r\n  \"Version\":\"2012-10-17\",\r\n  \"Statement\":[\r\n    {\r\n      \"Effect\":\"Allow\",\r\n      \"Action\":[\r\n        \"s3:Get*\",\r\n        \"s3:List*\"\r\n      ],\r\n      \"Resource\":[\r\n        \"arn:aws:s3:::carlofontanos-cd\/*\",\r\n        \"arn:aws:s3:::aws-codedeploy-us-east-1\/*\"\r\n      ]\r\n    }\r\n  ]\r\n}                                    \r\n  [\/cc]\r\n  <\/li>\r\n<\/ul>\r\n<\/li>\r\n<\/ol>\r\n<\/li>\r\n \t<li>Under the same role, go to \"Trust Relationships\" tab then clik on the\r\n\"Edit Trust Relationship\" button then replace everything with the code bellow then click \"Update Trust Policy\" button:\r\n  [cc lang=\"javascript\"]\r\n{\r\n  \"Version\":\"2012-10-17\",\r\n  \"Statement\":[\r\n    {\r\n      \"Effect\":\"Allow\",\r\n      \"Principal\":{\r\n        \"Service\":\"ec2.amazonaws.com\"\r\n      },\r\n      \"Action\":\"sts:AssumeRole\"\r\n    }\r\n  ]\r\n}                                    \r\n  [\/cc]\r\n  <\/li>\r\n \t<li>Create another role by navigating to the IAM -&gt; Roles then click on \"Create New Role\" button\r\nRole Name: carlofontanos-service-role<\/li>\r\n \t<li>On the next screen \"Select Role Type\" = select \"AWS Code Deploy\"<\/li>\r\n \t<li>On the next screen \"Attach Policy\", check the box for \"AWSCodeDeployRole\"<\/li>\r\n \t<li>On the next screen \"Review\" click \"Create Role\" button<\/li>\r\n \t<li>Go to AWS Console -&gt; IAM -&gt; Users, click on the \"Add User\" button\r\n<ul>\r\n \t<li>User Name: carlofontanos-user<\/li>\r\n \t<li>Then make sure to check the box \"Programmatic access\" under \"Access type\"<\/li>\r\n<\/ul>\r\n<\/li>\r\n \t<li>On the next screen, click \"Attach Existing Policies directly\" then from the list - check the boxes of the following then Click \"Next review\" button when you're done.\r\n<ol>\r\n \t<li>AmazonEC2FullAccess<\/li>\r\n \t<li>AWSCodeDeployFullAccess<\/li>\r\n<\/ol>\r\n<\/li>\r\n \t<li>On the next screen, click on \"Create User\" button<\/li>\r\n \t<li>Save the \"Access key ID\" and \"Secret access key\" in a txt file for your reference later on.<\/li>\r\n \t<li>Click Close buttton when you are done.<\/li>\r\n \t<li>Next is we are going to create 3 inline custom policies for our user. On the list of users, click on the newly\r\ncreated user \"carlofontanos-user\" then under \"Permissions\" tab click on \"Add inline policy\" link.<\/li>\r\n \t<li>On the new screen select \"Custom Policy\" radio button then under it click \"Select\" button<\/li>\r\n \t<li>Create the follwing 3 roles:\r\n<ol>\r\n \t<li>Policy Name: carlofontanos-s3-bucket-full\r\nPolicy Document (make sure to change the line \"carlofontanos-cd\" under \"Resource\" in the code bellow):\r\n  [cc lang=\"javascript\"]\r\n{\r\n  \"Version\":\"2012-10-17\",\r\n  \"Statement\":[\r\n    {\r\n      \"Effect\":\"Allow\",\r\n      \"Action\":[\r\n        \"s3:PutObject\",\r\n        \"s3:GetObject\",\r\n        \"s3:DeleteObject\"\r\n      ],\r\n      \"Resource\":\"arn:aws:s3:::carlofontanos-cd\/*\"\r\n    }\r\n  ]\r\n}\r\n[\/cc]\r\n  <\/li>\r\n \t<li>Policy Name: carlofontanos-cloud-formation\r\nPolicy Document:\r\n  [cc lang=\"javascript\"]\r\n{\r\n  \"Version\":\"2012-10-17\",\r\n  \"Statement\":[\r\n    {\r\n      \"Effect\":\"Allow\",\r\n      \"Action\":[\r\n        \"cloudformation:*\"\r\n      ],\r\n      \"Resource\":\"*\"\r\n    }\r\n  ]\r\n}\t\r\n  [\/cc]\r\n  \r\n  <\/li>\r\n \t<li>Policy Name: carlofontanos-iam-role\r\nPolicy Document:\r\n  [cc lang=\"javascript\"]\r\n{\r\n  \"Version\":\"2012-10-17\",\r\n  \"Statement\":[\r\n    {\r\n      \"Effect\":\"Allow\",\r\n      \"Action\":[\r\n        \"iam:PassRole\",\r\n        \"iam:ListInstanceProfiles\"\r\n      ],\r\n      \"Resource\":\"*\"\r\n    }\r\n  ]\r\n}\t\r\n  [\/cc]\r\n  <\/li>\r\n<\/ol>\r\n<\/li>\r\n \t<li>Now we need to create a key pair. Go to EC2 -&gt; Network &amp; Security -&gt; Key Pairs then click on \"Create Key Pair\" button<\/li>\r\n \t<li>Key Pair Name: carlofontanos-key-pair\r\n- Note: after you click on \"Create\" button, a file PEM will automatically be downloaded into your disk.\r\nExample PEM name is: carlofontanos-key-pair.pem\r\n- You need to convert this file into a PPK using PuTTYGen, you can use instructions bellow:\r\n1. Open PuTTYGen then go to \"Conversion\" tab -&gt; select \"Import key\"\r\n2. Browse for the file, then select \"Save Private key\" button\r\n3. Enter a unique name for your private key then click save.<\/li>\r\n \t<li>Go to EC2 -&gt; Instance then click \"Launch Instance\" button.<\/li>\r\n \t<li>On the new screen, select \"Amazon Linux AMI\"<\/li>\r\n \t<li>Select the \"Free tier eligible\" type then click \"Review and Launch\" button.<\/li>\r\n \t<li>Then on the next screen, review everything then click \"Launch\" button. A popup will show\r\nup, select the key-pair we created earlier then make sure to check the \"I acknowledge that I have access....\" checkbox.<\/li>\r\n \t<li>Click \"View Instance\" button to preview your newly created EC2 instance, make sure the Instance state is \"running\" before proceeding with the next steps of this tutorial.<\/li>\r\n \t<li>Now that our new instance is up and running, we now need to SSH to it. For this part I will be using PuTTY\r\n<ol>\r\n \t<li>Copy the public IP of our new Instance then paste it on the \"Host name (or IP address)\" text field on PuTTY<\/li>\r\n \t<li>On the left side bar of PuTTY, go to: Connection -&gt; SSH -&gt; Auth then\u00a0browse the Key Pair PPK file we generated earlier (ex. carlofontanos-key-pair.ppk).<\/li>\r\n \t<li>Click open to launch the SSH Command Line, if a PuTTY secruity alert shows up - just click \"Yes\"<\/li>\r\n \t<li>On the SSH command line, Enter the following information:\r\n<ul>\r\n \t<li>Login as: ec2-user<\/li>\r\n<\/ul>\r\n<\/li>\r\n \t<li>Ok now that we're logged-in, let's configure AWS by running the command:\r\n<ul>\r\n \t<li>aws configure<\/li>\r\n<\/ul>\r\n<\/li>\r\n \t<li>Supply the following:<\/li>\r\n \t<li>A. AWS Access Key: YOUR_KEY\r\nB. AWS Secret access key: YOUR_SECRET_KEY\r\nC. Default Region Name: us-east-1\r\nD. Default ouput format: json<\/li>\r\n \t<li>Login to your FTP client, if you are using FileZilla, you can follow the tutorial bellow:\r\n<ol>\r\n \t<li>Open FileZilla then go to File -&gt; Site Manager then click on \"New Site\" button then name it anything you want<\/li>\r\n  <li>Under the General Tab, fill up \/ select the follwing:\r\nHost: [public IP of your EC2 instance]\r\nProtocol: SFTP - SSH File Transfer Protocol\r\nLogin Type: Normal\r\nUser: ec2-user\r\nPassword: [leave blank or enter it if you have]<\/li>\r\n \t<li>From the menu, go to Edit -&gt; Settings, from the left tab go to Connection -&gt; SFTP then click on the \"Add key file\" button. Select the PPK file we generated earlier then click the \"OK\" button when you're done<\/li>\r\n \t<li>Click \"Connect\" button to start listing the directoy files.<\/li>\r\n<\/ol>\r\n<\/li>\r\n  \t<li>Download this zip file and save it to your computer: <a href=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2017\/01\/default-app.zip\">default-app.zip<\/a>\r\n \t<li>Using your FTP client - upload the file \"default-app.zip\" to the root folder \"\/home\/ec2-user\" of your EC2 instance.<\/li>\r\n \t<li>Go back to the SSH command line then enter: \"unzip default-app.zip\" to start unzipping the conents.<\/li>\r\n \t<li>From the SSH command line, cd to the \"default-app\" using the command:\r\n<ul>\r\n \t<li>cd default-app<\/li>\r\n<\/ul>\r\n<\/li>\r\n \t<li>Now go back to your FTP client open the file: \/home\/ec2-user\/default-app\/cfTemplate.json using your favorite editor then locate the following keys:\r\nA. \"KeyName\" - change its value to the name of the key-pair we generated in AWS earlier. In my case it is: \"carlofontanos-key-pair\"\r\nB. \"IamInstanceProfile\" - change its value to the name of the IAM Role we generated in AWS earlier. In my case it is: \"carlofontanos-ec2-role\"\r\n- When you're done, save the file then upload it via FTP.<\/li>\r\n \t<li>From you FTP client, open the file: \/home\/ec2-user\/default-app\/deploy.sh then locate the following keys:\r\nA. Under line 26, change \"cdtutorial-uwf\" to \"carlofontanos-cd\"\r\nB. Under line 38, change the value of \"KEY_AND_VALUE --service-role-arn\" to the value listed under AWS Console -&gt;\r\nAIM -&gt; Roles -&gt; carlofontanos-service-role -&gt; Role ARN\r\nC. Under line 40, change the value of --s3-location bucket to \"carlofontanos-cd\"<\/li>\r\n \t<li>From the SSH command line, enter \"chmod +x cleanup.sh\" then press enter.<\/li>\r\n \t<li>From the SSH command line, enter \"chmod +x deploy.sh\"<\/li>\r\n \t<li>From the SSH command line, enter \"ls\" - which will display cleanup.sh and deploy.sh in green text color, which means it will work.<\/li>\r\n \t<li>Finally, run \".\/deploy.sh\" to start deploying - this should take about 6 minutes to complete.<\/li>\r\n<\/ol>\r\n<\/li>\r\n \t<li>Open your browser then navigate to [public IP of your EC2 instance]:8000. Ex. 54.164.193.11:8000<\/li>\r\n<\/ol>","post_title":"Setting-up AWS CodeDeploy","post_excerpt":"Deploy your first app to AWS using CodeDeploy","post_status":"publish","comment_status":"open","ping_status":"open","post_password":"","post_name":"setting-up-aws-codedeploy","to_ping":"","pinged":"","post_modified":"2017-01-31 17:03:38","post_modified_gmt":"2017-01-31 09:03:38","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=1765","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":1103,"post_author":"1","post_date":"2015-02-23 03:53:51","post_date_gmt":"2015-02-23 03:53:51","post_content":"<h3>OOP Approach<\/h3>\r\n[cc lang = \"php\"]\r\n<?php\r\n$server_name \t= 'localhost';\r\n$username \t\t= 'root';\r\n$password \t\t= '';\r\n$db_name \t\t= 'carlofontanos';\r\n\r\n$conn = new mysqli($server_name, $username, $password, $db_name);\r\n\r\nif ($conn->connect_error) {\r\n    die('Connection failed: ' . $conn->connect_error);\r\n} \r\n\r\n$sql = 'SELECT * FROM wp_posts WHERE post_type = \"post\"';\r\n$result = $conn->query($sql);\r\n\r\nif ($result->num_rows > 0) {\r\n    \r\n\twhile($row = $result->fetch_object()) {\r\n        echo 'Post ID: ' . $row->ID. ' - Title: ' . $row->post_title. ' Date Uploaded: ' . $row->post_date. '<br>';\r\n    }\r\n\t\r\n} else {\r\n    echo 'No Posts Found';\r\n}\r\n$conn->close();\r\n[\/cc]\r\n\r\n<h3>Procedural Approach<\/h3>\r\n[cc lang = \"php\"]\r\n<?php\r\n$server_name \t= 'localhost';\r\n$username \t\t= 'root';\r\n$password \t\t= '';\r\n$db_name \t\t= 'carlofontanos';\r\n\r\n$conn = mysqli_connect($server_name, $username, $password, $db_name);\r\n\r\nif (!$conn) {\r\n    die('Connection failed: ' . mysqli_connect_error());\r\n}\r\n\r\n$sql = 'SELECT * FROM wp_posts WHERE post_type = \"post\"';\r\n$result = mysqli_query($conn, $sql);\r\n\r\nif (mysqli_num_rows($result) > 0) {\r\n\r\n    while($row = mysqli_fetch_object($result)) {\r\n        echo 'Post ID: ' . $row->ID. ' - Title: ' . $row->post_title. ' Date Uploaded: ' . $row->post_date. '<br>';\r\n    }\r\n\t\r\n} else {\r\n    echo 'No Posts Found';\r\n}\r\n\r\nmysqli_close($conn);\r\n[\/cc]","post_title":"Simple Database Connection using MySQLi OOP and Procedural","post_excerpt":"This tutorial demonstrates the use of MySQLi in OOP and Procedural Approach","post_status":"publish","comment_status":"open","ping_status":"open","post_password":"","post_name":"simple-database-connection-using-mysqli-oop-and-procedural","to_ping":"","pinged":"","post_modified":"2015-02-23 04:58:55","post_modified_gmt":"2015-02-23 04:58:55","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=1103","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":1055,"post_author":"1","post_date":"2015-01-21 06:46:33","post_date_gmt":"2015-01-21 06:46:33","post_content":"<a href=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2015\/01\/simple-file-upload-with-php-screenshot.jpg\"><img src=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2015\/01\/simple-file-upload-with-php-screenshot.jpg\" alt=\"simple-file-upload-with-php-screenshot\" width=\"595\" height=\"195\" class=\"alignnone size-full wp-image-1057\" \/><\/a>\r\n\r\n<a href = \"http:\/\/carlofontanos.com\/demo\/simple-file-upload-with-php\/\" target = \"_blank\" class = \"btn btn-success\">Demo<\/a> <a href = \"http:\/\/carlofontanos.com\/wp-content\/uploads\/2015\/01\/simple-file-upload-with-php.rar\" class = \"btn btn-primary\">Download<\/a>\r\n\r\n<p><h3>The Code<\/h3><\/p>\r\n[cc lang = \"php\"]\r\n$message = '';\r\n\r\nif(isset($_POST['submit'])){\r\n\t\r\n\t\/\/ Check if there is an error\r\n\tif(!$_FILES['photo']['error']){\r\n\t\t\r\n\t\t\/\/ Limit file size to 1MB\r\n\t\tif($_FILES['photo']['size'] > (1024000)){ \r\n\t\t\t$message = '<p class = \"bg-danger\">Oops!  The size of your file is too large.<\/p>';\r\n\t\t\r\n\t\t} else {\t\t\r\n\t\t\t\/\/ Replace file name spaces and convert to lower case.\r\n\t\t\t$new_file_name = str_replace(' ', '_', strtolower($_FILES['photo']['name']));\r\n\t\t\r\n\t\t\t\/\/ Check if file was uploaded\r\n\t\t\tif(move_uploaded_file($_FILES['photo']['tmp_name'], 'uploads\/'.$new_file_name)){\r\n\t\t\t\t$message = '<p class = \"bg-success\">File successfully uploaded<\/p>';\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t} else {\r\n\t\t\/\/ Output all errors\r\n\t\t$message = '<p class = \"bg-danger\">Oops!  Your upload triggered the following error:  '.$_FILES['photo']['error'] . '<\/p>';\r\n\t}\r\n\t \r\n}\r\n\r\n[\/cc]\r\n\r\n","post_title":"Simple File Upload with PHP","post_excerpt":"Create a very simple file upload with File Size validation.","post_status":"publish","comment_status":"open","ping_status":"open","post_password":"","post_name":"simple-file-upload-with-php","to_ping":"","pinged":"","post_modified":"2015-02-09 05:28:49","post_modified_gmt":"2015-02-09 05:28:49","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=1055","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":2061,"post_author":"1","post_date":"2017-11-20 19:28:14","post_date_gmt":"2017-11-20 11:28:14","post_content":"<pre class=\"lang:default decode:true \">&lt;?php \r\nrequire_once('load.php');\r\n\r\nif( isset( $_POST ) ){\r\n\t$response = '';\r\n\t\r\n    if( isset( $_POST['page'] ) ){\r\n        $page = $_POST['page'];\r\n        $cur_page = $page;\r\n        $page -= 1;\r\n        $per_page = 20;\r\n        $previous_btn = true;\r\n        $next_btn = true;\r\n        $first_btn = true;\r\n        $last_btn = true;\r\n        $start = $page * $per_page;\r\n        \r\n        $all_blog_posts = DB::db_get_results(\"\r\n            SELECT * FROM item ORDER BY id DESC LIMIT %d, %d\", array( $start, $per_page ) );\r\n        \r\n        $count = DB::db_get_var(\"\r\n            SELECT COUNT(id) FROM item\", array() );\r\n        \r\n        foreach( $all_blog_posts as $key =&gt; $post ){ \r\n            $response .= '\r\n            &lt;div class = \"col-md-12\"&gt;       \r\n                &lt;h3&gt;' . $post-&gt;iname . '&lt;\/h3&gt;\r\n                &lt;p&gt;Item ID: ' . $post-&gt;id . '&lt;\/p&gt;\r\n                &lt;p&gt;Date Entered:  ' . $post-&gt;entry . '&lt;\/p&gt;\r\n            &lt;\/div&gt;';\r\n            \r\n\t\t}\r\n        \r\n        $no_of_paginations = ceil( $count \/ $per_page );\r\n\r\n        if($cur_page &gt;= 7){\r\n            $start_loop = $cur_page - 3;\r\n            if( $no_of_paginations &gt; $cur_page + 3 )\r\n                $end_loop = $cur_page + 3;\r\n            else if( $cur_page &lt;= $no_of_paginations &amp;&amp; $cur_page &gt; $no_of_paginations - 6 ){\r\n                $start_loop = $no_of_paginations - 6;\r\n                $end_loop = $no_of_paginations;\r\n            } else {\r\n                $end_loop = $no_of_paginations;\r\n            }\r\n        } else {\r\n            $start_loop = 1;\r\n            if( $no_of_paginations &gt; 7 ){\r\n                $end_loop = 7;\r\n            } else {\r\n                $end_loop = $no_of_paginations;\r\n\t\t\t}\r\n        }\r\n        \r\n        $response .= \"\r\n\t\t&lt;div class='pagination'&gt;\r\n\t\t\t&lt;ul&gt;\";\r\n\r\n\t\t\t\tif( $first_btn &amp;&amp; $cur_page &gt; 1 ){\r\n\t\t\t\t\t$response .= \"&lt;li p='1' class='active'&gt;First&lt;\/li&gt;\";\r\n\t\t\t\t} else if($first_btn){\r\n\t\t\t\t\t$response .= \"&lt;li p='1' class='inactive'&gt;First&lt;\/li&gt;\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif( $previous_btn &amp;&amp; $cur_page &gt; 1 ){\r\n\t\t\t\t\t$pre = $cur_page - 1;\r\n\t\t\t\t\t$response .= \"&lt;li p='\" . $pre . \"' class='active'&gt;Previous&lt;\/li&gt;\";\r\n\t\t\t\t} else if( $previous_btn ){\r\n\t\t\t\t\t$response .= \"&lt;li class='inactive'&gt;Previous&lt;\/li&gt;\";\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tfor ($i = $start_loop; $i &lt;= $end_loop; $i++ ){\r\n\t\t\t\t\tif($cur_page == $i){\r\n\t\t\t\t\t\t$response .= \"&lt;li p='\" . $i . \"' class = 'selected' &gt;\" . $i . \"&lt;\/li&gt;\";\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$response .= \"&lt;li p='\" . $i . \"' class='active'&gt;\" . $i . \"&lt;\/li&gt;\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif( $next_btn &amp;&amp; $cur_page &lt; $no_of_paginations ){\r\n\t\t\t\t\t$nex = $cur_page + 1;\r\n\t\t\t\t\t$response .= \"&lt;li p='\" . $nex . \"' class='active'&gt;Next&lt;\/li&gt;\";\r\n\t\t\t\t} else if( $next_btn ){\r\n\t\t\t\t\t$response .= \"&lt;li class='inactive'&gt;Next&lt;\/li&gt;\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif( $last_btn &amp;&amp; $cur_page &lt; $no_of_paginations ){\r\n\t\t\t\t\t$response .= \"&lt;li p='\" . $no_of_paginations . \"' class='active'&gt;Last&lt;\/li&gt;\";\r\n\t\t\t\t} else if($last_btn){\r\n\t\t\t\t\t$response .= \"&lt;li p='\" . $no_of_paginations . \"' class='inactive'&gt;Last&lt;\/li&gt;\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\t$response .= \"\r\n\t\t\t&lt;\/ul&gt;\r\n\t\t&lt;\/div&gt;\";\r\n        \r\n        echo $response;\r\n\t\texit();\r\n    }\r\n}\r\n\r\n\r\n?&gt;\r\n\r\n&lt;!DOCTYPE html&gt;\r\n&lt;html lang=\"en\"&gt;\r\n&lt;head&gt;\r\n\t&lt;title&gt;Pagination by Carl Victor C. Fontanos&lt;\/title&gt;\r\n\t&lt;meta charset=\"utf-8\"&gt;\r\n\t&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"&gt;\r\n\t&lt;link rel=\"stylesheet\" href=\"https:\/\/maxcdn.bootstrapcdn.com\/bootstrap\/3.3.7\/css\/bootstrap.min.css\"&gt;\r\n\t&lt;style&gt;\r\n\t.pagination ul {margin: 0; padding: 0;}\r\n\t.pagination ul li {display: inline; margin: 3px; padding: 4px 8px; background: #FFF; color: black; }\r\n\t.pagination ul li.active:hover {cursor: pointer; background: #1E8CBE; color: white; }\r\n\t.pagination ul li.inactive {background: #7E7E7E;}\r\n\t.pagination ul li.selected {background: #1E8CBE; color: white;}\r\n\t&lt;\/style&gt;\r\n\t&lt;script src=\"https:\/\/ajax.googleapis.com\/ajax\/libs\/jquery\/3.2.1\/jquery.min.js\"&gt;&lt;\/script&gt;\r\n\t&lt;script src=\"https:\/\/maxcdn.bootstrapcdn.com\/bootstrap\/3.3.7\/js\/bootstrap.min.js\"&gt;&lt;\/script&gt;\r\n&lt;\/head&gt;\r\n&lt;body&gt;\r\n \r\n&lt;div class=\"col-md-12 content\"&gt;\r\n\t&lt;div class = \"inner-box content no-right-margin darkviolet\"&gt;\r\n\t\t&lt;div class = \"response-container\"&gt;&lt;\/div&gt;\r\n\t&lt;\/div&gt;      \r\n&lt;\/div&gt;\r\n\r\n&lt;script type=\"text\/javascript\"&gt;\r\njQuery(document).ready(function($){\r\n\tvar ajaxurl = window.location.href;\r\n\t\r\n\tfunction load_posts(page){\r\n\t\tvar data = {\r\n\t\t\tpage: page\r\n\t\t};\r\n\t\t\r\n\t\t$.post(ajaxurl, data, function(response){\r\n\t\t\t$(\".response-container\").html(response);\r\n\t\t});\r\n\t}\r\n\t\r\n\tload_posts(1);\r\n\t\r\n\t$('body').on('click', '.response-container .pagination li.active', function(){\r\n\t\tvar page = $(this).attr('p');\r\n\t\tload_posts(page);\r\n\t\t\r\n\t});\r\n\t\t\t\t\r\n}); \r\n&lt;\/script&gt;\r\n\r\n&lt;\/body&gt;\r\n&lt;\/html&gt;<\/pre>\r\n&nbsp;","post_title":"Simple PHP Pagination with AJAX","post_excerpt":"Create a simple and light weight AJAX pagination using PHP","post_status":"publish","comment_status":"open","ping_status":"open","post_password":"","post_name":"simple-php-pagination-with-ajax","to_ping":"","pinged":"","post_modified":"2017-11-21 18:59:06","post_modified_gmt":"2017-11-21 10:59:06","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=2061","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":1244,"post_author":"1","post_date":"2015-05-20 11:59:48","post_date_gmt":"2015-05-20 03:59:48","post_content":"If ypu have been following my WordPress Tutorials, I made two posts where I discussed how you can setup a pagination that loads the data from the server using AJAX. In this tutorial we are going to focus on creating a very simple pagination without AJAX and by just relying on PHP and WordPress functions. So let's get started!\r\n\r\n              \r\nThis simple pagination includes buttons for \"Next\", \"Prev\", \"First\", and \"Last\". You can also configure how many number bullets to show on screen. \r\n\r\nHere's the function that will setup the posts in a paginated view:\r\n\r\nComments are included so read on.\r\n\r\n[cc lang = \"php\"]\r\nfunction display_posts_pagination() {\r\n\t\r\n\tglobal $wpdb, $post;\r\n\r\n\t\/\/ Set default variables\r\n\t$pagination_content = '';\r\n\t$current_page_url = get_permalink( $post->ID );\r\n\t$page_number = isset( $_GET[ 'pageno' ] ) ? $_GET[ 'pageno' ] : 1;\r\n\t\r\n\t\/\/ Sanitize the received page   \r\n\t$page = sanitize_text_field( $page_number );\r\n\t$cur_page = $page;\r\n\t$page -= 1;\r\n\t\/\/ Set the number of results to display\r\n\t$per_page = 5;\r\n\t$previous_btn = true;\r\n\t$next_btn = true;\r\n\t$first_btn = true;\r\n\t$last_btn = true;\r\n\t$start = $page * $per_page;\r\n\r\n\t\/\/ Set the table where we will be querying data\r\n\t$table_name = $wpdb->prefix . 'posts';\r\n\r\n\t\/\/ Query the necessary posts\r\n\t$all_blog_posts = $wpdb->get_results( $wpdb->prepare( '\r\n\t\t\tSELECT * FROM ' . $table_name . ' WHERE post_type = \"post\" AND post_status = \"publish\" ORDER BY post_date DESC LIMIT %d, %d', $start, $per_page ) );\r\n\r\n\t\/\/ At the same time, count the number of queried posts\r\n\t$count = $wpdb->get_var( $wpdb->prepare( '\r\n\t\t\tSELECT COUNT(ID) FROM ' . $table_name . ' WHERE post_type = \"post\" AND post_status = \"publish\"', array() ) );\r\n\r\n\t\/**\r\n\t * Use WP_Query:\r\n\t *\r\n\t  $all_blog_posts = new WP_Query(\r\n\t  array(\r\n\t  'post_type'         => 'post',\r\n\t  'post_status '      => 'publish',\r\n\t  'orderby'           => 'post_date',\r\n\t  'order'             => 'DESC',\r\n\t  'posts_per_page'    => $per_page,\r\n\t  'offset'            => $start\r\n\t  )\r\n\t  );\r\n\r\n\t  $count = new WP_Query(\r\n\t  array(\r\n\t  'post_type'         => 'post',\r\n\t  'post_status '      => 'publish',\r\n\t  'posts_per_page'    => -1\r\n\t  )\r\n\t  );\r\n\t *\/\r\n\t \r\n\t\/\/ Loop into all the posts\r\n\tforeach ( $all_blog_posts as $key => $post ):\r\n\r\n\t\t\/\/ Set the desired output into a variable\r\n\t\t$pagination_content .= '\r\n\t\t\t<div class = \"col-md-12\">       \r\n\t\t\t\t<h2><a href=\"' . get_permalink( $post->ID ) . '\">' . $post->post_title . '<\/a><\/h2>\r\n\t\t\t\t<p>' . $post->post_excerpt . '<\/p>\r\n\t\t\t<\/div>';\r\n\r\n\tendforeach;\r\n\r\n\t\/\/ Optional, wrap the output into a container\r\n\t$pagination_content = '<div class=\"cvf-universal-content\">' . $pagination_content . '<\/div><br class = \"clear\" \/>';\r\n\r\n\t\/\/ This is where the magic happens\r\n\t$no_of_paginations = ceil( $count \/ $per_page );\r\n\r\n\tif ( $cur_page >= 7 ) {\r\n\t\t$start_loop = $cur_page - 3;\r\n\t\tif ( $no_of_paginations > $cur_page + 3 )\r\n\t\t\t$end_loop = $cur_page + 3;\r\n\t\telse if ( $cur_page <= $no_of_paginations && $cur_page > $no_of_paginations - 6 ) {\r\n\t\t\t$start_loop = $no_of_paginations - 6;\r\n\t\t\t$end_loop = $no_of_paginations;\r\n\t\t} else {\r\n\t\t\t$end_loop = $no_of_paginations;\r\n\t\t}\r\n\t} else {\r\n\t\t$start_loop = 1;\r\n\t\tif ( $no_of_paginations > 7 )\r\n\t\t\t$end_loop = 7;\r\n\t\telse\r\n\t\t\t$end_loop = $no_of_paginations;\r\n\t}\r\n\r\n\t\/\/ Pagination Buttons logic     \r\n\t$pagination_nav .= '\r\n\t\t<div class=\"pagination-container\">\r\n\t\t\t<ul>';\r\n\r\n\tif ( $first_btn && $cur_page > 1 ) {\r\n\t\t$pagination_nav .= '<li class=\"active\"><a href = \"' . $current_page_url . '?pageno=1\">First<\/a><\/li>';\r\n\t} else if ( $first_btn ) {\r\n\t\t$pagination_nav .= '<li class=\"inactive\">First<\/li>';\r\n\t}\r\n\r\n\tif ( $previous_btn && $cur_page > 1 ) {\r\n\t\t$pre = $cur_page - 1;\r\n\t\t$pagination_nav .= '<li class=\"active\"><a href = \"' . $current_page_url . '?pageno=' . $pre . '\">Previous<\/a><\/li>';\r\n\t} else if ( $previous_btn ) {\r\n\t\t$pagination_nav .= '<li class=\"inactive\">Previous<\/li>';\r\n\t}\r\n\tfor ( $i = $start_loop; $i <= $end_loop; $i ++  ) {\r\n\r\n\t\tif ( $cur_page == $i )\r\n\t\t\t$pagination_nav .= '<li class = \"selected\">' . $i . '<\/li>';\r\n\t\telse\r\n\t\t\t$pagination_nav .= '<li class=\"active\"><a href = \"' . $current_page_url . '?pageno=' . $i . '\">' . $i . '<\/a><\/li>';\r\n\t}\r\n\r\n\tif ( $next_btn && $cur_page < $no_of_paginations ) {\r\n\t\t$nex = $cur_page + 1;\r\n\t\t$pagination_nav .= '<li class=\"active\"><a href = \"' . $current_page_url . '?pageno=' . $nex . '\">Next<\/a><\/li>';\r\n\t} else if ( $next_btn ) {\r\n\t\t$pagination_nav .= '<li class=\"inactive\">Next<\/li>';\r\n\t}\r\n\r\n\tif ( $last_btn && $cur_page < $no_of_paginations ) {\r\n\t\t$pagination_nav .= '<li class=\"active\"><a href = \"' . $current_page_url . '?pageno=' . $no_of_paginations . '\">Last<\/a><\/li>';\r\n\t} else if ( $last_btn ) {\r\n\t\t$pagination_nav .= '<li class=\"inactive\">Last<\/li>';\r\n\t}\r\n\r\n\t$pagination_nav = $pagination_nav . '\r\n\t\t\t<\/ul>\r\n\t\t<\/div>';\r\n\t\r\n\t$output = '\r\n\t\t<div>' . $pagination_content . '<\/div>\r\n\t\t<div>' . $pagination_nav . '<\/div>\r\n\t';\r\n\t\r\n\treturn $output;\r\n}\r\n[\/cc]\r\n\r\nSimply copy the above code into your functions.php\r\n              \r\nThen in your page, simply call the function:\r\n              \r\n[cc lang = \"html\"]              \r\n<div class = \"content\">\r\n\t<?php echo display_posts_pagination(); ?> \r\n<\/div>                  \r\n[\/cc]\r\n              \r\nThe function does not accept any parameters, but feel free to add some as you wish!\r\n              \r\n<h3>Styling<\/h3>\r\n                                          \r\nHere's a ready made style for your navigation buttons: \r\n              \r\n[cc lang = \"css\"]              \r\n.pagination-container  { margin-top: 15px; }\r\n.pagination-container ul { margin: 0; padding: 0; }\r\n.pagination-container ul li { display: inline; background: #FFF; color: black; }\r\n.pagination-container ul li.active a:hover { background: #1E8CBE; color: white; text-decoration: none; }\r\n.pagination-container ul li.inactive { background: #7E7E7E; }\r\n.pagination-container ul li.selected { background: #1E8CBE; color: white; }\r\n.pagination-container ul li a, .pagination-container ul li.inactive, .pagination-container ul li.selected { margin: 3px; padding: 4px 8px; }\r\n[\/cc]              \r\n\r\n              \r\n              \r\n","post_title":"Simple Posts Pagination in WordPress","post_excerpt":"Paginating posts in WordPress","post_status":"publish","comment_status":"open","ping_status":"open","post_password":"","post_name":"simple-posts-pagination-in-wordpress","to_ping":"","pinged":"","post_modified":"2016-01-20 13:21:39","post_modified_gmt":"2016-01-20 05:21:39","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=1244","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":426,"post_author":"1","post_date":"2014-07-29 06:54:46","post_date_gmt":"2014-07-29 06:54:46","post_content":"<a href=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2014\/07\/image-effect1.jpg\"><img src=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2014\/07\/image-effect1.jpg\" alt=\"image-effect1\" width=\"700\" height=\"517\" class=\"alignnone size-full wp-image-427\" \/><\/a>\r\n\r\n<a href = \"http:\/\/www.alessioatzeni.com\/wp-content\/tutorials\/html-css\/CSS3-Hover-Effects\/index.html\" class=  \"btn btn-info\" target = \"_blank\" >Demo<\/a> <a href = \"http:\/\/www.alessioatzeni.com\/wp-content\/tutorials\/html-css\/CSS3-Hover-Effects\/download\/CSS3-Hover-Effects.zip\" class=  \"btn btn-success\" >Download<\/a> <a href = \"http:\/\/www.alessioatzeni.com\/blog\/css3-hover-effects\/\" class=  \"btn btn-warning\" target = \"_blank\">Tutorial<\/a>\r\n","post_title":"Top CSS3 Image Effects","post_excerpt":"A Collection of Image Hover Effects, try them out for free!","post_status":"publish","comment_status":"open","ping_status":"closed","post_password":"","post_name":"top-css3-image-effects","to_ping":"","pinged":"\nhttp:\/\/www.alessioatzeni.com\/blog\/css3-hover-effects\/","post_modified":"2015-02-09 07:18:31","post_modified_gmt":"2015-02-09 07:18:31","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=426","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":853,"post_author":"1","post_date":"2014-11-13 13:16:54","post_date_gmt":"2014-11-13 13:16:54","post_content":"<img class = \"img-thumbnail\" src=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2014\/11\/10648943_852318478114537_5325262576464291533_o.jpg\" alt=\"10648943_852318478114537_5325262576464291533_o\" width=\"100%\" class=\"alignnone size-full wp-image-854\" \/>","post_title":"Understanding SQL Joins","post_excerpt":"A very good graphical representation of SQL Joins","post_status":"publish","comment_status":"open","ping_status":"closed","post_password":"","post_name":"understanding-sql-joins","to_ping":"","pinged":"","post_modified":"2015-02-09 06:29:26","post_modified_gmt":"2015-02-09 06:29:26","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=853","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":1647,"post_author":"1","post_date":"2016-10-22 15:21:41","post_date_gmt":"2016-10-22 07:21:41","post_content":"<img src=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2016\/10\/Heroku-500x211.png\" alt=\"heroku\" width=\"500\" height=\"211\" class=\"alignnone size-medium wp-image-1657\" \/>\r\n\r\n<ol>\r\n \t<li>Navigate to your git repository from your computer<\/li>\r\n \t<li>Open Gemfile then change gem 'sqlite3' to gem 'pg'<\/li>\r\n \t<li>Run the command: \"bundle install\"<\/li>\r\n \t<li>Ensure the config\/database.yml is using the postgresql adapter. by changing all \"sqlite3\" instance to \"postgresql\"<\/li>\r\n \t<li>At the end of Gemfile add:\r\nruby \"2.3.1\"\r\n- or check version using ruby -v<\/li>\r\n \t<li>Login to your heroku account\r\n$ heroku login<\/li>\r\n \t<li>Create a project, CD to where your git project is located in your local computer then type in:\r\n$ heroku create\r\n- prepares Heroku to receive your source code.<\/li>\r\n \t<li>deploy your code by running the command:\r\n$ git push heroku master<\/li>\r\n \t<li>The application is now deployed. Ensure that at least one instance of the app is running:\r\n$ heroku ps:scale web=1<\/li>\r\n \t<li>Run the database migration:\r\n$ heroku run rake db:migrate<\/li>\r\n \t<li>Now visit the app at the URL generated by its app name. As a handy shortcut, you can open the website as follows:\r\nheroku open<\/li>\r\n \t<li>Do mongodb installation, see instructions bellow:<\/li>\r\n<\/ol>\r\n<h3>Installing mongodb Add-on<\/h3>\r\n<ol>\r\n \t<li>Run the command: heroku addons:create mongolab:sandbox<\/li>\r\n \t<li>Run the command bellow to ensure we have MONGO_URI on our heroku config:\r\n$ heroku config\r\nIt shows something like this:\r\n<em>MONGODB_URI: mongodb:\/\/heroku_1c3dj371:6ncboo79ofhq5kg49ugiihe5th@ds035856.mlab.com:35856\/heroku_1c3dj371<\/em><\/li>\r\n \t<li>Add production DB connection in your config\/mongoid.yml:\r\n[cc lang=\"html\"]\r\nproduction:\r\n\tclients:\r\n\t\tdefault:\r\n\t\t\turi: &lt;%= ENV['MONGODB_URI'] %&gt;\r\n\t\toptions:\r\n\t\t\tskip_version_check: true\r\n\t\tsafe: true\r\n[\/cc]\r\n  <\/li>\r\n \t<li>Commit and push your code to heroku.<\/li>\r\n<\/ol>\r\n<h3>To commit a code to Heroku<\/h3>\r\n<ul>\r\n \t<li>Almost every deploy to Heroku follows this same pattern. First, add the modified files to the local git repository:\r\n$ git add .<\/li>\r\n \t<li>Now commit the changes to the repository:\r\n$ git commit -m \"Demo\"<\/li>\r\n \t<li>Now deploy, just as you did previously:\r\n$ git push heroku master<\/li>\r\n \t<li>Finally, check that everything is working:\r\n$ heroku open<\/li>\r\n<\/ul>\r\n<h3>Others Notes<\/h3>\r\n<ol>\r\n \t<li>You can view information about your running app using one of the logging commands in real time using:\r\n$ heroku logs --tail<\/li>\r\n \t<li>If you changed the name of your heroku app from heroku website, you can\r\nperform the following command to update your local git project connection\r\n1. $ git remote rm heroku\r\n2. $ heroku git:remote -a NEW_NAME_OF_YOUR_APP<\/li>\r\n<\/ol>","post_title":"Uploading Rails App with MongoDB to Heroku","post_excerpt":"How to properly upload your Rails application to Heroku that has MongoDB as database. ","post_status":"publish","comment_status":"open","ping_status":"open","post_password":"","post_name":"uploading-rails-app-with-mongodb-to-heroku","to_ping":"","pinged":"","post_modified":"2016-12-25 13:24:09","post_modified_gmt":"2016-12-25 05:24:09","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=1647","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":931,"post_author":"1","post_date":"2014-11-20 11:08:38","post_date_gmt":"2014-11-20 11:08:38","post_content":"Date based archives by default, work only with the default post types, today I am going to show you how to implement date based archives on custom post types.\r\n\r\nYear archive: http:\/\/www.test.com\/2014\/\r\nMonth archive: http:\/\/www.test.com\/2014\/11\/\r\nDay archive: http:\/\/www.test.com\/2014\/30\/14\/\r\nMonth archive, feed: http:\/\/www.test.com\/2014\/10\/feed\/\r\nYear archive, page 2: http:\/\/www.test.com\/2014\/page\/3\/\r\n\r\nWhat we would like to achieve are link structures similar to bellow:\r\n\r\nYear archive: http:\/\/www.test.com\/blog\/2014\/\r\nMonth archive: http:\/\/www.test.com\/blog\/2014\/11\/\r\nDay archive, feed: http:\/\/www.test.com\/blog\/2014\/30\/14\/feed\/\r\nYear archive, page 5: http:\/\/www.test.com\/blog\/2014\/page\/3\/\r\n\r\nThe idea behind the code bellow is: we are simply rewriting URL's to read as <code>http:\/\/www.test.com\/blog\/2014\/<\/code> instead of <code>http:\/\/www.test.com\/2014\/?post-type=blog<\/code>\r\n\r\nCopy this block of code into your functions.php\r\n[cc lang = \"php\"]\r\nadd_action('generate_rewrite_rules', array('NGP_Posts', 'cvf_ngp_blog_datearchives_rewrite_rules') );\r\n\r\nclass NGP_Posts {\r\n\r\n\tpublic static function cvf_ngp_blog_datearchives_rewrite_rules($wp_rewrite) {\r\n\r\n\t\t$rules = self::cvf_ngp_generate_blog_date_archives('blog', $wp_rewrite);\r\n\t\t$wp_rewrite->rules = $rules + $wp_rewrite->rules;\r\n\t\treturn $wp_rewrite;\r\n\t\t\r\n\t}\r\n\r\n\tpublic static function cvf_ngp_generate_blog_date_archives($cpt, $wp_rewrite) {\r\n\r\n\t\t$rules = array();\r\n\r\n\t\t$post_type = get_post_type_object($cpt);\r\n\t\t$slug_archive = $post_type->has_archive;\r\n\t\tif ($slug_archive === false) return $rules;\r\n\t\tif ($slug_archive === true) {\r\n\t\t\t$slug_archive = $post_type->name;\r\n\t\t}\r\n\r\n\t\t$dates = array(\r\n\t\t\tarray(\r\n\t\t\t\t'rule' => \"([0-9]{4})\/([0-9]{1,2})\/([0-9]{1,2})\",\r\n\t\t\t\t'vars' => array('year', 'monthnum', 'day')),\r\n\t\t\tarray(\r\n\t\t\t\t'rule' => \"([0-9]{4})\/([0-9]{1,2})\",\r\n\t\t\t\t'vars' => array('year', 'monthnum')),\r\n\t\t\tarray(\r\n\t\t\t\t'rule' => \"([0-9]{4})\",\r\n\t\t\t\t'vars' => array('year'))\r\n\t\t);\r\n\r\n\t\tforeach ($dates as $data) {\r\n\t\t\t$query = 'index.php?post_type='.$cpt;\r\n\t\t\t$rule = $slug_archive.'\/'.$data['rule'];\r\n\r\n\t\t\t$i = 1;\r\n\t\t\tforeach ($data['vars'] as $var) {\r\n\t\t\t\t$query.= '&'.$var.'='.$wp_rewrite->preg_index($i);\r\n\t\t\t\t$i++;\r\n\t\t\t}\r\n\r\n\t\t\t$rules[$rule.\"\/?$\"] = $query;\r\n\t\t\t$rules[$rule.\"\/feed\/(feed|rdf|rss|rss2|atom)\/?$\"] = $query.\"&feed=\".$wp_rewrite->preg_index($i);\r\n\t\t\t$rules[$rule.\"\/(feed|rdf|rss|rss2|atom)\/?$\"] = $query.\"&feed=\".$wp_rewrite->preg_index($i);\r\n\t\t\t$rules[$rule.\"\/page\/([0-9]{1,})\/?$\"] = $query.\"&paged=\".$wp_rewrite->preg_index($i);\r\n\t\t}\r\n\r\n\t\treturn $rules;\r\n\t\t\r\n\t}\r\n}\r\n\r\n[\/cc]\r\n\r\nDon't forget to refresh your permalinks by setting it to default then back to Post Name.","post_title":"URL Rewriting for Custom Post Types Date Archive","post_excerpt":"Clean URL's for Custom Post Type Archives","post_status":"publish","comment_status":"open","ping_status":"closed","post_password":"","post_name":"931","to_ping":"","pinged":"","post_modified":"2015-02-09 06:24:48","post_modified_gmt":"2015-02-09 06:24:48","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=931","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":411,"post_author":"1","post_date":"2014-07-29 05:50:47","post_date_gmt":"2014-07-29 05:50:47","post_content":"<a href=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2014\/07\/pressit_blog_graphic.jpg\"><img class=\"alignnone size-full wp-image-423\" src=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2014\/07\/pressit_blog_graphic.jpg\" alt=\"pressit_blog_graphic\" width=\"590\" height=\"328\" \/><\/a>\r\n<div class=\"css3-element-effects\">\r\n<h2>2D Transforms<\/h2>\r\n<a class=\"btn btn-primary grow\" href=\"#\">Grow<\/a><a class=\"btn btn-primary shrink\" href=\"#\">Shrink<\/a><a class=\"btn btn-primary pulse\" href=\"#\">Pulse<\/a><a class=\"btn btn-primary pulse-grow\" href=\"#\">Pulse Grow<\/a><a class=\"btn btn-primary pulse-shrink\" href=\"#\">Pulse Shrink<\/a><a class=\"btn btn-primary push\" href=\"#\">Push<\/a><a class=\"btn btn-primary pop\" href=\"#\">Pop<\/a><a class=\"btn btn-primary rotate\" href=\"#\">Rotate<\/a><a class=\"btn btn-primary grow-rotate\" href=\"#\">Grow Rotate<\/a><a class=\"btn btn-primary float\" href=\"#\">Float<\/a><a class=\"btn btn-primary sink\" href=\"#\">Sink<\/a><a class=\"btn btn-primary hover\" href=\"#\">Hover<\/a><a class=\"btn btn-primary hang\" href=\"#\">Hang<\/a><a class=\"btn btn-primary skew\" href=\"#\">Skew<\/a><a class=\"btn btn-primary skew-forward\" href=\"#\">Skew Forward<\/a><a class=\"btn btn-primary skew-backward\" href=\"#\">Skew Backward<\/a><a class=\"btn btn-primary wobble-horizontal\" href=\"#\">Wobble Horizontal<\/a><a class=\"btn btn-primary wobble-vertical\" href=\"#\">Wobble Vertical<\/a><a class=\"btn btn-primary wobble-to-bottom-right\" href=\"#\">Wobble To Bottom Right<\/a><a class=\"btn btn-primary wobble-to-top-right\" href=\"#\">Wobble To Top Right<\/a><a class=\"btn btn-primary wobble-top\" href=\"#\">Wobble Top<\/a><a class=\"btn btn-primary wobble-bottom\" href=\"#\">Wobble Bottom<\/a><a class=\"btn btn-primary wobble-skew\" href=\"#\">Wobble Skew<\/a><a class=\"btn btn-primary buzz\" href=\"#\">Buzz<\/a><a class=\"btn btn-primary buzz-out\" href=\"#\">Buzz Out<\/a>\r\n<h2>Border Transitions<\/h2>\r\n<a class=\"btn btn-warning border-fade\" href=\"#\">Border Fade<\/a><a class=\"btn btn-warning hollow\" href=\"#\">Hollow<\/a><a class=\"btn btn-warning trim\" href=\"#\">Trim<\/a><a class=\"btn btn-warning outline-outward\" href=\"#\">Outline Outward<\/a><a class=\"btn btn-warning outline-inward\" href=\"#\">Outline Inward<\/a><a class=\"btn btn-warning round-corners\" href=\"#\">Round Corners<\/a>\r\n<h2>Shadow and Glow Transitions<\/h2>\r\n<a class=\"btn btn-info glow\" href=\"#\">Glow<\/a><a class=\"btn btn-info box-shadow-outset\" href=\"#\">Box Shadow Outset<\/a><a class=\"btn btn-info box-shadow-inset\" href=\"#\">Box Shadow Inset<\/a><a class=\"btn btn-info float-shadow\" href=\"#\">Float Shadow<\/a><a class=\"btn btn-info hover-shadow\" href=\"#\">Hover Shadow<\/a><a class=\"btn btn-info shadow-radial\" href=\"#\">Shadow Radial<\/a>\r\n<h2>Speech Bubbles<\/h2>\r\n<a class=\"btn btn-success bubble-top\" href=\"#\">Bubble Top<\/a><a class=\"btn btn-success bubble-right\" href=\"#\">Bubble Right<\/a>\r\n<a class=\"btn btn-success bubble-bottom\" href=\"#\">Bubble Bottom<\/a><a class=\"btn btn-success bubble-left\" href=\"#\">Bubble Left<\/a><a class=\"btn btn-success bubble-float-top\" href=\"#\">Bubble Float Top<\/a><a class=\"btn btn-success bubble-float-right\" href=\"#\">Bubble Float Right<\/a><a class=\"btn btn-success bubble-float-bottom\" href=\"#\">Bubble Float Bottom<\/a>\r\n<a class=\"btn btn-success bubble-float-left\" href=\"#\">Bubble Float Left<\/a>\r\n<h2>Curls<\/h2>\r\n<a class=\"btn btn-danger curl-top-left\" href=\"#\">Curl Top Left<\/a><a class=\"btn btn-danger curl-top-right\" href=\"#\">Curl Top Right<\/a><a class=\"btn btn-danger curl-bottom-right\" href=\"#\">Curl Bottom Right<\/a><a class=\"btn btn-danger curl-bottom-left\" href=\"#\">Curl Bottom Left<\/a>\r\n\r\nReference: <a href=\"http:\/\/ianlunn.github.io\/Hover\/\">http:\/\/ianlunn.github.io\/<\/a>\r\n\r\n<a class=\"font-black btn btn-default\" href=\"https:\/\/github.com\/IanLunn\/Hover\/archive\/master.zip\">Download<\/a>\r\n\r\n<\/div>","post_title":"Useful CSS3 Element Effects","post_excerpt":"Apply Hover Effects into any HTML element with these cool CSS3 Animations","post_status":"publish","comment_status":"open","ping_status":"closed","post_password":"","post_name":"useful-css3-element-effects","to_ping":"","pinged":"","post_modified":"2015-02-09 07:19:52","post_modified_gmt":"2015-02-09 07:19:52","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=411","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":1932,"post_author":"1","post_date":"2017-07-14 16:08:41","post_date_gmt":"2017-07-14 08:08:41","post_content":"<img class=\"alignnone size-medium wp-image-1960\" src=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2017\/07\/react-native-with-wordpress-login-500x250.jpg\" alt=\"\" width=\"500\" height=\"250\" \/>\r\n\r\nAfter seeing a lot of requests about this topic on Google, I've decided to make my own tutorial about it. So let's get started!\r\n\r\nOn the <span class=\"lang:default decode:true crayon-inline \">render()<\/span>\u00a0 method of your React Native component, create a Form with input fields for Username and Password.\r\n<pre class=\"lang:default decode:true\">this.state = {\r\n\tvalidating: false\r\n}\r\n\r\nrender() {\r\n\treturn (\r\n\t\t&lt;Container&gt;\r\n\t\t\t&lt;Content&gt;\r\n\t\t\t\t&lt;Form&gt;\r\n\t\t\t\t\t&lt;Item floatingLabel&gt;\r\n\t\t\t\t\t\t&lt;Label&gt;Email&lt;\/Label&gt;\r\n\t\t\t\t\t\t&lt;Input onChangeText={(text) =&gt; this.setState({email:text})} \/&gt;\r\n\t\t\t\t\t&lt;\/Item&gt;\r\n\t\t\t\t\t&lt;Item floatingLabel last&gt;\r\n\t\t\t\t\t\t&lt;Label&gt;Password&lt;\/Label&gt;\r\n\t\t\t\t\t\t&lt;Input secureTextEntry onChangeText={(text) =&gt; this.setState({password:text})} \/&gt;\r\n\t\t\t\t\t&lt;\/Item&gt;\r\n\t\t\t\t\t&lt;Button block success style={{ marginTop: 50 }} onPress={() =&gt; {\r\n\t\t\t\t\t\tif( this.state.email &amp;&amp; this.state.password ){\r\n\t\t\t\t\t\t\tthis.validate();\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}} &gt;\r\n\t\t\t\t\t\t&lt;Text&gt;Authenticate&lt;\/Text&gt;\r\n\t\t\t\t\t&lt;\/Button&gt;\r\n\t\t\t\t&lt;\/Form&gt;\r\n\t\t\t&lt;\/Content&gt;\r\n\t\t&lt;\/Container&gt;\r\n\t)\r\n}<\/pre>\r\nThen on form submit, the data gets POSTed to a WordPress API server where we check if credentials are correct and throw an error if incorrect, if the credentials are correct \u2013 we generate a token which is just a combination of strings and numbers (your choice). This token will then be stored in the wp_usermeta table, which you can use later on to do checks every time a user will access your mobile app.\r\n\r\nLogin to your server via your favorite FTP program and then from the root directory of WordPress, create a PHP file: \u201cauthentication.php\u201d then add the following code:\r\n<pre class=\"lang:php decode:true\">&lt;?php \r\n\r\nrequire_once('wp-load.php');\r\n\r\n$response = array(\r\n\t'data'\t\t=&gt; array(),\r\n\t'msg'\t\t=&gt; 'Invalid email or password',\r\n\t'status'\t=&gt; false\r\n);\r\n\r\n\/* Sanitize all received posts *\/\r\nforeach($_POST as $k =&gt; $value){\r\n\t$_POST[$k] = sanitize_text_field($value);\r\n}\r\n\r\n\/**\r\n * Login Method\r\n *\r\n *\/\r\nif( isset( $_POST['type'] ) &amp;&amp;  $_POST['type'] == 'login' ){\r\n\r\n\t\/* Get user data *\/\r\n\t$user = get_user_by( 'email', $_POST['email'] );\r\n\t\r\n\tif ( $user ){\r\n\t\t$password_check = wp_check_password( $_POST['password'], $user-&gt;user_pass, $user-&gt;ID );\r\n\t\r\n\t\tif ( $password_check ){\r\n\t\t\t\/* Generate a unique auth token *\/\r\n\t\t\t$token = MY_RANDOM_CODE_GENERATOR( 30 );\r\n\r\n\t\t\t\/* Store \/ Update auth token in the database *\/\r\n\t\t\tif( update_user_meta( $user-&gt;ID, 'auth_token', $token ) ){\r\n\t\t\t\t\r\n\t\t\t\t\/* Return generated token and user ID*\/\r\n\t\t\t\t$response['status'] = true;\r\n\t\t\t\t$response['data'] = array(\r\n\t\t\t\t\t'auth_token' \t=&gt;\t$token,\r\n\t\t\t\t\t'user_id'\t\t=&gt;\t$user-&gt;ID,\r\n\t\t\t\t\t'user_login'\t=&gt;\t$user-&gt;user_login\r\n\t\t\t\t);\r\n\t\t\t\t$response['msg'] = 'Successfully Authenticated';\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}<\/pre>\r\nSo now that we have a token, we pass it back to our mobile app as a response. Our mobile app should then be able to receive and store the token (and any other data you want to include) into our mobile device storage via <span class=\"lang:default decode:true crayon-inline \">AsyncStorage<\/span>\u00a0, this way, every time the user opens your mobile app, our application will just check the storage if it has a currently logged-in user (Persistent Login).\r\n<pre class=\"lang:default decode:true\">validate(){\r\n\tthis.setState({ validating: true });\r\n\r\n\tlet formData = new FormData();\r\n\tformData.append('type', 'login');\r\n\tformData.append('email', this.state.email);\r\n\tformData.append('password', this.state.password);\r\n\r\n\treturn fetch('http:\/\/mysite.com\/authentication.php', {\r\n\t\tmethod: 'POST',\r\n\t\tbody: formData\r\n\t})\r\n\t\t.then((response) =&gt; response.json())\r\n\t\t.then((responseJson) =&gt; {\r\n\t\t\tlet data = responseJson.data;\r\n\r\n\t\t\tif (this.saveToStorage(data)){\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tvalidating: false\r\n\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\/* Redirect to accounts page *\/\r\n\t\t\t\tActions.pageAccount();\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log('Failed to store auth');\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch((error) =&gt; {\r\n\t\t\tconsole.error(error);\r\n\t\t});\r\n}<\/pre>\r\nThe <strong>saveToStorage<\/strong>() method:\r\n<pre class=\"lang:default decode:true \">async saveToStorage(userData){\r\n\tif (userData) {\r\n\t\tawait AsyncStorage.setItem('user', JSON.stringify({\r\n\t\t\t\tisLoggedIn: true,\r\n\t\t\t\tauthToken: userData.auth_token,\r\n\t\t\t\tid: userData.user_id,\r\n\t\t\t\tname: userData.user_login\r\n\t\t\t})\r\n\t\t);\r\n\t\treturn true;\r\n\t}\r\n\r\n\treturn false;\r\n}<\/pre>\r\nFull Code:\r\n<pre class=\"lang:default decode:true\">import React, { Component } from 'react';\r\nimport { AsyncStorage } from 'react-native';\r\nimport { Container, Content, Button, Text, Form, Item, Input, Label } from 'native-base';\r\n\r\nexport default class Login  extends Component {\r\n\r\n\tthis.state = {\r\n\t\tvalidating: false\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t&lt;Container&gt;\r\n\t\t\t\t&lt;Content&gt;\r\n\t\t\t\t\t&lt;Form&gt;\r\n\t\t\t\t\t\t&lt;Item floatingLabel&gt;\r\n\t\t\t\t\t\t\t&lt;Label&gt;Email&lt;\/Label&gt;\r\n\t\t\t\t\t\t\t&lt;Input onChangeText={(text) =&gt; this.setState({email:text})} \/&gt;\r\n\t\t\t\t\t\t&lt;\/Item&gt;\r\n\t\t\t\t\t\t&lt;Item floatingLabel last&gt;\r\n\t\t\t\t\t\t\t&lt;Label&gt;Password&lt;\/Label&gt;\r\n\t\t\t\t\t\t\t&lt;Input secureTextEntry onChangeText={(text) =&gt; this.setState({password:text})} \/&gt;\r\n\t\t\t\t\t\t&lt;\/Item&gt;\r\n\t\t\t\t\t\t&lt;Button block success style={{ marginTop: 50 }} onPress={() =&gt; {\r\n\t\t\t\t\t\t\tif( this.state.email &amp;&amp; this.state.password ){\r\n\t\t\t\t\t\t\t\tthis.validate();\r\n\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}} &gt;\r\n\t\t\t\t\t\t\t&lt;Text&gt;Authenticate&lt;\/Text&gt;\r\n\t\t\t\t\t\t&lt;\/Button&gt;\r\n\t\t\t\t\t&lt;\/Form&gt;\r\n\t\t\t\t&lt;\/Content&gt;\r\n\t\t\t&lt;\/Container&gt;\r\n\t\t)\r\n\t}\r\n\r\n\tvalidate(){\r\n\t\tthis.setState({ validating: true });\r\n\r\n\t\tlet formData = new FormData();\r\n\t\tformData.append('type', 'login');\r\n\t\tformData.append('email', this.state.email);\r\n\t\tformData.append('password', this.state.password);\r\n\r\n\t\treturn fetch('http:\/\/mysite.com\/authentication.php', {\r\n\t\t\tmethod: 'POST',\r\n\t\t\tbody: formData\r\n\t\t})\r\n\t\t\t.then((response) =&gt; response.json())\r\n\t\t\t.then((responseJson) =&gt; {\r\n\t\t\t\tlet data = responseJson.data;\r\n\r\n\t\t\t\tif (this.saveToStorage(data)){\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tvalidating: false\r\n\t\t\t\t\t});\r\n\t\t\t\t\t\r\n\t\t\t\t\t\/* Redirect to accounts page *\/\r\n\t\t\t\t\tActions.pageAccount();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.log('Failed to store auth');\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((error) =&gt; {\r\n\t\t\t\tconsole.error(error);\r\n\t\t\t});\r\n\t}\r\n\r\n\t\/**\r\n\t * Store auth credentials to device.\r\n\t *\r\n\t *\/\r\n\tasync saveToStorage(userData){\r\n\t\tif (userData) {\r\n\t\t\tawait AsyncStorage.setItem('user', JSON.stringify({\r\n\t\t\t\t\tisLoggedIn: true,\r\n\t\t\t\t\tauthToken: userData.auth_token,\r\n\t\t\t\t\tid: userData.user_id,\r\n\t\t\t\t\tname: userData.user_login\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n}\r\n<\/pre>\r\nThen we can provide a logout button which basically clears the storage and notifies the server to clear the token associated with the currently logged-in user.\r\n\r\nHere is how you would implement the logout method:\r\n<pre class=\"lang:default decode:true \">async logout(){\r\n\tawait AsyncStorage.removeItem('user');\r\n\t\r\n\t\/\/ Add a method that will delete user_meta token of the user from the server. \r\n\t\/\/ await deleteUserMetaToken(PARAM_USER_ID); \r\n\t\r\n\t\/* Redirect to the login page *\/\r\n\tActions.pageLogin();\r\n}<\/pre>\r\n&nbsp;","post_title":"User Login With Wordpress using React Native","post_excerpt":"","post_status":"publish","comment_status":"open","ping_status":"open","post_password":"","post_name":"user-login-with-wordpress-using-react-native","to_ping":"","pinged":"","post_modified":"2017-07-23 22:52:28","post_modified_gmt":"2017-07-23 14:52:28","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=1932","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":1671,"post_author":"1","post_date":"2016-11-09 11:33:04","post_date_gmt":"2016-11-09 03:33:04","post_content":"When I first started developing mobile applications with Meteor, I struggled a little bit trying to figure out how to integrate Angular Material to my application. After some extensive research, I was finally able to integrate Angular Material. The steps bellow worked for me \r\n<ol>\r\n \t<li>Create a meteor app:\r\n<ul>\r\n \t<li>$ meteor create my-simple-app<\/li>\r\n<\/ul>\r\n<\/li>\r\n \t<li>Navigate to the project:\r\n<ul>\r\n \t<li><span class=\"hljs-built_in\">$ cd<\/span> my-simple-app<\/li>\r\n<\/ul>\r\n<\/li>\r\n \t<li>Install node modules:\r\n<ul>\r\n \t<li>$ meteor npm install<\/li>\r\n<\/ul>\r\n<\/li>\r\n \t<li>Check if project is working by running:\r\n<ul>\r\n \t<li>$ meteor<\/li>\r\n \t<li>View project on browser: <a href=\"http:\/\/localhost:3000\">http:\/\/localhost:3000<\/a><\/li>\r\n<\/ul>\r\n<\/li>\r\n \t<li>To use Angular in our app, we first need to remove the default UI package of Meteor, called <strong>Blaze<\/strong>. We remove it by running:\r\n<ul>\r\n \t<li><span class=\"hljs-title\">$ meteor<\/span> remove blaze-html-templates<\/li>\r\n<\/ul>\r\n<\/li>\r\n \t<li>Now we need to replace it with UI package for angular:\r\n<ul>\r\n \t<li><span class=\"hljs-title\">$ meteor<\/span> add angular-templates<\/li>\r\n<\/ul>\r\n<\/li>\r\n<li>Update the code in file <strong>client\/main.html<\/strong>\r\n[cc lang=\"html\"]\r\n<head>\r\n\t<title>My Simple App<\/title>\r\n<\/head>\r\n<body>\r\n\t<div class=\"container\" ng-app=\"my-simple-app\">\r\n\t\t\/* Your angular material code goes in here *\/\r\n\t<\/div>\r\n<\/body>\r\n[\/cc]\r\n<\/li>\r\n<li>Update the code in file <strong>client\/main.html<\/strong>\r\n[cc lang=\"javascript\"]\r\nimport angular from 'angular';\r\nimport angularMeteor from 'angular-meteor';\r\n \r\nangular.module('my-simple-app', [\r\n\tangularMeteor\r\n]);\r\n[\/cc]\r\n<\/li>\r\n<li>Before we can Install angular-material, we need to install its dependencies first:\r\n<ul>\r\n \t<li>$ meteor npm install angular-aria --save<\/li>\r\n \t<li>$ meteor npm install angular-animate --save<\/li>\r\n<\/ul>\r\n<\/li>\r\n<li>Then we now install Angular Material\r\n<ul>\r\n \t<li>$ meteor npm install angular-material --save<\/li>\r\n<\/ul>\r\n<\/li>\r\n<li>In <strong>client\/main.html<\/strong>, we include angular-meteor CSS within the head tag\r\n[cc lang =\"php\"]\r\n<head>\r\n\t<title>My Simple App<\/title>\r\n\t<link rel=\"stylesheet\" href=\"http:\/\/ajax.googleapis.com\/ajax\/libs\/angular_material\/1.1.0\/angular-material.min.css\">\r\n<\/head>\r\n[\/cc]\r\n<\/li>\r\n<li>Next, we want to inject the angular-material module into our Angular application. Update <strong>client\/main.js<\/strong> code to:\r\n[cc lang=\"javascript\"]\r\nimport angular from 'angular';\r\nimport angularMeteor from 'angular-meteor';\r\nimport ngMaterial from 'angular-material';\r\n\r\nangular.module('myApp', [\r\n\tangularMeteor,\r\n\tngMaterial\r\n]);\r\n[\/cc]\r\n<\/li>\r\n<li>That's it, now we can use angular-material in our application layout.<\/li>\r\n  <\/li>\r\n<\/ol>","post_title":"Using Angular Material with Meteor","post_excerpt":"How to integrate Angular Material to your Meteor Application","post_status":"publish","comment_status":"open","ping_status":"open","post_password":"","post_name":"using-angular-material-with-meteor","to_ping":"","pinged":"","post_modified":"2016-11-09 12:03:23","post_modified_gmt":"2016-11-09 04:03:23","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=1671","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":1308,"post_author":"1","post_date":"2016-04-28 22:37:38","post_date_gmt":"2016-04-28 14:37:38","post_content":"Over the past decade, web applications have evolved to make heavy use of JavaScript in order to dynamically load content into web pages. One of the big challenges that developers face when creating these applications is preserving an accurate and useful browser history. Without this many of a browsers most used features, like the back and forward buttons, will not work as expected.\r\n\r\n<h3>Aim<\/h3>\r\n<ul>\r\n  <li>To store a history of every dynamically loaded pages.<\/li>\r\n<li>To load dynamic contents base on the URL inputted \/ pasted directly into the brower's URL bar.<\/li>\r\n<li>To make the browser's forward and backward buttons work.<\/li>\r\n<li>To enable sharing of URLs or use them to create links from any HTML document.<\/li>\r\n<\/ul>\r\n\r\n\r\nHistory.JS currently supports a lot of JavaScript libraries, but for this example I will only be demonstrating how to use the jQuery version of History.JS in working with dynamic contents.\r\n\r\n<a href = \"http:\/\/carlofontanos.com\/demo\/history-js\" class = \"btn btn-success\" target = \"_blank\">Demo<\/a> <span id=\"page-has-downlodable-file\" file=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2016\/04\/history-js.zip\"><\/span>\r\n\r\n<h3>Logs<\/h3> \r\n<p>Using History.Log() we can check the data stored to the history of our browser in object representation.<\/p>\r\n<img src=  \"http:\/\/carlofontanos.com\/wp-content\/uploads\/2016\/04\/history-js-logs-on-console.jpg\" class = \"img=responsive\" \/>\r\n\r\n<h3>Source Code<\/h3>\r\n[cc lang = \"javascript\"]\r\n<!DOCTYPE html>\r\n<html>\r\n<head>\r\n\t<meta http-equiv=\"content-type\" content=\"text\/html; charset=UTF-8\">\r\n\r\n\t<script src=\"https:\/\/ajax.googleapis.com\/ajax\/libs\/jquery\/1.12.0\/jquery.min.js\"><\/script>\r\n\t<script type=\"text\/javascript\" src=\"js\/jquery.history.js\"><\/script>\r\n\t\r\n\t<link rel=\"stylesheet\" href=\"http:\/\/maxcdn.bootstrapcdn.com\/bootstrap\/3.3.6\/css\/bootstrap.min.css\">\r\n\t<script src=\"https:\/\/ajax.googleapis.com\/ajax\/libs\/jquery\/1.12.0\/jquery.min.js\"><\/script>\r\n\t<script src=\"http:\/\/maxcdn.bootstrapcdn.com\/bootstrap\/3.3.6\/js\/bootstrap.min.js\"><\/script>\r\n\t\t  \r\n<\/head>\r\n<body>\r\n\t<br \/>\r\n\t<div class = \"container\">\r\n\t\t<nav class=\"navbar navbar-default\">\r\n\t\t\t<div id=\"navbar\" class=\"navbar-collapse collapse\">\r\n\t\t\t\t<ul class=\"nav navbar-nav\">\r\n\t\t\t\t\t<li><a href=\"home\">Home<\/a><\/li>\r\n\t\t\t\t\t<li><a href=\"about\">About<\/a><\/li>\r\n\t\t\t\t\t<li><a href=\"contact\">Contact<\/a><\/li>\t\t\r\n\t\t\t\t<\/ul>\t\r\n\t\t\t<\/div>\r\n\t\t<\/nav>\r\n\t\t<div class = \"content\"><\/div>\r\n\t<\/div>\r\n<\/body>\r\n\r\n<script type='text\/javascript'>\r\n$(function(){\r\n\t\r\n\tvar History = window.History;\r\n\t\r\n\tif (History.enabled) {\r\n\t\tvar page = get_url_value('page');\r\n\t\tvar path = page ? page : 'home';\r\n\t\t\/\/ Load the page\r\n\t\tload_page_content(path);\r\n\t} else {\r\n\t\treturn false;\r\n\t}\r\n\r\n\t\/\/ Content update and back\/forward button handler\r\n\tHistory.Adapter.bind(window, 'statechange', function() {\r\n\t\tvar State = History.getState();\t\r\n\t\t\/\/ Do ajax\r\n\t\tload_page_content(State.data.path);\r\n\t\t\/\/ Log the history object to your browser's console\r\n\t\tHistory.log(State);\r\n\t});\r\n\r\n\t\/\/ Navigation link handler\r\n\t$('body').on('click', 'nav a', function(e) {\r\n\t\te.preventDefault();\r\n\t\t\r\n\t\tvar urlPath = $(this).attr('href');\r\n\t\tvar title = $(this).text();\t\r\n\t\t\r\n\t\tHistory.pushState({path: urlPath}, title, '.\/?page=' + urlPath); \/\/ When we do this, History.Adapter will also execute its contents. \t\t\r\n\t});\r\n\t\r\n\tfunction load_page_content(page) {\r\n\t\t$.ajax({  \r\n\t\t\ttype: 'post',\r\n\t\t\turl: page + '.html',\r\n\t\t\tdata: {},\t\t\t\t\t\t\r\n\t\t\tsuccess: function(response) {\r\n\t\t\t\t$('.content').html(response);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t\r\n\tfunction get_url_value(variable) {\r\n\t   var query = window.location.search.substring(1);\r\n\t   var vars = query.split(\"&\");\r\n\t   for (var i=0;i<vars.length;i++) {\r\n\t\t\t   var pair = vars[i].split(\"=\");\r\n\t\t\t   if(pair[0] == variable){return pair[1];}\r\n\t   }\r\n\t   return(false);\r\n    }\r\n});\r\n\r\n<\/script>\r\n<\/html>\r\n[\/cc]\r\n\r\n\r\n","post_title":"Using History.js with AJAX","post_excerpt":"Simple example on how to make History.JS work with dynamically loaded pages.","post_status":"publish","comment_status":"open","ping_status":"open","post_password":"","post_name":"using-history-js-with-ajax","to_ping":"","pinged":"","post_modified":"2017-09-19 15:06:49","post_modified_gmt":"2017-09-19 07:06:49","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=1308","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"1","filter":"raw"},{"ID":710,"post_author":"1","post_date":"2014-09-12 13:26:59","post_date_gmt":"2014-09-12 13:26:59","post_content":"The code bellow will output the same way it's outputted in Procedural Approach. \r\n\r\n[cc lang = \"php\"]\r\n\r\nadd_action('admin_menu', array('Ad_Admin', 'cvf_register_site_options') );\r\n\r\nclass My_Admin {\r\n\t\r\n\tpublic function __construct() {\r\n\t\t\r\n\t}\r\n\t\r\n\tpublic static function cvf_register_site_options() {\r\n\t\tadd_submenu_page( 'tools.php', 'Custom Submenu', 'Custom Submenu', 'administrator', 'custom-submenu', 'My_Admin::custom_submenu' );\r\n\t}\r\n\t\r\n\tpublic static function custom_submenu(){\r\n\t\techo 'Test';\r\n\t}\r\n\t\r\n}\r\n[\/cc]\r\n\r\nNotice how we use My_Admin::custom_submenu to access the static function custom_submenu(). It's important we declare our outputting function as static so we could access it using the scope resolution operator.","post_title":"Using Object-Oriented Approach in Building Wordpress Admin Menus","post_excerpt":"Coding in WordPress Admin using Object Oriented Programming","post_status":"publish","comment_status":"open","ping_status":"closed","post_password":"","post_name":"using-object-oriented-approach-in-building-wordpress-admin-menus","to_ping":"","pinged":"","post_modified":"2015-02-09 06:44:40","post_modified_gmt":"2015-02-09 06:44:40","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=710","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":617,"post_author":"1","post_date":"2014-08-18 13:21:51","post_date_gmt":"2014-08-18 13:21:51","post_content":"<img src=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2014\/08\/phpass.fw_.png\" alt=\"phpass.fw\" width=\"400\" height=\"295\" class=\"alignnone size-full wp-image-629\" \/\r\n\r\nPasswords are one of those vulnerabilities, and users expect that your system will securely encrypt them so that prying eyes can stay shut. A while back I decided that I wanted to learn more about proper password encryption, and so I came across Phpass: a framework aimed at simplifying the process for encrypting or \u201chashing\u201d passwords. Phpass has been integrated into many well-known CMS\u2019s such as WordPress, Vanilla, phpBB, and Drupal, and is a huge reason for why I trust this framework.\r\n\r\n<em>phpass (pronounced \"pH pass\") is a portable public domain password hashing framework for use in PHP applications.<\/em>\r\n\r\n<strong>How to use? <\/strong>\r\n\r\nFirst step - Download the phpass Library <a href=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2014\/08\/class-phpass.rar\" class = \"btn btn-primary\">Download<\/a>\r\n\r\nSecond is to include the phpass library into our code.\r\n[cc lang = \"php\"]require_once ('class-phpass.php');[\/cc]\r\n\r\nthen we instantiate the class\r\n[cc lang = \"php\"]$wp_hasher = new PasswordHash(8, TRUE);[\/cc]\r\n\r\n<em>PasswordHash<\/em> class adds salt to the password and hashes it with 8 passes of MD5. MD5 is used by default because it's supported on all platforms.\r\n\r\nTo generate a password you can do this:\r\n[cc lang = \"php\"] echo $wp_hasher->HashPassword('test'); [\/cc]\r\n\r\nComparing plain password and hashed password:\r\n[cc lang = \"php\"]\r\n$password_hashed = '$P$B55D6LjfHDkINU5wF.v2BuuzO0\/XPk\/';\r\n$plain_password = 'test';\r\n\r\nif($wp_hasher->CheckPassword($plain_password, $password_hashed)) {\r\n    echo \"YES, Matched\";\r\n} else {\r\n    echo \"No, Wrong Password\";\r\n}\r\n[\/cc]","post_title":"Using PHPass in your Web Applications","post_excerpt":"Hash your password securely using the PHPass framework.","post_status":"publish","comment_status":"open","ping_status":"closed","post_password":"","post_name":"using-phpass-in-your-web-applications","to_ping":"","pinged":"","post_modified":"2015-02-09 06:58:40","post_modified_gmt":"2015-02-09 06:58:40","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=617","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":992,"post_author":"1","post_date":"2014-12-08 07:11:16","post_date_gmt":"2014-12-08 07:11:16","post_content":"Before we start integrating PHPass in your CodeIgniter Project, download the file bellow: \r\n\r\n<a href=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2014\/12\/phppass.rar\" class = \"btn btn-primary\">Download PHPass<\/a>\r\n\r\nThen upload the phpass folder in your \"application\/libraries\" directory.\r\n\r\n<h3>Integration<\/h3>\r\n\r\nGo to application\/config\/autoload.php then locate the code:\r\n<code>$autoload['libraries'] = array();<\/code>\r\n\r\nThen add the phpass library so that it gets autoloaded every time CodeIgniter is accessed.\r\n<code>$autoload['libraries'] = array('phppass\/passwordhash');<\/code>\r\n\r\nIf you do not want to autoload PHPass then you can construct the library in your Model or Controller like this:\r\n<code>$this->load->library('phppass\/passwordhash');<\/code>\r\n\r\n<h3>Using the Library<\/h3>\r\n\r\nPasswordHash class adds salt to the password and hashes it with 8 passes of MD5. MD5 is used by default because it\u2019s supported on all platforms.\r\n\r\nTo generate a password you can do this:\r\n<code>echo $this->passwordhash->HashPassword('test');<\/code>\r\n\r\nComparing plain password and hashed password:\r\n<code>\r\n$password_hashed = '$P$B55D6LjfHDkINU5wF.v2BuuzO0\/XPk\/';\r\n$plain_password = 'test';\r\n\r\nif($this->passwordhash->CheckPassword($plain_password, $password_hashed)) {\r\n    echo \"YES, Matched\";\r\n} else {\r\n    echo \"No, Wrong Password\";\r\n}\r\n<\/code>","post_title":"Using PHPass Library in CodeIgniter","post_excerpt":"Best Password Hasher based in MD5","post_status":"publish","comment_status":"open","ping_status":"closed","post_password":"","post_name":"using-phpass-library-in-codeigniter","to_ping":"","pinged":"","post_modified":"2015-02-09 06:00:15","post_modified_gmt":"2015-02-09 06:00:15","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=992","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":1133,"post_author":"1","post_date":"2015-06-24 06:06:14","post_date_gmt":"2015-06-24 06:06:14","post_content":"REPLACE takes in three strings as arguments and returns a string as a result.\r\n\r\n<code>REPLACE(item1, item2, item3)<\/code>\r\n\r\nitem1 is our original string. item2 is the subtring we want replaced. item2 is the string that will replace item2 is the resultant string. This resultant string is represented by the REPLACE function itself. The following example shows how the REPLACE function works.\r\n\r\nLet's say you have thousands of posts that contain your site's link, ex: http:\/\/example.com and you want to change it to a sub-domain link, ex: http:\/\/sub.example.com, the SQL command bellow will do exactly what we want to achieve:\r\n\r\n<code>\r\nUPDATE posts_table SET content = replace(content, 'http:\/\/example.com', 'http:\/\/sub.example.com') WHERE content LIKE '%http:\/\/sub.example.com%';\r\n<\/code>\r\n\r\n<strong>posts_table<\/strong> - Name of the table that contains all your posts \r\n<strong>content<\/strong> - Column name that contains the contents of your posts","post_title":"Using REPLACE in an UPDATE statement","post_excerpt":"This tutorials demonstrate the use of REPLACE  with UPDATE function to selectively replace text inside a string in SQL Server","post_status":"publish","comment_status":"open","ping_status":"open","post_password":"","post_name":"using-replace-in-an-update-statement","to_ping":"","pinged":"","post_modified":"2015-06-24 06:13:56","post_modified_gmt":"2015-06-24 06:13:56","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=1133","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":1167,"post_author":"1","post_date":"2015-09-02 03:59:42","post_date_gmt":"2015-09-02 03:59:42","post_content":"I posted a tutorial a year ago about creating an <a href = \"http:\/\/carlofontanos.com\/wordpress-frontend-ajax-pagination\/\" target = \"_blank\">AJAX Pagination in your WordPress front-end<\/a>, in this tutorial I would like to show how you can integrate a Search Filter and Sorting functionality. This tutorial also covers how you can go back to previous page state (pagination number and applied sorting filter) after visiting a post then clicking the back button in your browser.\r\n\r\n<a href=\"http:\/\/carlofontanos.com\/search-tutorials\/\" target = \"_blank\"><img src=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2015\/09\/wordpress-front-end-ajax-pagination-with-search-and-sort-screenshot.jpg\" alt=\"wordpress-front-end-ajax-pagination-with-search-and-sort-screenshot\" \/><\/a>\r\n<a href = \"http:\/\/carlofontanos.com\/search-tutorials\/\" class = \"btn btn-warning\" target = \"_blank\">Demo<\/a>\r\n\r\n<strong>Step 1<\/strong>: Create a custom page in WordPress\r\n<ul>\r\n\t<li>Go to your Dashboard &gt; Pages &gt; Add New<\/li>\r\n\t<li>Name the page anything you want, ex: My Posts<\/li>\r\n\t<li>In your Dashboard &gt; Settings &gt; Permalinks, make sure <strong>Common Settings<\/strong> is\u00a0set to <strong>Post Name<\/strong><\/li>\r\n\t<li>In your newly created page, copy the page slag: if you used \"My Posts\" as your page name, the slag would be <strong>my-posts<\/strong><\/li>\r\n\t<li>In your WordPress theme create a file called page-<strong>my-posts<\/strong>.php \u00a0Notice how we attached the slag to the \"<strong>page-<\/strong>\", this will allow us to add custom scripts that will only apply to this specific page.<\/li>\r\n\t<li>Go to your browser and navigate to your new page. ex. http:\/\/example.com\/<strong>my-posts <\/strong>It should show you a <strong>blank white page<\/strong>, if not then you did something incorrectly.<\/li>\r\n<\/ul>\r\n<strong>Step 2<\/strong>: Working on our page\r\n<ul>\t\r\n\t<li>Open the new page and paste the following code template:<\/li>\r\n<\/ul>\r\n\r\n[cc lang = \"javascript\"]\r\n<?php get_header(); ?>\r\n\t<div class  =\"col-md-12 content\">\r\n\t\t<div class = \"content\">\r\n\t\t\t<form class = \"post-list\">\r\n\t\t\t\t<input type = \"hidden\" value = \"\" \/>\r\n\t\t\t<\/form>\r\n\t\t\t<?php if ( have_posts() ) while ( have_posts() ) : the_post(); ?>\r\n\t\t\t\t<article id=\"post-<?php the_ID(); ?>\" <?php post_class(); ?>>\r\n\t\t\t\t\t<h1 class=\"entry-title\"><?php the_title(); ?><\/h1>\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t<hr \/>\r\n\t\t\t\t\t<article class=\"entry-content clear\">\r\n\t\t\t\t\t\t<?php the_content(); ?>\r\n\t\t\t\t\t<\/article>\r\n\t\t\t\t<\/article>\r\n\t\t\t<?php endwhile; ?>\t\r\n\t\t\t\r\n\t\t\t<article class=\"navbar-form navbar-left\">\r\n\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t<input type=\"text\" class=\"form-control post_search_text\" placeholder=\"Enter a keyword\">\r\n\t\t\t\t<\/div>\r\n\t\t\t\t<input type = \"submit\" value = \"Search\" class = \"btn btn-success post_search_submit\" \/>\r\n\t\t\t<\/article>\r\n\t\t\t\r\n\t\t\t<br class = \"clear\" \/>\r\n\t\t\t\r\n\t\t\t<script type=\"text\/javascript\">\r\n\t\t\tvar ajaxurl = '<?php echo admin_url('admin-ajax.php'); ?>';\r\n\t\t\t\r\n\t\t\tfunction cvf_load_all_posts(page, th_name, th_sort){\r\n\t\t\t\t$(\".cvf_universal_container\").html('<p><img src = \"<?php bloginfo('template_url'); ?>\/images\/loading.gif\" class = \"loader\" \/><\/p>');\r\n\t\t\t\t\r\n\t\t\t\tvar post_data = {\r\n\t\t\t\t\tpage: page,\r\n\t\t\t\t\tsearch: $('.post_search_text').val(),\r\n\t\t\t\t\tth_name: th_name,\r\n\t\t\t\t\tth_sort: th_sort\r\n\t\t\t\t};\r\n\t\t\t\t\r\n\t\t\t\t$('form.post-list input').val(JSON.stringify(post_data));\r\n\t\t\t\t\r\n\t\t\t\tvar data = {\r\n\t\t\t\t\taction: \"demo_load_my_posts\",\r\n\t\t\t\t\tdata: JSON.parse($('form.post-list input').val())\r\n\t\t\t\t};\r\n\t\t\t\t\r\n\t\t\t\t$.post(ajaxurl, data, function(response) {\r\n\t\t\t\t\tif($(\".cvf_universal_container\").html(response)){\r\n\t\t\t\t\t\t$('.table-post-list th').each(function() {\r\n\t\t\t\t\t\t\t\/\/ Append the button indicator\r\n\t\t\t\t\t\t\t$(this).find('span.glyphicon').remove();\t\r\n\t\t\t\t\t\t\tif($(this).hasClass('active')){\r\n\t\t\t\t\t\t\t\tif(JSON.parse($('form.post-list input').val()).th_sort == 'DESC'){\r\n\t\t\t\t\t\t\t\t\t$(this).append(' <span class=\"glyphicon glyphicon-chevron-down\"><\/span>');\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t$(this).append(' <span class=\"glyphicon glyphicon-chevron-up\"><\/span>');\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t} \r\n\t\t\t\r\n\t\t\tjQuery(document).ready(function($) {\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\/\/ Initialize default item to sort and it's sort order\r\n\t\t\t\t\r\n\t\t\t\t\/\/ Check if our hidden form input is not empty, meaning it's not the first time viewing the page.\r\n\t\t\t\tif($('form.post-list input').val()){\r\n\t\t\t\t\t\/\/ Submit hidden form input value to load previous page number\r\n\t\t\t\t\tdata = JSON.parse($('form.post-list input').val());\r\n\t\t\t\t\tcvf_load_all_posts(data.page, data.th_name, data.th_sort);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t\/\/ Load first page\r\n\t\t\t\t\tcvf_load_all_posts(1, 'post_title', 'ASC');\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tvar th_active = $('.table-post-list th.active');\r\n\t\t\t\tvar th_name = $(th_active).attr('id');\r\n\t\t\t\tvar th_sort = $(th_active).hasClass('DESC') ? 'ASC': 'DESC';\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\/\/ Search\r\n\t\t\t\t$('body').on('click', '.post_search_submit', function(){\r\n\t\t\t\t\tcvf_load_all_posts(1, th_name, th_sort);\r\n\t\t\t\t});\r\n\t\t\t\t\/\/ Search when Enter Key is triggered\r\n\t\t\t\t$(\".post_search_text\").keyup(function (e) {\r\n\t\t\t\t\tif (e.keyCode == 13) {\r\n\t\t\t\t\t\tcvf_load_all_posts(1, th_name, th_sort);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\t\/\/ Pagination Clicks\t\t\t\t\t\r\n\t\t\t\t$('.cvf_universal_container .cvf-universal-pagination li.active').live('click',function(){\r\n\t\t\t\t\tvar page = $(this).attr('p');\r\n\t\t\t\t\tvar current_sort = $(th_active).hasClass('DESC') ? 'DESC': 'ASC';\r\n\t\t\t\t\tcvf_load_all_posts(page, th_name, current_sort);\t\t\t\t\r\n\t\t\t\t});\t\r\n\r\n\t\t\t\t\/\/ Sorting Clicks\r\n\t\t\t\t$('body').on('click', '.table-post-list th', function(e) {\r\n\t\t\t\t\te.preventDefault();\t\t\t\t\t\t\t\t\r\n\t\t\t\t\tvar th_name = $(this).attr('id');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\tif(th_name){\r\n\t\t\t\t\t\t\/\/ Remove all TH tags with an \"active\" class\r\n\t\t\t\t\t\tif($('.table-post-list th').removeClass('active')) {\r\n\t\t\t\t\t\t\t\/\/ Set \"active\" class to the clicked TH tag\r\n\t\t\t\t\t\t\t$(this).addClass('active');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(!$(this).hasClass('DESC')){\r\n\t\t\t\t\t\t\tcvf_load_all_posts(1, th_name, 'DESC');\r\n\t\t\t\t\t\t\t$(this).addClass('DESC');\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tcvf_load_all_posts(1, th_name, 'ASC');\r\n\t\t\t\t\t\t\t$(this).removeClass('DESC');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}); \r\n\t\t\t<\/script>\r\n\t\t\t\r\n\t\t\t<table class = \"table table-striped table-post-list no-margin\">\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<th width = \"25%\" class = \"active\" id = \"post_title\"><u><a href = \"#\">Post Name<\/a><\/u><\/th>\r\n\t\t\t\t\t<th width = \"60%\">Description<\/th>\r\n\t\t\t\t\t<th width = \"15%\" id = \"post_date\"><u><a href = \"#\">Post Date<\/a><\/u><\/th>\r\n\t\t\t\t<\/tr>\r\n\t\t\t<\/table>\r\n\t\t\t\r\n\t\t\t<div class = \"cvf_pag_loading no-padding\">\r\n\t\t\t\t<div class = \"cvf_universal_container\">\r\n\t\t\t\t\t<div class=\"cvf-universal-content\"><\/div>\r\n\t\t\t\t<\/div>\r\n\t\t\t<\/div>\r\n\t\t<\/div>\r\n\t<\/div>\r\n\t\r\n<?php get_footer(); ?>\r\n\r\n[\/cc]\r\n<ul>\r\n        <li>Explanations are on the codes<\/li>\r\n\t<li>This tutorial make use of bootstrap classes, so I suggest including bootstrap on the header part of your website:<\/li>\r\n<\/ul> \r\n<code><link rel=\"stylesheet\" href=\"https:\/\/maxcdn.bootstrapcdn.com\/bootstrap\/3.3.5\/css\/bootstrap.min.css\" \/><\/code>\r\n\r\n<strong>Step 3<\/strong>: Add the following PHP Code to your <strong>functions.php<\/strong>:\r\n\r\n[cc lang = \"php\"]\r\nadd_action( 'wp_ajax_demo_load_my_posts', 'demo_load_my_posts' );\r\nadd_action( 'wp_ajax_nopriv_demo_load_my_posts', 'demo_load_my_posts' ); \r\nfunction demo_load_my_posts() {\r\n\t\t\r\n\tglobal $wpdb; \r\n\t\r\n\t$msg = '';\r\n\t\r\n\tif( isset( $_POST['data']['page'] ) ){\r\n\t\t\/\/ Always sanitize the posted fields to avoid SQL injections\r\n\t\t$page = sanitize_text_field($_POST['data']['page']); \/\/ The page we are currently at\r\n\t\t$name = sanitize_text_field($_POST['data']['th_name']); \/\/ The name of the column name we want to sort\r\n\t\t$sort = sanitize_text_field($_POST['data']['th_sort']); \/\/ The order of our sort (DESC or ASC)\r\n\t\t$cur_page = $page;\r\n\t\t$page -= 1;\r\n\t\t$per_page = 15; \/\/ Number of items to display per page\r\n\t\t$previous_btn = true;\r\n\t\t$next_btn = true;\r\n\t\t$first_btn = true;\r\n\t\t$last_btn = true;\r\n\t\t$start = $page * $per_page;\r\n\t\t\r\n\t\t\/\/ The table we are querying from\t\r\n\t\t$posts = $wpdb->prefix . \"posts\";\r\n\t\t\r\n\t\t$where_search = '';\r\n\t\t\r\n\t\t\/\/ Check if there is a string inputted on the search box\r\n\t\tif( ! empty( $_POST['data']['search']) ){\r\n\t\t\t\/\/ If a string is inputted, include an additional query logic to our main query to filter the results\r\n\t\t\t$where_search = ' AND (post_title LIKE \"%%' . $_POST['data']['search'] . '%%\" OR post_content LIKE \"%%' . $_POST['data']['search'] . '%%\") ';\r\n\t\t}\r\n\t\t\r\n\t\t\/\/ Retrieve all the posts\r\n\t\t$all_posts = $wpdb->get_results($wpdb->prepare(\"\r\n\t\t\tSELECT * FROM $posts WHERE post_type = 'post' AND post_status = 'publish' $where_search \r\n\t\t\tORDER BY $name $sort LIMIT %d, %d\", $start, $per_page ) );\r\n\t\t\r\n\t\t$count = $wpdb->get_var($wpdb->prepare(\"\r\n\t\t\tSELECT COUNT(ID) FROM \" . $posts . \" WHERE post_type = 'post' AND post_status = 'publish' $where_search\", array() ) );\r\n\t\t\r\n\t\t\/\/ Check if our query returns anything.\r\n\t\tif( $all_posts ):\r\n\t\t\t$msg .= '<table class = \"table table-striped table-hover table-file-list\">';\r\n\t\t\t\r\n\t\t\t\/\/ Iterate thru each item\r\n\t\t\tforeach( $all_posts as $key => $post ): \r\n\t\t\t\t$msg .= '\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td width = \"25%\"><a href = \"' . get_permalink( $post->ID ) . '\">' . $post->post_title . '<\/a><\/td>\r\n\t\t\t\t\t<td width = \"60%\">' . $post->post_excerpt . '<\/td>\r\n\t\t\t\t\t<td width = \"15%\">' . $post->post_date . '<\/td>\r\n\t\t\t\t<\/tr>';\t\t\t\r\n\t\t\tendforeach;\r\n\t\t\t\r\n\t\t\t$msg .= '<\/table>';\r\n\t\t\r\n\t\t\/\/ If the query returns nothing, we throw an error message\r\n\t\telse:\r\n\t\t\t$msg .= '<p class = \"bg-danger\">No posts matching your search criteria were found.<\/p>';\r\n\t\t\t\r\n\t\tendif;\r\n\r\n\t\t$msg = \"<div class='cvf-universal-content'>\" . $msg . \"<\/div><br class = 'clear' \/>\";\r\n\t\t\r\n\t\t$no_of_paginations = ceil($count \/ $per_page);\r\n\r\n\t\tif ($cur_page >= 7) {\r\n\t\t\t$start_loop = $cur_page - 3;\r\n\t\t\tif ($no_of_paginations > $cur_page + 3)\r\n\t\t\t\t$end_loop = $cur_page + 3;\r\n\t\t\telse if ($cur_page <= $no_of_paginations && $cur_page > $no_of_paginations - 6) {\r\n\t\t\t\t$start_loop = $no_of_paginations - 6;\r\n\t\t\t\t$end_loop = $no_of_paginations;\r\n\t\t\t} else {\r\n\t\t\t\t$end_loop = $no_of_paginations;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t$start_loop = 1;\r\n\t\t\tif ($no_of_paginations > 7)\r\n\t\t\t\t$end_loop = 7;\r\n\t\t\telse\r\n\t\t\t\t$end_loop = $no_of_paginations;\r\n\t\t}\r\n\t\t  \r\n\t\t$pag_container .= \"\r\n\t\t<div class='cvf-universal-pagination'>\r\n\t\t\t<ul>\";\r\n\r\n\t\tif ($first_btn && $cur_page > 1) {\r\n\t\t\t$pag_container .= \"<li p='1' class='active'>First<\/li>\";\r\n\t\t} else if ($first_btn) {\r\n\t\t\t$pag_container .= \"<li p='1' class='inactive'>First<\/li>\";\r\n\t\t} \r\n\r\n\t\tif ($previous_btn && $cur_page > 1) {\r\n\t\t\t$pre = $cur_page - 1;\r\n\t\t\t$pag_container .= \"<li p='$pre' class='active'>Previous<\/li>\";\r\n\t\t} else if ($previous_btn) {\r\n\t\t\t$pag_container .= \"<li class='inactive'>Previous<\/li>\";\r\n\t\t}\r\n\t\tfor ($i = $start_loop; $i <= $end_loop; $i++) {\r\n\r\n\t\t\tif ($cur_page == $i)\r\n\t\t\t\t$pag_container .= \"<li p='$i' class = 'selected' >{$i}<\/li>\";\r\n\t\t\telse\r\n\t\t\t\t$pag_container .= \"<li p='$i' class='active'>{$i}<\/li>\";\r\n\t\t}\r\n\t\t\r\n\t\tif ($next_btn && $cur_page < $no_of_paginations) {\r\n\t\t\t$nex = $cur_page + 1;\r\n\t\t\t$pag_container .= \"<li p='$nex' class='active'>Next<\/li>\";\r\n\t\t} else if ($next_btn) {\r\n\t\t\t$pag_container .= \"<li class='inactive'>Next<\/li>\";\r\n\t\t}\r\n\r\n\t\tif ($last_btn && $cur_page < $no_of_paginations) {\r\n\t\t\t$pag_container .= \"<li p='$no_of_paginations' class='active'>Last<\/li>\";\r\n\t\t} else if ($last_btn) {\r\n\t\t\t$pag_container .= \"<li p='$no_of_paginations' class='inactive'>Last<\/li>\";\r\n\t\t}\r\n\r\n\t\t$pag_container = $pag_container . \"\r\n\t\t\t<\/ul>\r\n\t\t<\/div>\";\r\n\t\t\r\n\t\techo \r\n\t\t'<div class = \"cvf-pagination-content\">' . $msg . '<\/div>' . \r\n\t\t'<div class = \"cvf-pagination-nav\">' . $pag_container . '<\/div>';\r\n\t\t\r\n\t}\r\n\t\r\n\texit();\r\n\t\r\n}\r\n[\/cc]\r\n\r\n<strong>Step 4<\/strong>: Add some CSS styling to our Pagination navigation:\r\n<ul>\r\n\t<li>Include the following code in your style.css:<\/li> \r\n<\/ul>\r\n[cc lang = \"css\"]\r\n.cvf_pag_loading {padding: 20px; }\r\n.cvf-universal-pagination ul {margin: 0; padding: 0;}\r\n.cvf-universal-pagination ul li {display: inline; margin: 3px; padding: 4px 8px; background: #FFF; color: black; }\r\n.cvf-universal-pagination ul li.active:hover {cursor: pointer; background: #1E8CBE; color: white; }\r\n.cvf-universal-pagination ul li.inactive {background: #7E7E7E;}\r\n.cvf-universal-pagination ul li.selected {background: #1E8CBE; color: white;}\r\n[\/cc]","post_title":"WordPress Front-end AJAX Pagination with Search and Sort","post_excerpt":"A simple AJAX pagination that includes a search filter and sorting functionality","post_status":"publish","comment_status":"open","ping_status":"open","post_password":"","post_name":"wordpress-front-end-ajax-pagination-with-search-and-sort","to_ping":"","pinged":"","post_modified":"2016-08-03 01:17:11","post_modified_gmt":"2016-08-02 17:17:11","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=1167","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":520,"post_author":"1","post_date":"2014-08-01 02:06:42","post_date_gmt":"2014-08-01 02:06:42","post_content":"<a href=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2014\/08\/ajax-pagination-wordpress-front-end.jpg\"><img src=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2014\/08\/ajax-pagination-wordpress-front-end.jpg\" alt=\"ajax-pagination-wordpress-front-end\" width=\"640\" height=\"278\" class=\"alignnone size-full wp-image-537\" \/><\/a>\r\n\r\n<a href = \"http:\/\/carlofontanos.com\/demo-wordpress-frontend-ajax-pagination\/\" class = \"btn btn-info\" target = \"_blank\">Demo<\/a>\r\n\r\n\r\n<h2>Tutorial<\/h2>\r\nStep 1: Create a custom page in WordPress, if you do not know what a custom WordPress page is, read on this link: http:\/\/codex.wordpress.org\/Template_Hierarchy\r\n\r\nStep 2: Add this code into your custom page (Explanations are on the codes)\r\n\r\n[cc lang = \"javascript\"]\r\n<?php get_header(); ?>\r\n\r\n\t<div class=\"col-md-12 content\">\r\n\t\t<div class = \"inner-box content no-right-margin darkviolet\">\r\n\t\t\t<script type=\"text\/javascript\">\r\n\t\t\tjQuery(document).ready(function($) {\r\n\t\t\t\t\/\/ This is required for AJAX to work on our page\r\n\t\t\t\tvar ajaxurl = '<?php echo admin_url('admin-ajax.php'); ?>';\r\n\t\t\t\t\r\n\t\t\t\tfunction cvf_load_all_posts(page){\r\n\t\t\t\t\t\/\/ Start the transition\r\n\t\t\t\t\t$(\".cvf_pag_loading\").fadeIn().css('background','#ccc');\r\n\t\t\t\t\t\r\n\t\t\t\t\t\/\/ Data to receive from our server\r\n\t\t\t\t\t\/\/ the value in 'action' is the key that will be identified by the 'wp_ajax_' hook \r\n\t\t\t\t\tvar data = {\r\n\t\t\t\t\t\tpage: page,\r\n\t\t\t\t\t\taction: \"demo-pagination-load-posts\"\r\n\t\t\t\t\t};\r\n\t\t\t\t\t\r\n\t\t\t\t\t\/\/ Send the data\r\n\t\t\t\t\t$.post(ajaxurl, data, function(response) {\r\n\t\t\t\t\t\t\/\/ If successful Append the data into our html container\r\n\t\t\t\t\t\t$(\".cvf_universal_container\").html(response);\r\n\t\t\t\t\t\t\/\/ End the transition\r\n\t\t\t\t\t\t$(\".cvf_pag_loading\").css({'background':'none', 'transition':'all 1s ease-out'});\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t\/\/ Load page 1 as the default\r\n\t\t\t\tcvf_load_all_posts(1);\r\n\t\t\t\t\r\n\t\t\t\t\/\/ Handle the clicks\r\n\t\t\t\t$('.cvf_universal_container .cvf-universal-pagination li.active').live('click',function(){\r\n\t\t\t\t\tvar page = $(this).attr('p');\r\n\t\t\t\t\tcvf_load_all_posts(page);\r\n\t\t\t\t\t\r\n\t\t\t\t});\r\n\t\t\t\t\t\t\t\r\n\t\t\t});\t\r\n\t\t\t<\/script>\r\n\t\t\t<div class = \"cvf_pag_loading\">\r\n\t\t\t\t<div class = \"cvf_universal_container\">\r\n\t\t\t\t\t<div class=\"cvf-universal-content\"><\/div>\r\n\t\t\t\t<\/div>\r\n\t\t\t<\/div>\r\n\t\t\t\r\n\t\t<\/div>\t\t\r\n\t<\/div>\r\n\t\r\n<?php get_footer(); ?>\r\n[\/cc]\r\n\r\nWe might have different page structures so feel free to edit the code.\r\n\r\nStep 3: Add this block of code into your functions.php (Explanations are on the codes)\r\n\r\n[cc lang = \"php\"]\r\n\/\/ Receive the Request post that came from AJAX\r\nadd_action( 'wp_ajax_demo-pagination-load-posts', 'cvf_demo_pagination_load_posts' );\r\n\/\/ We allow non-logged in users to access our pagination\r\nadd_action( 'wp_ajax_nopriv_demo-pagination-load-posts', 'cvf_demo_pagination_load_posts' ); \r\nfunction cvf_demo_pagination_load_posts() {\r\n\t\r\n\tglobal $wpdb;\r\n\t\/\/ Set default variables\r\n\t$msg = '';\r\n\t\r\n\tif(isset($_POST['page'])){\r\n\t\t\/\/ Sanitize the received page\t\r\n\t\t$page = sanitize_text_field($_POST['page']);\r\n\t\t$cur_page = $page;\r\n\t\t$page -= 1;\r\n\t\t\/\/ Set the number of results to display\r\n\t\t$per_page = 5;\r\n\t\t$previous_btn = true;\r\n\t\t$next_btn = true;\r\n\t\t$first_btn = true;\r\n\t\t$last_btn = true;\r\n\t\t$start = $page * $per_page;\r\n\t\t\r\n\t\t\/\/ Set the table where we will be querying data\r\n\t\t$table_name = $wpdb->prefix . \"posts\";\r\n\t\t\r\n\t\t\/\/ Query the necessary posts\r\n\t\t$all_blog_posts = $wpdb->get_results($wpdb->prepare(\"\r\n\t\t\tSELECT * FROM \" . $table_name . \" WHERE post_type = 'post' AND post_status = 'publish' ORDER BY post_date DESC LIMIT %d, %d\", $start, $per_page ) );\r\n\t\t\r\n\t\t\/\/ At the same time, count the number of queried posts\r\n\t\t$count = $wpdb->get_var($wpdb->prepare(\"\r\n\t\t\tSELECT COUNT(ID) FROM \" . $table_name . \" WHERE post_type = 'post' AND post_status = 'publish'\", array() ) );\r\n\t\t\r\n\t\t\/**\r\n\t\t * Use WP_Query:\r\n\t\t *\r\n\t\t$all_blog_posts = new WP_Query(\r\n\t\t\tarray(\r\n\t\t\t\t'post_type' \t\t=> 'post',\r\n\t\t\t\t'post_status ' \t\t=> 'publish',\r\n\t\t\t\t'orderby' \t\t\t=> 'post_date',\r\n\t\t\t\t'order'   \t\t\t=> 'DESC',\r\n\t\t\t\t'posts_per_page'   \t=> $per_page,\r\n\t\t\t\t'offset'   \t\t\t=> $start\r\n\t\t\t)\r\n\t\t);\r\n\t\t\t\r\n\t\t$count = new WP_Query(\r\n\t\t\tarray(\r\n\t\t\t\t'post_type' \t\t=> 'post',\r\n\t\t\t\t'post_status ' \t\t=> 'publish',\r\n\t\t\t\t'posts_per_page'\t=> -1\r\n\t\t\t)\r\n\t\t);\r\n\t\t*\/\r\n\t\t\r\n\t\t\/\/ Loop into all the posts\r\n\t\tforeach($all_blog_posts as $key => $post): \r\n\t\t\t\r\n\t\t\t\/\/ Set the desired output into a variable\r\n\t\t\t$msg .= '\r\n\t\t\t<div class = \"col-md-12\">\t\t\r\n\t\t\t\t<h2><a href=\"' . get_permalink($post->ID) . '\">' . $post->post_title . '<\/a><\/h2>\r\n\t\t\t\t<p>' . $post->post_excerpt . '<\/p>\r\n\t\t\t<\/div>';\r\n\t\t\t\r\n\t\tendforeach;\r\n\t\t\r\n\t\t\/\/ Optional, wrap the output into a container\r\n\t\t$msg = \"<div class='cvf-universal-content'>\" . $msg . \"<\/div><br class = 'clear' \/>\";\r\n\t\t\r\n\t\t\/\/ This is where the magic happens\r\n\t\t$no_of_paginations = ceil($count \/ $per_page);\r\n\r\n\t\tif ($cur_page >= 7) {\r\n\t\t\t$start_loop = $cur_page - 3;\r\n\t\t\tif ($no_of_paginations > $cur_page + 3)\r\n\t\t\t\t$end_loop = $cur_page + 3;\r\n\t\t\telse if ($cur_page <= $no_of_paginations && $cur_page > $no_of_paginations - 6) {\r\n\t\t\t\t$start_loop = $no_of_paginations - 6;\r\n\t\t\t\t$end_loop = $no_of_paginations;\r\n\t\t\t} else {\r\n\t\t\t\t$end_loop = $no_of_paginations;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t$start_loop = 1;\r\n\t\t\tif ($no_of_paginations > 7)\r\n\t\t\t\t$end_loop = 7;\r\n\t\t\telse\r\n\t\t\t\t$end_loop = $no_of_paginations;\r\n\t\t}\r\n\t\t\r\n\t\t\/\/ Pagination Buttons logic\t\t\r\n\t\t$pag_container .= \"\r\n\t\t<div class='cvf-universal-pagination'>\r\n\t\t\t<ul>\";\r\n\r\n\t\tif ($first_btn && $cur_page > 1) {\r\n\t\t\t$pag_container .= \"<li p='1' class='active'>First<\/li>\";\r\n\t\t} else if ($first_btn) {\r\n\t\t\t$pag_container .= \"<li p='1' class='inactive'>First<\/li>\";\r\n\t\t}\r\n\r\n\t\tif ($previous_btn && $cur_page > 1) {\r\n\t\t\t$pre = $cur_page - 1;\r\n\t\t\t$pag_container .= \"<li p='$pre' class='active'>Previous<\/li>\";\r\n\t\t} else if ($previous_btn) {\r\n\t\t\t$pag_container .= \"<li class='inactive'>Previous<\/li>\";\r\n\t\t}\r\n\t\tfor ($i = $start_loop; $i <= $end_loop; $i++) {\r\n\r\n\t\t\tif ($cur_page == $i)\r\n\t\t\t\t$pag_container .= \"<li p='$i' class = 'selected' >{$i}<\/li>\";\r\n\t\t\telse\r\n\t\t\t\t$pag_container .= \"<li p='$i' class='active'>{$i}<\/li>\";\r\n\t\t}\r\n\t\t\r\n\t\tif ($next_btn && $cur_page < $no_of_paginations) {\r\n\t\t\t$nex = $cur_page + 1;\r\n\t\t\t$pag_container .= \"<li p='$nex' class='active'>Next<\/li>\";\r\n\t\t} else if ($next_btn) {\r\n\t\t\t$pag_container .= \"<li class='inactive'>Next<\/li>\";\r\n\t\t}\r\n\r\n\t\tif ($last_btn && $cur_page < $no_of_paginations) {\r\n\t\t\t$pag_container .= \"<li p='$no_of_paginations' class='active'>Last<\/li>\";\r\n\t\t} else if ($last_btn) {\r\n\t\t\t$pag_container .= \"<li p='$no_of_paginations' class='inactive'>Last<\/li>\";\r\n\t\t}\r\n\r\n\t\t$pag_container = $pag_container . \"\r\n\t\t\t<\/ul>\r\n\t\t<\/div>\";\r\n\t\t\r\n\t\t\/\/ We echo the final output\r\n\t\techo \r\n\t\t'<div class = \"cvf-pagination-content\">' . $msg . '<\/div>' . \r\n\t\t'<div class = \"cvf-pagination-nav\">' . $pag_container . '<\/div>';\r\n\t\t\r\n\t}\r\n\t\/\/ Always exit to avoid further execution\r\n\texit();\r\n}\r\n[\/cc]\r\n\r\nYou can add some styling to your pagination by appending this block of CSS code into your style.css\r\n\r\n[cc lang = \"css\"]\r\n.cvf_pag_loading {padding: 20px;}\r\n.cvf-universal-pagination ul {margin: 0; padding: 0;}\r\n.cvf-universal-pagination ul li {display: inline; margin: 3px; padding: 4px 8px; background: #FFF; color: black; }\r\n.cvf-universal-pagination ul li.active:hover {cursor: pointer; background: #1E8CBE; color: white; }\r\n.cvf-universal-pagination ul li.inactive {background: #7E7E7E;}\r\n.cvf-universal-pagination ul li.selected {background: #1E8CBE; color: white;}\r\n[\/cc]\r\n\r\nNow you can start using this as your base AJAX Pagination structure to implement more sophisticated logics.","post_title":"WordPress Frontend AJAX Pagination","post_excerpt":"Create a Front-end AJAX pagination in your WordPress blog","post_status":"publish","comment_status":"open","ping_status":"closed","post_password":"","post_name":"wordpress-frontend-ajax-pagination","to_ping":"","pinged":"","post_modified":"2015-08-25 02:58:48","post_modified_gmt":"2015-08-25 02:58:48","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=520","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":997,"post_author":"1","post_date":"2014-12-10 10:15:00","post_date_gmt":"2014-12-10 10:15:00","post_content":"<a href=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2014\/12\/codeigniter-banner.jpg\"><img src=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2014\/12\/codeigniter-banner.jpg\" alt=\"codeigniter-banner\" width=\"1600\" height=\"257\" class=\"alignnone size-full wp-image-995\" \/><\/a>\r\n\r\nTo be able to use this POST Model Library, you need the USER Model Library from my previous tutorial.\r\n\r\nSome of the functions bellow are not exactly similar to how WordPress built their procedural functions so you will have to study and learn how to use the methods.\r\n\r\nNOTE: The development of this Library is currently on-going, I may add, update, or remove some functions for improvement purposes and best practices. Use this Library at your own risk!.\r\n\r\n<h3>Available Methods:<\/h3>\r\n<ul>\r\n<li>get_post()<\/li>\r\n<li>get_posts()<\/li>\r\n<li>insert_post()<\/li>\r\n<li>update_post()<\/li>\r\n<li>delete_post()<\/li>\r\n<li>get_post_meta()<\/li>\r\n<li>add_post_meta()<\/li>\r\n<li>update_post_meta()<\/li>\r\n<li>delete_post_meta()<\/li>\r\n<li>insert_post_category()<\/li>\r\n<li>update_post_category()<\/li>\r\n<li>add_term()<\/li>\r\n<li>update_term()<\/li>\r\n<li>delete_term()<\/li>\r\n<li>is_term()<\/li>\r\n<li>is_post()<\/li>\r\n<\/ul>\r\n\r\n[cc lang = \"php\"]\r\n<?php \r\n\/**\r\n * Post_model\r\n *\r\n * @author  \tCarl Victor Fontanos\r\n * @authorurl\twww.carlofontanos.com\r\n * @version \t1.0\r\n *\r\n *\/\r\n \r\n \r\nif ( ! defined('BASEPATH')) exit('No direct script access allowed');\r\n\r\nclass Post_model extends CI_Model {\r\n\r\n\tpublic function __construct() {\r\n\t\tparent::__construct();\r\n\t}\r\n\t\r\n\tpublic function get_post($post_identifier_array = '') {\r\n\t\t\r\n\t\tif(!empty($post_identifier_array)){\r\n\t\t\r\n\t\t\textract($post_identifier_array);\r\n\t\t\t\t\r\n\t\t\tif(!empty($post_name)){\r\n\t\t\t\t$where = array('post_name' => $post_name);\r\n\t\t\t} elseif($post_id) {\r\n\t\t\t\t$where = array('ID' => $post_id);\r\n\t\t\t} else {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t$post = $this->db->get_where('ci_posts', $where, 1, 0);\r\n\t\t\t\r\n\t\t\tif($post->num_rows() > 0){\r\n\t\t\t\treturn $post->result()[0];\r\n\t\t\t} else {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t} \r\n\t\t\r\n\t}\r\n\t\r\n\t\/**\r\n\tUsage: \r\n\t$args = array(\r\n\t\t'posts_per_page'   => 5,\r\n\t\t'post_author'\t   => 17,\r\n\t\t'category'         => 1,\r\n\t\t'category_name'    => 'uncategorized',\r\n\t\t'orderby'          => 'post_date',\r\n\t\t'order'            => 'ASC',\r\n\t\t'post_type'        => 'page',\r\n\t\t'post_status'      => 'publish'\r\n\t);\r\n\t$result = $post->get_posts($args));\r\n\tprint_r($result);\r\n\t*\/\r\n\tpublic function get_posts($post_data = '') {\r\n\t\t\r\n\t\t$post_author = '';\r\n\t\t$term_id = '';\r\n\t\t$slug = '';\r\n\t\t$post_status = '';\r\n\t\t$post_type = '';\t\r\n\t\t$orderby = '';\r\n\t\t$order = '';\r\n\t\t$limit = '';\r\n\t\r\n\t\tif(!empty($post_data)) {\r\n\t\t\r\n\t\t\textract($post_data);\r\n\t\t\t\t\r\n\t\t\tif(!empty($post_author)) {\r\n\t\t\t\t$post_author = ' AND p.post_author = '.$post_author.' ';\r\n\t\t\t}\r\n\t\t\tif(!empty($category)) {\r\n\t\t\t\t$term_id = ' AND t.term_id = '.$category;\r\n\t\t\t}\r\n\t\t\tif(!empty($category_name)) {\r\n\t\t\t\t$slug = ' AND t.slug = \"'.$category_name.'\" ';\r\n\t\t\t}\r\n\t\t\tif(!empty($post_status)) {\r\n\t\t\t\t$post_status = ' AND p.post_status = \"'.$post_status.'\" ';\r\n\t\t\t}\r\n\t\t\tif(!empty($post_type)) {\r\n\t\t\t\t$post_type = ' AND p.post_type = \"'.$post_type.'\" ';\r\n\t\t\t}\r\n\t\t\tif(!empty($orderby)) {\r\n\t\t\t\t$orderby = ' ORDER BY '.$orderby.' ';\r\n\t\t\t}\r\n\t\t\tif(!empty($order)) {\r\n\t\t\t\t$order = ' '.$order.' ';\r\n\t\t\t}\r\n\t\t\tif(!empty($posts_per_page)) {\r\n\t\t\t\t$limit = ' LIMIT '.$posts_per_page.' ';\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t$posts = $this->db->query('\r\n\t\t\tSELECT p.*, t.term_id AS category_id, t.slug AS category_name FROM ci_posts p\r\n\t\t\tLEFT JOIN ci_term_relationships tr ON tr.object_id = p.ID\r\n\t\t\tLEFT JOIN ci_terms t ON t.term_id = tr.term_taxonomy_id\r\n\t\t\tWHERE p.ID > 0 '.$post_author.$term_id.$slug.$post_status.$post_type.$orderby.$order.$limit.' \r\n\t\t');\r\n\t\t\r\n\t\tif($posts->num_rows() > 0){\r\n\t\t\treturn $posts->result();\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\/**\r\n\tUsage: \r\n\t$args = array(\r\n\t\t'post_author'\t\t=>\t$current_user->ID,\r\n\t\t'post_content'\t\t=>\t'Some Description',\r\n\t\t'post_title'\t\t=>\t'Some Title',\r\n\t\t'post_excerpt'\t\t=>\t'Short Description',\r\n\t\t'post_type'\t\t\t=> \t'post',\r\n\t\t'post_category'\t\t=> \t1\r\n\t);\r\n\t\r\n\t$post_id = $post->insert_post($args);\r\n\techo $post_id;\r\n\t*\/\r\n\tpublic function insert_post($post_data_array) {\r\n\t\t\r\n\t\t$current_user = current_user();\r\n\t\t\r\n\t\t$post_content = '';\r\n\t\t$post_title = '';\r\n\t\t$post_excerpt = '';\r\n\t\t$post_type = 'post';\r\n\t\t$post_category = 1;\r\n\t\t\r\n\t\textract($post_data_array);\r\n\t\t\r\n\t\tif(!empty($post_author) && $this->user_model->is_user($post_author)){\r\n\t\t\t$author = $post_author;\r\n\t\t} elseif(is_user_logged_in()) {\r\n\t\t\t$author = $current_user->ID;\r\n\t\t} else {\r\n\t\t\t$author = $this->user_model->get_superadmin();\r\n\t\t}\r\n\t\t\r\n\t\t$post_data = array(\r\n\t\t\t'post_author'\t\t=>\t$author,\r\n\t\t\t'post_date'\t\t\t=>\tdate(\"Y-m-d H:i:s\", time()),\r\n\t\t\t'post_date_gmt'\t\t=>\tdate(\"Y-m-d H:i:s\", time()),\r\n\t\t\t'post_content'\t\t=>\t$post_content,\r\n\t\t\t'post_title'\t\t=>\t$post_title,\r\n\t\t\t'post_excerpt'\t\t=>\t$post_excerpt,\r\n\t\t\t'post_status'\t\t=>\t'publish',\r\n\t\t\t'post_type'\t\t\t=>\t$post_type,\r\n\t\t\t'post_name'\t\t\t=>\turl_title($post_title, 'dash', TRUE),\t\r\n\t\t\t'post_modified'\t\t=>\tdate(\"Y-m-d H:i:s\", time()),\t\r\n\t\t\t'post_modified_gmt'\t=>\tdate(\"Y-m-d H:i:s\", time()),\t\r\n\t\t);\r\n\t\t\r\n\t\t$cleaned_data = $this->security->xss_clean($post_data);\r\n\t\t\r\n\t\t$this->db->insert('ci_posts', $cleaned_data);\r\n\t\t\r\n\t\t$check_insert = $this->db->get_where('ci_posts', $cleaned_data, 1, 0);\r\n\t\t\r\n\t\tif($check_insert->num_rows() > 0){\t\t\r\n\t\t\t\r\n\t\t\t$category = $post_category;\r\n\t\t\t\r\n\t\t\t$post = $check_insert->row();\r\n\t\t\tself::insert_post_category($post->ID, $category);\r\n\t\t\t\r\n\t\t\treturn $post->ID;\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\t\r\n\t\/**\r\n\tUsage: \r\n\t$args = array(\r\n\t\t'ID'\t\t\t\t=> \t1008,\r\n\t\t'post_author'\t\t=>\t16,\r\n\t\t'post_content'\t\t=>\t'Some Description',\r\n\t\t'post_title'\t\t=>\t'Some Title',\r\n\t\t'post_excerpt'\t\t=>\t'Short Description',\r\n\t\t'post_type'\t\t\t=> \t'page',\r\n\t\t'post_category'\t\t=> \t1\r\n\t);\r\n\t\r\n\t$post_id = $post->update_post($args);\r\n\techo $post_id;\r\n\t*\/\r\n\tpublic function update_post($post_data_array) {\r\n\t\t\r\n\t\t$current_user = current_user();\r\n\t\t\r\n\t\textract($post_data_array);\r\n\t\t\r\n\t\t$post_data = '';\r\n\t\t\r\n\t\tif(!empty($ID) && self::is_post($ID)){\r\n\t\t\r\n\t\t\tif(!empty($post_author) && $this->user_model->is_user($post_author)) {\r\n\t\t\t\t$post_data['post_author'] = $post_author;\r\n\t\t\t} elseif (is_user_logged_in()) {\r\n\t\t\t\t$post_data['post_author'] = $current_user->ID;\r\n\t\t\t} else {\r\n\t\t\t\t$post_data['post_author'] = $this->user_model->get_superadmin();\r\n\t\t\t}\r\n\t\t\tif(!empty($post_content)) {\r\n\t\t\t\t$post_data['post_content'] = $post_content;\r\n\t\t\t}\t\r\n\t\t\tif(!empty($post_title)) {\r\n\t\t\t\t$post_data['post_title'] = $post_title;\r\n\t\t\t\t$post_data['post_name'] = url_title($post_title, 'dash', TRUE);\r\n\t\t\t}\r\n\t\t\tif(!empty($post_excerpt)) {\r\n\t\t\t\t$post_data['post_excerpt'] = $post_excerpt;\r\n\t\t\t}\r\n\t\t\tif(!empty($post_status)) {\r\n\t\t\t\t$post_data['post_status'] = $post_status;\r\n\t\t\t}\r\n\t\t\tif(!empty($post_type)) {\r\n\t\t\t\t$post_data['post_type'] = $post_type;\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t\t$post_data['post_modified'] = date(\"Y-m-d H:i:s\", time());\t\r\n\t\t\t$post_data['post_modified_gmt'] = date(\"Y-m-d H:i:s\", time());\t\r\n\t\t\t\t\r\n\t\t\t$cleaned_data = $this->security->xss_clean($post_data);\r\n\t\t\t\r\n\t\t\t$this->db->where('ID', $ID);\r\n\t\t\t$this->db->update('ci_posts', $cleaned_data);\r\n\t\t\t\r\n\t\t\t$check_update = $this->db->get_where('ci_posts', $cleaned_data, 1, 0);\r\n\t\t\r\n\t\t\tif($check_update->num_rows() > 0){\t\t\r\n\t\t\t\t\r\n\t\t\t\t$post = $check_update->row();\r\n\t\t\t\t\r\n\t\t\t\tif(!empty($post_category) && $post_category > 0 && self::is_term($post_category)) {\r\n\t\t\t\t\tself::update_post_category($post->ID, $post_category);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\treturn $post->ID;\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\treturn false;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t\t\r\n\t\t}\t\r\n\t\t\t\t\r\n\t}\r\n\t\r\n\tpublic function delete_post($post_id) {\r\n\t\r\n\t\t$this->db->delete('ci_posts', array('ID' => $post_id));\r\n\t\t$this->db->delete('ci_term_relationships', array('object_id' => $post_id));\r\n\t\tself::delete_post_meta($post_id);\r\n\t\t\r\n\t\t$delete_check = $this->db->query('\r\n\t\t\tSELECT * from ci_posts p \r\n\t\t\tLEFT JOIN ci_postmeta pm ON p.ID = pm.post_id \r\n\t\t\tLEFT JOIN ci_term_relationships tr ON p.ID = tr.object_id \r\n\t\t\tWHERE p.ID = ?', array($post_id) );\r\n\t\t\r\n\t\tif($delete_check->num_rows() == 0){\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic function get_post_meta($post_id, $key = '', $single = TRUE) {\r\n\t\r\n\t\t$where = '';\r\n\t\t\r\n\t\tif($key){\r\n\t\t\t$where .= ' AND meta_key = \"'.$key.'\"';\r\n\t\t}\r\n\t\t\r\n\t\t$post_meta = $this->db->query('SELECT * FROM ci_postmeta WHERE post_id = ?'.$where, array($post_id) );\r\n\t\t\r\n\t\tif($single){\r\n\t\t\r\n\t\t\t$row = $post_meta->row();\r\n\t\t\tif($row){\r\n\t\t\t\treturn $row->meta_value;\r\n\t\t\t} else {\r\n\t\t\t\treturn '';\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t} else {\r\n\t\t\treturn $post_meta->result();\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic function add_post_meta($post_id, $meta_key, $meta_value) {\r\n\t\t\r\n\t\t$post_metadata = array(\r\n\t\t\t'post_id'\t\t\t=>\t$post_id,\r\n\t\t\t'meta_key'\t\t\t=>\t$meta_key,\r\n\t\t\t'meta_value'\t\t=>\t$meta_value\r\n\t\t);\r\n\t\t\r\n\t\t$cleaned_data = $this->security->xss_clean($post_metadata);\r\n\t\t\r\n\t\t$this->db->insert('ci_postmeta', $cleaned_data);\r\n\t\t\r\n\t\t$add_meta_check = $this->db->get_where('ci_postmeta', array('post_id' => $post_id, 'meta_key' => $meta_key, 'meta_value' => $meta_value));\r\n\t\t\r\n\t\tif($add_meta_check->num_rows() > 0){\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic function update_post_meta($post_id, $meta_key, $meta_value) {\r\n\t\t\r\n\t\t$meta_exits = $this->db->get_where('ci_postmeta', array('post_id' => $post_id, 'meta_key' => $meta_key), 1, 0);\r\n\t\t\r\n\t\tif($meta_exits->num_rows() > 0){\r\n\t\t\r\n\t\t\t$post_metadata = array(\r\n\t\t\t\t'meta_value'\t\t=>\t$meta_value\r\n\t\t\t);\r\n\t\t\t\r\n\t\t\t$cleaned_data = $this->security->xss_clean($post_metadata);\r\n\t\t\t\r\n\t\t\t$this->db->where(array('post_id' =>\t$post_id, 'meta_key' =>\t$meta_key));\r\n\t\t\t$this->db->update('ci_postmeta', $cleaned_data);\r\n\t\t\t\r\n\t\t\t$update_meta_check = $this->db->get_where('ci_postmeta', array('post_id' => $post_id, 'meta_key' => $meta_key, 'meta_value' => $meta_value), 1, 0);\r\n\t\t\t\r\n\t\t\tif($update_meta_check->num_rows() > 0){\r\n\t\t\t\treturn true;\r\n\t\t\t} else {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\tself::add_post_meta($post_id, $meta_key, $meta_value);\r\n\t\t\treturn true;\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic function delete_post_meta($post_id, $meta_key = '') {\r\n\t\r\n\t\tif(!empty($meta_key)){\r\n\t\t\t$post_metadata = array(\r\n\t\t\t\t'post_id'\t\t\t=>\t$post_id,\r\n\t\t\t\t'meta_key'\t\t\t=>\t$meta_key\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\t$post_metadata = array(\r\n\t\t\t\t'post_id'\t\t\t=>\t$post_id\r\n\t\t\t);\r\n\t\t}\r\n\t\t\r\n\t\t$cleaned_data = $this->security->xss_clean($post_metadata);\r\n\t\t\t\r\n\t\t$this->db->where($cleaned_data);\r\n\t\t$this->db->delete('ci_postmeta');\r\n\r\n\t\t$delete_meta_check = $this->db->get_where('ci_postmeta', $post_metadata, 1, 0);\r\n\t\t\t\r\n\t\tif($delete_meta_check->num_rows() == 0){\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic function insert_post_category($post_id, $term_id) {\r\n\t\t\r\n\t\tif(!empty($term_id) && !empty($post_id) && self::is_term($term_id) && self::is_post($post_id)){\r\n\t\t\t\r\n\t\t\t$data = array(\r\n\t\t\t\t'object_id'\t\t\t=>\t$post_id,\r\n\t\t\t\t'term_taxonomy_id'\t=>\t$term_id,\r\n\t\t\t\t'term_order'\t\t=>\t0\r\n\t\t\t);\r\n\t\t\t\r\n\t\t\t$cleaned_data = $this->security->xss_clean($data);\r\n\t\t\t\r\n\t\t\t$this->db->insert('ci_term_relationships', $cleaned_data);\r\n\t\t\t\r\n\t\t\t$check_insert = $this->db->get_where('ci_term_relationships', $cleaned_data, 1, 0);\r\n\t\t\r\n\t\t\tif($check_insert->num_rows() > 0){\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t$term = $check_insert->row();\r\n\r\n\t\t\t\treturn $term->term_taxonomy_id;\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\treturn false;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\tpublic function update_post_category($post_id, $term_id) {\r\n\t\t\r\n\t\tif(!empty($term_id) && !empty($post_id) && self::is_term($term_id) && self::is_post($post_id)){\r\n\t\t\t\r\n\t\t\t$data = array(\r\n\t\t\t\t'term_taxonomy_id'\t=>\t$term_id,\r\n\t\t\t);\r\n\t\t\t\r\n\t\t\t$cleaned_data = $this->security->xss_clean($data);\r\n\t\t\t\r\n\t\t\t$this->db->where('object_id', $post_id);\r\n\t\t\t$this->db->update('ci_term_relationships', $cleaned_data);\r\n\t\t\t\r\n\t\t\t$check_update = $this->db->get_where('ci_term_relationships', $cleaned_data, 1, 0);\r\n\t\t\r\n\t\t\tif($check_update->num_rows() > 0){\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t$term = $check_update->row();\r\n\r\n\t\t\t\treturn $term->term_taxonomy_id;\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\treturn false;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\t\r\n\t\/**\r\n\tUsage: \r\n\t$args = array(\r\n\t\t'name'\t\t\t=> 'Cateory Test',\r\n\t\t'slug'\t\t\t=> '',\r\n\t\t'description'\t=> 'A very beautiful category',\r\n\t\t'taxonomy'\t\t=> 'category',\r\n\t\t'parent'\t\t=> ''\r\n\t);\r\n\t$term_id = $post->add_term($args);\r\n\techo $term_id;\r\n\t*\/\r\n\tpublic function add_term($term_data){\r\n\t\t\r\n\t\t$description = '';\r\n\t\t\r\n\t\textract($term_data); \r\n\t\t\r\n\t\t$term = '';\r\n\t\t\r\n\t\tif(!empty($name) && !empty($taxonomy)){\r\n\t\t\r\n\t\t\tif(!empty($name)){\r\n\t\t\t\t$term['name'] = $name;\r\n\t\t\t}\r\n\t\t\tif(!empty($slug)){\r\n\t\t\t\t$term['slug'] = $slug;\r\n\t\t\t} else {\r\n\t\t\t\t$term['slug'] = url_title($name, 'dash', TRUE);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t$this->db->insert('ci_terms', $term);\r\n\t\t\r\n\t\t\t$get_term_id = $this->db->get_where('ci_terms', $term);\r\n\t\t\t\r\n\t\t\tif($get_term_id->num_rows > 0){\r\n\t\t\t\t$term = $get_term_id->row();\r\n\t\t\t\t\r\n\t\t\t\t$term_taxonomy = array(\r\n\t\t\t\t\t'term_taxonomy_id' \t=> $term->term_id,\r\n\t\t\t\t\t'term_id' \t\t\t=> $term->term_id,\r\n\t\t\t\t\t'taxonomy' \t\t\t=> $taxonomy,\r\n\t\t\t\t\t'parent' \t\t\t=> $parent ? $parent : 0,\r\n\t\t\t\t\t'description'\t\t=> $description\r\n\t\t\t\t);\r\n\t\t\t\t\r\n\t\t\t\t$this->db->insert('ci_term_taxonomy', $term_taxonomy);\r\n\t\t\t\t\r\n\t\t\t\t$term_taxonomy_check = $this->db->get_where('ci_term_taxonomy', $term_taxonomy);\r\n\t\t\t\t\r\n\t\t\t\tif($term_taxonomy_check->num_rows > 0){\r\n\t\t\t\t\t$term_taxonomy = $term_taxonomy_check->row();\r\n\t\t\t\t\treturn $term_taxonomy->term_taxonomy_id;\r\n\t\t\t\t\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t\/**\r\n\tUsage: \r\n\t$post->update_term(1, array(\r\n\t\t'name' \t\t=> 'No Category',\r\n\t\t'slug' \t\t=> 'no-category',\r\n\t\t'taxonomy'\t=> 'category',\r\n\t\t'parent' \t=> 4\r\n\t));\r\n\t*\/\r\n\tpublic function update_term($term_id, $term_array){\r\n\t\t\r\n\t\tif(!empty($term_id) && !empty($term_array)){\r\n\t\t\t\t\t\t\t\r\n\t\t\textract($term_array);\r\n\t\t\t\r\n\t\t\tif(!empty($taxonomy) || !empty($parent)) {\r\n\t\t\t\t\r\n\t\t\t\t$term_taxonomy = '';\r\n\t\t\t\t\r\n\t\t\t\tif(!empty($taxonomy)){\r\n\t\t\t\t\t$term_taxonomy['taxonomy'] = $taxonomy;\r\n\t\t\t\t}\r\n\t\t\t\tif(isset($parent)){\r\n\t\t\t\t\t$term_taxonomy['parent']  = $parent;\r\n\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t$this->db->where('term_taxonomy_id', $term_id);\r\n\t\t\t\t$this->db->update('ci_term_taxonomy', $term_taxonomy);\r\n\t\t\t}\t\r\n\t\t\t\t\t\t\r\n\t\t\tif(!empty($name)) {\r\n\t\t\t\t\r\n\t\t\t\t$term = '';\r\n\t\t\t\t\r\n\t\t\t\tif(!empty($name)){\r\n\t\t\t\t\t$term['name'] = $name;\r\n\t\t\t\t}\r\n\t\t\t\tif(!empty($slug)){\r\n\t\t\t\t\t$term['slug'] = $slug;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$term['slug'] = url_title($name, 'dash', TRUE);\r\n\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t$this->db->where('term_id', $term_id);\r\n\t\t\t\t$this->db->update('ci_terms', $term);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn true;\r\n\t\t\t\t\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic function delete_term($term_id){\r\n\t\t\t\r\n\t\t# Fix all parents, set back to 0\r\n\t\t$get_cat_childrens = $this->db->get_where('ci_term_taxonomy', array('parent' => $term_id));\r\n\t\t\r\n\t\tif($get_cat_childrens->num_rows() > 0){\r\n\t\t\r\n\t\t\tforeach($get_cat_childrens->result() as $term_cat){\r\n\t\t\t\t$this->db->where('term_id', $term_cat->term_id);\r\n\t\t\t\t$this->db->update('ci_term_taxonomy', array('parent' => 0));\r\n\t\t\t}\r\n\t\t\r\n\t\t}\t\r\n\t\t\t\t\r\n\t\t# Fix all post categories, set back to 1\r\n\t\t$get_post_childrens = $this->db->get_where('ci_term_relationships', array('term_taxonomy_id' => $term_id));\r\n\t\t\r\n\t\tif($get_post_childrens->num_rows() > 0){\t\r\n\t\t\r\n\t\t\tforeach($get_post_childrens->result() as $term_post){\r\n\t\t\t\t$this->db->where('object_id', $term_post->object_id);\r\n\t\t\t\t$this->db->update('ci_term_relationships', array('term_taxonomy_id' => 1));\r\n\t\t\t}\r\n\t\t\r\n\t\t}\r\n\t\t\r\n\t\t$this->db->delete('ci_terms', array('term_id' => $term_id));\r\n\t\t$this->db->delete('ci_term_taxonomy', array('term_taxonomy_id' => $term_id));\r\n\t\t\r\n\t\t$this->db->select('*');\r\n\t\t$this->db->from('ci_terms');\r\n\t\t$this->db->join('ci_term_taxonomy', 'ci_term_taxonomy.term_taxonomy_id = ci_terms.term_id', 'left');\r\n\t\t$this->db->where('ci_terms.term_id', $term_id);\r\n\t\t$delete_check = $this->db->get();\r\n\t\t\r\n\t\tif($delete_check->num_rows() == 0){\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\tpublic function is_term($term_id) {\r\n\t\r\n\t\t$check_term_id = $this->db->query('\r\n\t\t\tSELECT t.term_id FROM ci_terms t \r\n\t\t\tLEFT JOIN  ci_term_taxonomy tt ON t.term_id = tt.term_taxonomy_id\r\n\t\t\tWHERE t.term_id = ?', array($term_id)\r\n\t\t);\r\n\t\t\r\n\t\tif($check_term_id->num_rows() > 0){\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\tpublic function is_post($post_id) {\r\n\t\t\t\r\n\t\t$check_ID = $this->db->get_where('ci_posts', array('ID' => $post_id), 1, 0);\r\n\t\t\r\n\t\tif($check_ID->num_rows() > 0){\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n}\r\n[\/cc]\r\n\r\n<h3>Usage<\/h3>\r\n\r\nIn your controller \"___construct\" function, load the post_model:\r\n<code>$this->load->model('post_model');<\/code> \r\n\r\nThen in your PAGE controller, assign the model into a variable:\r\n<code>$data['post'] = $this->post_model;<\/code>\r\n\r\nIn your View, you can call the functions like this:\r\n<code><?php echo $post->get_post_meta(POST_ID, 'META_KEY'); ?><\/code>\r\n","post_title":"WordPress Post Model for CodeIgniter","post_excerpt":"A perfect POST Model library for developing sophisticated Web Applications in CodeIgniter","post_status":"publish","comment_status":"open","ping_status":"closed","post_password":"","post_name":"wordpress-post-model-for-codeigniter","to_ping":"","pinged":"","post_modified":"2015-01-06 10:35:18","post_modified_gmt":"2015-01-06 10:35:18","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=997","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"},{"ID":994,"post_author":"1","post_date":"2014-12-08 07:30:15","post_date_gmt":"2014-12-08 07:30:15","post_content":"<a href=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2014\/12\/codeigniter-banner.jpg\"><img src=\"http:\/\/carlofontanos.com\/wp-content\/uploads\/2014\/12\/codeigniter-banner.jpg\" alt=\"codeigniter-banner\" width=\"1600\" height=\"257\" class=\"alignnone size-full wp-image-995\" \/><\/a>\r\n\r\nThe User Model class bellow is based in WordPress user functions, which makes it easier for WordPress developers to apply the same functions and syntax to their CodeIgniter Web Applications.\r\n\r\n<ul>\r\n\t<li>The database structure is based in WordPress tables using \"ci_\" prefix.<\/li>\r\n\t<li>Uses the same password hashing of WordPress (PHPpass)<\/li>\r\n\t<li>Authentication function included: Login, Register <\/li>\r\n\t<li>Helper functions: update_usermeta, add_usermeta, delete_usermeta, add_user, delete_user, update_user<\/li>\r\n<\/ul>\r\n\r\n\r\n[cc lang = \"php\"]\r\n<?php \r\n\/**\r\n * User_model\r\n *\r\n * @author  \tCarl Victor Fontanos\r\n * @authorurl\twww.carlofontanos.com\r\n * @version \t1.0\r\n *\r\n *\/\r\n \r\n \r\nif ( ! defined('BASEPATH')) exit('No direct script access allowed');\r\n\r\nclass User_model extends CI_Model {\r\n\r\n\tpublic function __construct() {\r\n\t\tparent::__construct();\r\n\t}\r\n\t\r\n\tpublic function login($user_email, $user_pass) {\r\n\t\t\r\n\t\t$query_password = $this->db->get_where('ci_users', array('user_email' => $user_email), 1, 0);\r\n\t\t$user = $query_password->row();\r\n\t\t\r\n\t\tif($this->passwordhash->CheckPassword($user_pass, $user->user_pass)) {\r\n\t\t\t\r\n\t\t\t$newdata = array(\r\n\t\t\t\t'ID'  \t\t\t=> $user->ID,\r\n\t\t\t\t'logged_in'  \t=> TRUE\r\n\t\t\t);\r\n\t\t\t\r\n\t\t\t$this->session->set_userdata($newdata);\r\n\t\t\t\r\n\t\t\treturn true;\t\t\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\t\r\n\tpublic function add_user($username, $email, $password) {\r\n\t\r\n\t\t$user_data = array(\r\n\t\t\t'user_login'\t\t=>\t$username,\r\n\t\t\t'user_email'\t\t=>\t$email,\r\n\t\t\t'user_pass'\t\t\t=>\t$this->passwordhash->HashPassword($password),\r\n\t\t\t'user_registered'\t=>\tdate(\"Y-m-d H:i:s\", time()),\r\n\t\t\t'user_nicename'\t\t=>\turl_title($email, 'dash', TRUE),\t\r\n\t\t);\r\n\t\t\r\n\t\t$cleaned_data = $this->security->xss_clean($user_data);\r\n\t\t\r\n\t\t$this->db->insert('ci_users', $user_data);\r\n\t\t\r\n\t\t$this->db->select('ID');\r\n\t\t$user_check = $this->db->get_where('ci_users', array('user_email' => $email), 1, 0);\r\n\t\t\r\n\t\tif($user_check->num_rows() > 0){\r\n\t\t\t$user = $user_check->row();\r\n\t\t\treturn $user->ID;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\t\r\n\t}\r\n\t\r\n\tpublic function add_user_meta($user_id, $meta_key, $meta_value) {\r\n\t\r\n\t\t$user_metadata = array(\r\n\t\t\t'user_id'\t\t\t=>\t$user_id,\r\n\t\t\t'meta_key'\t\t\t=>\t$meta_key,\r\n\t\t\t'meta_value'\t\t=>\t$meta_value\r\n\t\t);\r\n\t\t\r\n\t\t$cleaned_data = $this->security->xss_clean($user_metadata);\r\n\t\t\r\n\t\t$this->db->insert('ci_usermeta', $cleaned_data);\r\n\t\t\r\n\t\t$add_meta_check = $this->db->get_where('ci_usermeta', array('user_id' => $user_id, 'meta_key' => $meta_key, 'meta_value' => $meta_value), 1, 0);\r\n\t\t\r\n\t\tif($add_meta_check->num_rows() > 0){\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic function update_user_meta($user_id, $meta_key, $meta_value) {\r\n\t\t\r\n\t\t$meta_exits = $this->db->get_where('ci_usermeta', array('user_id' => $user_id, 'meta_key' => $meta_key), 1, 0);\r\n\t\t\r\n\t\tif($meta_exits->num_rows() > 0){\r\n\t\t\r\n\t\t\t$user_metadata = array(\r\n\t\t\t\t'meta_value'\t\t=>\t$meta_value\r\n\t\t\t);\r\n\t\t\t\r\n\t\t\t$cleaned_data = $this->security->xss_clean($user_metadata);\r\n\t\t\t\r\n\t\t\t$this->db->where(array('user_id' =>\t$user_id, 'meta_key' =>\t$meta_key));\r\n\t\t\t$this->db->update('ci_usermeta', $cleaned_data);\r\n\t\t\t\r\n\t\t\t$update_meta_check = $this->db->get_where('ci_usermeta', array('user_id' => $user_id, 'meta_key' => $meta_key, 'meta_value' => $meta_value), 1, 0);\r\n\t\t\t\r\n\t\t\tif($update_meta_check->num_rows() > 0){\r\n\t\t\t\treturn true;\r\n\t\t\t} else {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\tself::add_user_meta($user_id, $meta_key, $meta_value);\r\n\t\t\treturn true;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\tpublic function delete_user_meta($user_id, $meta_key = '') {\r\n\t\t\r\n\t\tif(!empty($meta_key)){\r\n\t\t\t$user_metadata = array(\r\n\t\t\t\t'user_id'\t\t\t=>\t$user_id,\r\n\t\t\t\t'meta_key'\t\t\t=>\t$meta_key\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\t$user_metadata = array(\r\n\t\t\t\t'user_id'\t\t\t=>\t$user_id\r\n\t\t\t);\r\n\t\t}\r\n\t\t\r\n\t\t$cleaned_data = $this->security->xss_clean($user_metadata);\r\n\t\t\t\r\n\t\t$this->db->where($cleaned_data);\r\n\t\t$this->db->delete('ci_usermeta');\r\n\r\n\t\t$delete_meta_check = $this->db->get_where('ci_usermeta', $user_metadata, 1, 0);\r\n\t\t\t\r\n\t\tif($delete_meta_check->num_rows() == 0){\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\tpublic function get_user_meta($user_id, $key = '', $single = TRUE) {\r\n\t\t\r\n\t\t$where = '';\r\n\t\t\r\n\t\tif($key){\r\n\t\t\t$where .= ' AND meta_key = \"'.$key.'\"';\r\n\t\t}\r\n\t\t\r\n\t\t$user_meta = $this->db->query('SELECT * FROM ci_usermeta WHERE user_id = ?'.$where, array($user_id) );\r\n\t\t\r\n\t\tif($single){\r\n\t\t\r\n\t\t\t$row = $user_meta->row();\r\n\t\t\tif($row){\r\n\t\t\t\treturn $row->meta_value;\r\n\t\t\t} else {\r\n\t\t\t\treturn '';\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t} else {\r\n\t\t\treturn $user_meta->result();\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\tpublic function update_user($userdata_array) {\r\n\t\t\r\n\t\textract($userdata_array); \r\n\t\t$data = '';\r\n\t\t\r\n\t\tif(!empty($user_login)){\r\n\t\t\t$data['user_login'] = $user_login;\r\n\t\t}\r\n\t\tif(!empty($user_email)){\r\n\t\t\t$data['user_email'] = $user_email; \r\n\t\t\t$data['user_nicename'] = url_title($user_email, 'dash', TRUE);\r\n\t\t}\r\n\t\tif(!empty($user_pass)){\r\n\t\t\t$data['user_pass'] = $this->passwordhash->HashPassword($user_pass);\r\n\t\t}\r\n\t\t\t\t\r\n\t\t$cleaned_data = $this->security->xss_clean($data);\r\n\t\t\r\n\t\t$this->db->update('ci_users', $cleaned_data);\r\n\t\t\r\n\t}\r\n\t\r\n\tpublic function delete_user($user_id) {\r\n\t\t\r\n\t\t$this->db->delete('ci_users', array('ID' => $user_id));\r\n\t\tself::delete_user_meta($user_id);\r\n\t\t\r\n\t\t$delete_check = $this->db->query('SELECT * from ci_users u LEFT JOIN ci_usermeta um ON u.ID = um.user_id WHERE u.ID = ?', array($user_id) );\r\n\t\t\r\n\t\tif($delete_check->num_rows() == 0){\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\t\r\n}\r\n[\/cc]\r\n\r\n<h3>Usage<\/h3>\r\n\r\nIn your controller \"___construct\" function, load the user_model:\r\n<code>$this->load->model('user_model');<\/code> \r\n\r\nThen in your PAGE controller, assign the model into a variable:\r\n<code>$data['user'] = $this->user_model;<\/code>\r\n\r\nIn your View, you can call the functions like this:\r\n<code><?php echo $user->get_user_meta($current_user->ID, 'first_name'); ?><\/code>","post_title":"WordPress User Model for CodeIgniter","post_excerpt":"A usefull User Model library for your custom  Web Application","post_status":"publish","comment_status":"open","ping_status":"closed","post_password":"","post_name":"wordpress-user-model-for-codeigniter","to_ping":"","pinged":"","post_modified":"2015-01-06 10:35:25","post_modified_gmt":"2015-01-06 10:35:25","post_content_filtered":"","post_parent":0,"guid":"http:\/\/carlofontanos.com\/?p=994","menu_order":0,"post_type":"post","post_mime_type":"","comment_count":"0","filter":"raw"}]
